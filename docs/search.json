[{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"l_plot-the-basic-loon-plot","dir":"Articles","previous_headings":"","what":"l_plot() the basic loon plot","title":"Introduction to loon","text":"Begin simple scatterplot quakes data R prints information loon plot (later) causes two windows appear. One scatterplot:  “loon inspector”:  moment ’ll focus mainly scatterplot.","code":"l_plot(x = quakes$long,         y = quakes$lat,         xlabel = \"longitude\",         ylabel = \"latitude\",        title = \"Tonga trench earthquakes\") [1] \".l0.plot\" attr(,\"class\") [1] \"l_plot\" \"loon\""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"direct-manipulation-on-the-plot","dir":"Articles","previous_headings":"l_plot() the basic loon plot","what":"Direct manipulation on the plot","title":"Introduction to loon","text":"loon scatterplot highly interactive can directly manipulated using mouse. Several interactions immediately available. follows, images two button mouse (left primary, right secondary) scroll wheel used indicate interaction. colour red indicates selection, arrows double images suggest movement, modifier keys shown body mouse.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"panning","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Direct manipulation on the plot","what":"Panning","title":"Introduction to loon","text":"pan plot, select plot interior right (secondary) mouse button move mouse (button still ). direction panning can constrained holding named modifier keys panning.  Try . Select anywhere scatterplot move freely horizontally vertically Question: inspector change response movement? Reproduce movements smaller “World View” plot appearing top inspector. larger scatterplot change?","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"zooming","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Direct manipulation on the plot","what":"Zooming","title":"Introduction to loon","text":"Another way dynamically focus different parts plot zooming, using scrolling:  try , note small cluster 16 points towards top left scatterplot. scatterplot, zoom move plot around 16 points appear scatterplot use restricted horizontal vertical zooming 16 points occupy much scatterplot’s space possible Question: inspector changed response? inspector click button titled plot. happened? Using zooming panning “World View” focus scatterplot 16 points.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"selecting","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Direct manipulation on the plot","what":"Selecting","title":"Introduction to loon","text":"two ways directly select points scatterplot using mouse: either selection (one time multiple selections) “sweep selection” shown :  try , scatterplot (contain 16 points) point highlighted (magenta coloured) now 4 magenta points click background plot see change colour Question: inspector changed? Now try holding left mouse button move mouse. called sweeping sweep selection allows us sweep contiguous area plot. use sweep select identify, give different colours (none black) 4 different (roughly) contiguous groups choice 16 points. Check: 16 points now separated colour 4 groups glyph shape 2 groups. Question: inspector changed? already discovered colour selected points inspector. can now use inspector select points colour: inspector, select points colour turn.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"the-inspector-interacting-with-the-plot","dir":"Articles","previous_headings":"l_plot() the basic loon plot","what":"The inspector – interacting with the plot","title":"Introduction to loon","text":"experimentation, already discovered inspector used change loon plot. example, try checking “guides” box inspector place background grid guide lines loon plot. Unchecking removes guide lines. loon inspector consists several component pieces. top “World View” shows miniature version whole current plot, displayed , active. “World View” tabs. default (used) one “Analysis” tab common interactions separated three regions: “Plot”, “Select”, “Modify” systems. Try (order) following interactions inspector plot: select black points scale plot selected points invert selection colour selected points red select points, make open circles glyphs select red points deactivate select brushing mode brush select remaining black points dividing two groups colour one groups blue, orange turn brush re-activate points scale scatterplot “world” add guides (scales) Check: scatterplot open circles three clusters points red, blue, orange","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"on-brushing","dir":"Articles","previous_headings":"l_plot() the basic loon plot > More on direct manipulation","what":"on brushing","title":"Introduction to loon","text":"scatterplot open circles three clusters points red, blue, orange. Use functionality loon inspector (order) Using colour selection inspector, select largest group (others) Turn brushing (opposed sweeping) mode dynamic selection, choose deselect scatterplot use brush mode deselect region nearest highest density (shaped bit like question mark – ?) Colour selected points green (.e. low density region largest coloured group) now four different coloured groups clusters. fun, inspector select green group dynamic selection, choose invert move brush scatterplot move brush scatterplot holding <Shift> key Question: going ? might functionality useful?","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"on-selection","dir":"Articles","previous_headings":"l_plot() the basic loon plot > More on direct manipulation","what":"on selection","title":"Introduction to loon","text":"done, turn selection back defaults:  , [static:] none [dynamic:] select [:] sweeping Shift selection works mix individual point selection static selection dynamic selection sweeping brushing color Exercise: Try different combinations selections.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"moving-points","dir":"Articles","previous_headings":"l_plot() the basic loon plot > More on direct manipulation","what":"moving points","title":"Introduction to loon","text":"variety reasons, sometimes want (temporarily) move points scatterplot. inspector: deactivate small red group select red group scale plot selected selected points, explore effect move modifications configuration selected points describe words one scatterplot, selected points may moved hand one time using <Ctrl>-<Left-button> groups using <Shift><Ctrl><Left-button> example: select red group move red group bottom plot return red group original location","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"adding-colours-to-the-inspector","dir":"Articles","previous_headings":"l_plot() the basic loon plot > More on direct manipulation","what":"adding colours to the inspector","title":"Introduction to loon","text":"colours can added directly clicking + +5 colour modification section inspector. clicking +5 twice adds 10 new colours colours persist inspector every loon scatterplot inspector palette colours loon system default list colours get found programmatically: [1] \"gray60\"    \"#A6CEE3\"   \"pink\"      \"#B2DF8A\"   \"#FDBF6F\"   \"#FFFF99\" Note: loon colours 6 hexadecimal digits length can named R colour constrained tcl/tk colours, alpha level available time loon R similar set base colours default graphics devices: [1] \"black\"   \"#DF536B\" \"#61D04F\" \"#2297E6\" \"#28E2E5\" \"#CD0BBC\" like R palette, loon inspector palette persists.","code":"head(l_getColorList()) head(palette())"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"changing-the-inspector-palette-of-colours","dir":"Articles","previous_headings":"l_plot() the basic loon plot > More on direct manipulation","what":"changing the inspector palette of colours","title":"Introduction to loon","text":"beginning loon session (, immediately executing library(loon)) might choose change default palette inspector something suits tastes/problem. Note: may unintended side effects changing inspector colours plot (hence inspector) created avoided. variety functions exist change inspector’s palette colours: change palette execute one functions inspector open (recommended), select inspector close force refresh colour palette. l_setColorList_loon() returns inspector default loon colour palette.","code":"l_setColorList_baseR()  # base R palette l_setColorList_ColorBrewer(\"Set2\")  # colorblind friendly choice from ColorBrewer l_setColorList_hcl(luminance = 80)  # set of hcl colours l_setColorList_ggplot2()  # ggplot2's palette  l_setColorList_loon()  # default loon palette l_setColorList(l_colRemoveAlpha(rainbow(5)))  # any set of colours without alpha"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"accessing-the-plot","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Programmatic manipulation","what":"accessing the plot","title":"Introduction to loon","text":"plot (tcl) data structure can assigned R variable. Either construction (preferable way): , () forgot reassigned something else variable (likely), accessing plot tcl string: Note string \".l0.plot\" appears right side window title l_plot. assign plot p. might look window get string created one l_plot().","code":"# loon graphics (note that the result is assigned to p) p <- l_plot(x = quakes$long, y = quakes$lat,              xlabel = \"longitude\", ylabel = \"latitude\",             title = \"Tonga trench earthquakes\") # accessing the plot from its string representation p <- l_create_handle(\".l0.plot\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"printing-the-plot","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Programmatic manipulation","what":"printing the plot","title":"Introduction to loon","text":"now print p get string name plot, class attribute. value p provides us access rich data structure, one whose values reside tcl. example, can access value , like plots lattice ggplot2 produce grid data structure can displayed grid graphic R. simplest way achieve use generic R function plot() Note always reflect current state loon plot. way, can get snapshots loon plot interaction. Exercise: Try . Change p direct manipulation loon repeat. allows visual representation loon plot displayed time.","code":"p [1] \".l0.plot\" attr(,\"class\") [1] \"l_plot\" \"loon\" plot(p)"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"getting-plot-contents","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Programmatic manipulation","what":"getting plot contents","title":"Introduction to loon","text":"names associated loon plot indicating contents states: [1] \"glyph\"            \"itemLabel\"        \"showItemLabels\"   \"linkingGroup\"     \"linkingKey\"       \"zoomX\" features p can directly accessed [] function. example, [1] TRUE meaningful example might identify groups colours points. done simply follows Alternatively, function written save groups list logical vectors (one group): Similarly, point symbol characteristics (e.g. size, glyph) might used define groups. particularly handy first determined interactively.","code":"head(names(p)) p[\"showGuides\"] unique_cols <- unique(p['color']) group1 <- p['color'] == unique_cols[1] # Number in group 1 (e.g. as you might have -- here from saved colours) sum(group1) [1] 425 # Data on first few quakes in group 1. head(quakes[group1,]) lat   long depth mag stations 1  -20.42 181.62   562 4.8       41 2  -20.62 181.03   650 4.2       15 4  -17.97 181.66   626 4.1       19 5  -20.42 181.96   649 4.0       11 10 -17.47 179.59   622 4.3       19 11 -21.44 180.69   583 4.4       13 getGroups <- function(loonplot){     # make sure it is an \"l_plot\"     if (!is(loonplot, \"l_plot\")) stop(\"loonplot must be an l_plot\")          # use color to identify groups     unique_cols <- unique(loonplot['color'])     lapply(unique_cols,            FUN = function(col){loonplot['color'] == col}            ) }  myGroups <- getGroups(p)    # returns groups identified by unique colour in p nGroups <- length(myGroups) # number of groups group1 <- myGroups[[1]]     # each group is an element of the list myGroups"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"setting-plot-contents","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Programmatic manipulation","what":"setting plot contents","title":"Introduction to loon","text":"addition accessing state values loon plot using [], values may also set using []. example, try :","code":"p[\"showGuides\"] <- TRUE  p[\"size\"] <- sample(1:30, size = length(p[\"x\"]), replace = TRUE)  for (i in 1:length(myGroups))  {     p[\"selected\"] <- myGroups[[i]]     Sys.sleep(1) } p[\"selected\"] <- FALSE  # something a little more involved for up to 6 groups myCols <- c(\"firebrick\", \"steelblue\", \"purple\",              \"orange\", \"grey10\", \"grey80\") for (i in 1:length(myGroups)) {     p[\"color\"][myGroups[[i]]] <- myCols[i] }  # something crazy for (j in 1:10) {   p[\"xTemp\"] <- p[\"x\"] + runif(length(p[\"x\"]), min = -0.5, max = 0.5)   Sys.sleep(0.1) }  # putting locations and size back p[\"xTemp\"] <- p[\"x\"] p[\"size\"] <- 4"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"adding-layers","dir":"Articles","previous_headings":"l_plot() the basic loon plot","what":"Adding layers","title":"Introduction to loon","text":"loon plots actually little richer still. scatterplot one possible layer plot. many , layer different geometric objects.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"example-adding-maps","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Adding layers","what":"Example: adding maps","title":"Introduction to loon","text":"example, can add map current loon plot p. First get relevant map: added “layer” loon plot Try .   can seen world view, much map outside plot display (shown black-bordered rectangle world view). Now play scaling buttons loon inspector.","code":"library(maps) NZFijiMap <- map(\"world2\", regions = c(\"New Zealand\", \"Fiji\"), plot = FALSE) l_layer(p, NZFijiMap,          label = \"New Zealand and Fiji\",         color = \"forestgreen\",         index = \"end\") loon layer \"New Zealand and Fiji\" of type polygons of plot .l0.plot [1] \"layer0\""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"effect-of-scaling-choices","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Adding layers","what":"Effect of scaling choices","title":"Introduction to loon","text":"Adding map allows us see effect three plot scaling choices available inspector. effect best seen world view:  Note plot world view matches actual plot. Also aspect ratio changes scaling.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"the-layers-tab","dir":"Articles","previous_headings":"l_plot() the basic loon plot > Adding layers","what":"the “Layers” tab","title":"Introduction to loon","text":"map added layer, can seen selecting “Layers” tab inspector:  allows lot interaction layers - example changing display order, making invisible, grouping layers, .","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"syntax-loons-l_plot-is-like-base-graphics-plot","dir":"Articles","previous_headings":"l_plot() the basic loon plot","what":"Syntax: loon’s l_plot() is like base graphics plot()","title":"Introduction to loon","text":"loon’s l_plot() syntax intentionally resembles plot() base graphics package: arguments l_plot() provide initial values named state. Note argument names l_plot slightly different. result, however, loon plots quite different displays look different rich data structure many states can transformed grob either inspector programmatically loon, function plot.loon() method base plot() generic function turns loon plot (first argument plot.loon()) grid object plots current R graphics device.","code":"# Base graphics plot(x = quakes$long, y = quakes$lat,       xlab = \"longitude\", ylab = \"latitude\",      main = \"Tonga trench earthquakes\")  # loon graphics l_plot(x = quakes$long, y = quakes$lat,         xlabel = \"longitude\", ylabel = \"latitude\",        title = \"Tonga trench earthquakes\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"l_hist-the-loon-histogram","dir":"Articles","previous_headings":"","what":"l_hist() the loon histogram","title":"Introduction to loon","text":"seen earlier, quakes data variates addition latitude longitude quakes. starting, make sure four groups coloured loon plot p described earlier. don’t, colour now. Let’s consider histogram depth earthquake. Note inspector changed. different inspector type base loon plot. Exercise: plot section histogram inspector, select yshows: density histogram, see individual bars can selected happens modify colour? can make go away? histogram inspector, turn stacked colours select colours histogram","code":"h <- l_hist(quakes$depth,              xlabel = \"depth\",              title = \"Tonga trench earthquakes\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"linking","dir":"Articles","previous_headings":"","what":"Linking","title":"Introduction to loon","text":"Now scatterplot histogram, can explore one important features interactive data visualization system like loon.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"linkinggroup","dir":"Articles","previous_headings":"Linking","what":"linkingGroup","title":"Introduction to loon","text":"principal feature loon plots effect linking displays setting common linkingGroup. histogram inspector, says linking group, select text “none” replace “quakes” scatterplot inspector, now prompted either “push” “pull”. Select “push”. NOTE: Programmatically, might tried set linking group directly plot resulted error. problem synchronization must set time determine linked states drawn . effect , loon command l_confiure() must used whenever two states set simultaneously. correct programmatic setting “linkingGroup” causes h push linked states “quakes” group p pull “quakes” group. (example, “pull” used cases generally recommended.) brush scatterplot observe effects histogram brush histogram observe effects scatterplot shape brush tall thin brush left right right left (.e. shallow deeper earthquake depths) also set colours programmatically histogram. colour histogram bars earthquakes deepest darkest.","code":"h[\"linkingGroup\"] <- \"quakes\" p[\"linkingGroup\"] <- \"quakes\" l_configure(h, linkingGroup = \"quakes\", sync = \"push\") l_configure(p, linkingGroup = \"quakes\", sync = \"pull\") blues5 <- blues9[c(2,4,6,8,9)] # select 5 from light blue to dark h[\"color\"] <- blues5[cut(quakes$depth, breaks=5)] # assign colours by depth p[\"glyph\"] <- \"ccircle\" p[\"showGuides\"] <- TRUE # plot(p) # will print the plot"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"linking-many-plots","dir":"Articles","previous_headings":"Linking","what":"linking many plots","title":"Introduction to loon","text":"Arbitrarily many plots may created linked loon. Consider, example, adding two histograms linkingGroup. Note linking done creation synchronization default “pull”. Brush show relationship magnitude earthquake number stations reporting. Alternatively, look linked scatterplot two variates explore relationship conditional depth Brushing one plots cause plots highlight response. Note selection effectively shows relations one plot conditional upon values actively selected (e.g. brushed) another.","code":"h_mag <- l_hist(x = quakes$mag,                  linkingGroup = \"quakes\",                  showStackedColors = TRUE,                 yshows = \"density\",                 xlabel = \"magnitude\")  h_stations <- l_hist(x = quakes$stations,                       linkingGroup = \"quakes\",                       showStackedColors = TRUE,                      yshows = \"density\",                      xlabel = \"Number of stations reporting\") p_mag_stations <- l_plot(x = quakes$mag,                           y = quakes$stations,                           showGuides = TRUE,                          glyph = \"ccircle\",                          linkingGroup = \"quakes\",                           xlabel = \"Magnitude\",                           ylabel = \"Number of stations reporting\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"linkingkey","dir":"Articles","previous_headings":"Linking","what":"linkingKey","title":"Introduction to loon","text":"Observations loon plot uniquely identified (purpose linking) linkingKey. Pardon pun key linking loon. part, default linking ever need . Trouble may arise, however, want link two different plots created different data frames whose rows match row row. example, one data.frame might re-ordering rows . , might subset rows . either case, linking work properly linkingKey plots associated two data frames need managed. example, new plots p_new p_subset link correctly rest. Rather default values, linkingKey can vector unique strings used newly created plot . course, using default linking keys loon may require little care management user.","code":"new_order <- sample(1:nrow(quakes), nrow(quakes), replace = FALSE) some_quakes <- sample(1:nrow(quakes), 100, replace = FALSE) quakes_linkingKey <- p[\"linkingKey\"] p_new <- with(quakes[new_order, ], l_plot(long, lat, title = \"quakes reordered\",     linkingGroup = \"quakes\", linkingKey = quakes_linkingKey[new_order])) p_subset <- with(quakes[some_quakes, ], l_plot(long, lat, title = \"quakes reordered\",     linkingGroup = \"quakes\", linkingKey = quakes_linkingKey[some_quakes]))"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"three-dimensional-plots---l_plot3d","dir":"Articles","previous_headings":"","what":"Three dimensional plots - l_plot3D","title":"Introduction to loon","text":"Given quakes data three spatial dimensions (long, lat, depth), natural view three dimensional scatterplot. Select plot, type r turn rotation mode. Press arrow keyboard darkest points (deepest quakes) bottom display. Press r turn rotation mode. Selecting plot, key r toggles rotation mode; arrow keys rotate plot vertically horizontally. rotation mode plot may also rotated free hand using mouse. rotation mode toggled (key r), plot can brushed et cetera l_plot. See help(\"l_plot3D\") details. NOTE Many methods exist visualizing higher dimensional data loon. e.g. see help(\"l_navgraph\"), help(\"l_pairs\"), help(\"l_serialaxes\"). See also online manual l_web().","code":"# First, scale the data scaled_quakes <- l_scale3D(quakes)  p_mag_stations <- l_plot3D(x = scaled_quakes$long,                              y = scaled_quakes$lat,                             z = scaled_quakes$depth,                             showGuides = TRUE,                            linkingGroup = \"quakes\",                             title = \"Three dimensional plot of quakes\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"extras","dir":"Articles","previous_headings":"","what":"Extras","title":"Introduction to loon","text":"Miscellaneous topics sources working programming loon.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"more-examples","dir":"Articles","previous_headings":"Extras","what":"More examples","title":"Introduction to loon","text":"able get set plot contents means possible capture different plot states grobs. variety ways see might put loon use. course many smaller examples available loon’s R documentation available via complex examples general discussion via loon’s online web documentation","code":"help(package = \"loon\") l_web() # or more generally via the online loon (with complex examples) l_help()"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"other-vignettes","dir":"Articles","previous_headings":"Extras > More examples","what":"Other vignettes","title":"Introduction to loon","text":"vignettes developed cover range topics. currently include: example exploratory analysis: “Visible minorities Canadian cities” available via illustrates variety loon features including map layers, parallel coordinate axes, radial axes glyphs context exploratory analysis distribution visible minorities 33 Canadian cities. New interactive graphics loon teaching example: “Smoothers Bone Mineral Density” available via illustrates create new interactions loon general bindings. done developing teaching tool explaining smoothing works. example data set bone loon.data package. suggestions integrating loon plots Rmarkdown document: “Loon RMarkdown” via","code":"vignette(\"minorities\", package = \"loon\") vignette(\"teaching-example-smoothing\", package = \"loon\") vignette(\"Rmarkdown\", package = \"loon\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"loon-demos","dir":"Articles","previous_headings":"Extras > More examples","what":"loon demos","title":"Introduction to loon","text":"numerous demos loon whose source code might examined examples using loon. see range quite broad. example, code appears console demo can examined reused create loony loon code.","code":"demo(package = \"loon\")  # list all demos ### teaching demos demo(\"l_regression\", package = \"loon\")  # lots using the Old Faithful geyser demo(\"l_regression_influential\", package = \"loon\")  # change points change the regression fit  ### gapminder demo(\"l_us_and_them\", package = \"loon\")  #  basic demo demo(\"l_us_and_them_slider\", package = \"loon\")  # year selected on a slider demo(\"l_us_and_them_choropleth\", package = \"loon\")  # world map and linked with a scatterplot  ### the spatial package sp demo(\"l_polygons_sp\", package = \"loon\")  # layer polygons with class sp   ### layering and custom layouts demo(\"l_layers\")  # demonstrate layer types    demo(\"l_layout\")  # custom layout widgets       demo(\"l_widgets\")  # inspector and plot in one window  ### novel brushing and linking demo(\"l_knn\")  # brushing by k nearest points in some subspace demo(\"l_us_and_them_choropleth\")  # many to one linking   ### high dimensional data and dimensionality reduction demo(\"l_ng_images_frey_LLE\")  # navigation graphs, image data, LLE demo(\"l_ng_dimred\")  # comparing dimension reduction methods"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"zenplots","dir":"Articles","previous_headings":"Extras > Extensions to loon via other packages","what":"zenplots","title":"Introduction to loon","text":"package available CRAN. Provides means compact layout alternating 1d (e.g. histograms) 2d (e.g. scatterplots) plots. layout base graphics plots, grid graphics plots, loon plots. similar pairs plots allows many many plots displayed. introductory vignette: “zenplot can show information pairs plot two important display differences. First, matrix organization pairs layout replaced “zig-zag” layout zenplot. Second, number plots produced half pairs plot allowing plot zenplot given visual space.”","code":"install.packages(\"zenplots\") vignette(\"intro\", package = \"zenplots\")"},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"specialty-loon-extensions---loon-specialty-packages","dir":"Articles","previous_headings":"Extras > Extensions to loon via other packages","what":"Specialty loon extensions - loon.<specialty> packages","title":"Introduction to loon","text":"/packages available build loon. developed us typically prefixed loon (e.g. loon.ggplot) typically CRAN ready, development versions accessible great northern diver github repositories. example, https://github.com/great-northern-diver can see related packages well coming .","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/introduction.html","id":"more-on-grid-graphics-and-loon","dir":"Articles","previous_headings":"Extras","what":"More on grid graphics and loon","title":"Introduction to loon","text":"Graphics grid package built graphical objects grobs. loon, functions grid.loon() loonGrob() construct grobs loon plots can used grob grid example, transformed grid, loon plot p structure becomes gTree grid. simply produces grid data structure corresponding current state loon plot p, can seen listing contents: grob gp now used functionality grid package. Note elements loon plot appear grob, either explicitly , drawn loon plot, empty grob containing relevant arguments drawing . Another function loon help grid.loon() function display p grid graphic … entails.","code":"gp <- loonGrob(p) gp gTree[GRID.gTree.33] library(grid) grid.ls(gp)  # lists the contents of the grob library(grid) grid.newpage() grid.loon(p)"},{"path":"https://great-northern-diver.github.io/loon/articles/logicalQueries.html","id":"the-cars-of-the-1974-motor-trends-magazine","dir":"Articles","previous_headings":"","what":"The cars of the 1974 Motor Trends magazine","title":"Logical queries","text":"Begin classic data set R – mtcars. sake illustration, enrichment variables values made: illustration, convenient separate categorical continuous data. varTypes list two named components: categorical numeric.","code":"data(mtcars, package = \"datasets\")  mtcars$country <- c(\"Japan\", \"Japan\", \"Japan\", \"USA\", \"USA\", \"USA\", \"USA\",                      \"Germany\", \"Germany\", \"Germany\", \"Germany\", \"Germany\",                      \"Germany\", \"Germany\", \"USA\", \"USA\", \"USA\", \"Italy\",                      \"Japan\", \"Japan\", \"Japan\", \"USA\", \"USA\", \"USA\", \"USA\",                      \"Italy\", \"Germany\", \"UK\", \"USA\", \"Italy\", \"italy\", \"Sweden\") mtcars$continent <- c(\"Asia\", \"Asia\", \"Asia\", \"North America\", \"North America\",                        \"North America\", \"North America\", \"Europe\", \"Europe\",                        \"Europe\", \"Europe\", \"Europe\", \"Europe\", \"Europe\",                         \"North America\", \"North America\", \"North America\",                        \"Europe\", \"Asia\", \"Asia\", \"Asia\", \"North America\",                        \"North America\", \"North America\", \"North America\",                        \"Europe\", \"Europe\", \"Europe\", \"North America\",                        \"Europe\", \"Europe\", \"Europe\" ) mtcars$company <- c(\"Mazda\", \"Mazda\", \"Nissan\", \"AMC\", \"AMC\", \"Chrysler\",                      \"Chrysler\", \"Mercedes\", \"Mercedes\", \"Mercedes\", \"Mercedes\",                     \"Mercedes\", \"Mercedes\", \"Mercedes\", \"GM\", \"Ford\",                      \"Chrysler\", \"Fiat\", \"Honda\", \"Toyota\", \"Toyota\", \"Chrysler\",                      \"AMC\", \"GM\", \"GM\", \"Fiat\", \"Porsche\", \"Lotus\", \"Ford\",                      \"Ferrari\", \"Maserati\", \"Volvo\")  mtcars$Engine <- factor(c(\"V-shaped\", \"Straight\")[mtcars$vs +1],                          levels = c(\"V-shaped\", \"Straight\")) mtcars$Transmission <- factor(c(\"automatic\", \"manual\")[mtcars$am +1],                                levels = c(\"automatic\", \"manual\"))  mtcars$vs <- NULL  # These are redundant now mtcars$am <- NULL  # varTypes <- split(names(mtcars),                    sapply(mtcars,                           FUN = function(x){                              if(is.factor(x)|is.character(x)){                                   \"categorical\"                                   } else {\"numeric\"} } ))"},{"path":"https://great-northern-diver.github.io/loon/articles/logicalQueries.html","id":"some-interactive-plots","dir":"Articles","previous_headings":"","what":"Some interactive plots","title":"Logical queries","text":"explore data, several interactive plots likely constructed. Typically, constructed one time assigned linking group (perhaps via inspector). , histograms/barplots constructed categorical variable assigned variable name now prefixed h_ “histogram”. evaluated vignette. Note linkingGroup. linked plots might exist well – example, scatterplot gear (number forward gears) versus disp (engine displacement cubic inches). Note - car’s name appears itemLabel point plot (revealed “tooltip” style pop ), - plot p linking group histograms. combination selection, inversion, deactivation, reactivation, logical queries may made interactively data. simplicity, basic logical operators illustrated using histograms. generally, apply interactive loon graphic.","code":"for (varName in varTypes$categorical) {     assign(paste0(\"h_\", varName),            l_hist(mtcars[ , varName], showFactors = TRUE,                     xlabel = varName, title = varName,                    linkingGroup = \"Motor Trend\")) } p <- with(mtcars, l_plot(disp, cyl,                           xlabel = \"engine displacement\", ylabel = \"number of cylinders\",                          title = \"1974 Motor Trend cars\",                           linkingGroup = \"Motor Trend\",                          size = 10, showScales = TRUE,                          itemLabel = rownames(mtcars), showItemLabels = TRUE                          ))"},{"path":"https://great-northern-diver.github.io/loon/articles/logicalQueries.html","id":"interactive-logical-operations","dir":"Articles","previous_headings":"","what":"Interactive logical operations","title":"Logical queries","text":"Five logical conditions/operations illustrated basic ones: TRUE Negation: () TRUE Inclusive : (B) TRUE (one ), Conjunction: (B) TRUE Exclusive : (XOR B) meaning (TRUE) (B TRUE) (B) FALSE corresponds sequence actions plots /inspector. Whatever highlighted end corresponds result. , simplicity operations illustrated interacting values categorical variates various histograms. logical elements also satisfying numerical constraints undertaking corresponding actions scatterplot (histogram continuous values). logical operator illustrated turn: (== ) plot select , e.g., click \"manual\" bar Transmission histogram highlighted ⇔\\iffTransmission == \"manual\" TRUE (=¯= \\overline{}~~ ¬~~\\neg ) plot select , inspector click invert e.g., click \"North America\" bar continent histogram, invert highlighted ⇔\\iffcontinent == \"North America\" FALSE highlighted \"North America\", namely \"Asia\" \"Europe\" B (=∪B= \\cup B~~ ∨B~~\\lor B), plot select , (different linked) plot <SHIFT>- select B e.g., click \"manual\" bar Transmission histogram, holding <SHIFT> key, click Mercedes bar company histogram highlighted ⇔\\iffTransmission == \"manual\" TRUE company = \"Mercedes\" TRUE () B (=∩B= \\cap B ∧BA \\land B) lots solutions, one always works plot select , inspector, invert deactivate (remains), plot remaining select B, inspector reactivate elements highlighted ⇔∩B\\iff \\cap B e.g. try highlighting European cars manual transmissions. XOR B (=(∪B)∩(∩B¯)= (\\cup B) \\cap (\\overline{\\cap B}) (∨B)∧¬(∧B)(\\lor B) \\land \\neg({\\land B})) following steps 4, select B, inspector invert deactivate (¬(∧B)\\neg({\\land B}) remains) following steps 3, select B, inspector reactivate (XOR B highlighted) logical conditions (including numerical ones disp > 300 scatterplot p) constructed combination (exclusive ). can quite complex may help, number steps, mark intermediary results colour (also glyph scatterplots). Note possibly missing data, linked plots may share set observations.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/logicalQueries.html","id":"missing-data-and-linking-keys","dir":"Articles","previous_headings":"","what":"Missing data and linking keys","title":"Logical queries","text":"mtcars data example complete data set. missing values, appear loon plots require . example, suppose data four variables , B, C, D, wherever NA appears , B, C, point missing p_test Note generally good idea use C simple display characteristic like color indeed C missing values since remove non-missing x y values plot. values x y accessible plot logical queries, wherever NA appears either C D, point missing h_test Using logical operations original data change plot properties (e.g. select values) can challenging data values missing plot (since missing depends missing time construction). example, may work! logical operation data (data$> 0) typically longer corresponding x value p_test[\"x\"] plot work. Even logical vector right length (contains NAs ), values may correctly match data points. two general approaches logical queries data contains NAs. Using complete data , like mtcars, data used contains NAs conducting logical queries plot identical conducting data. data complete (contains one NA), can made complete removing observations (rows) contain NA. E.g. replacing data c_data <- na.omit(data). logic c_data match plots made c_data. depending amount pattern missing data, critically reduce amount data analysis. Using information loon plots. course, recommended approach data missing. Logical queries can made directly plots, either interactively described previous sections, , programmatically p_test[\"x\"] > 0 place data$> 0. directly data applied plots help manage , linkingKey plot can used. default value plot character vector entries \"0\" \"n-1\" n =nrow(data)`. easily turned row numbers original data. E.g. p_test row numbers data correspond points 1 + .numeric(p_test[\"linkingKey\"]) Logical values rows data can select points p follows Similarly h_test. E.g., compare p_test[\"linkingKey\"] h_test[\"linkingKey]\". Note: user can always provide character vector linkingKey plots. E.g., linkingKey = rownames(data) , care may needed use identify rows logical vector.","code":"data <- data.frame(A = sample(c(rnorm(10), NA), 10, replace = FALSE),                    B = sample(c(rnorm(10), NA), 10, replace = FALSE),                    C = sample(c(\"firebrick\", \"steelblue\", NA), 10, replace = TRUE),                    D = sample(c(1:10, NA), 10, replace = FALSE)) p_test <- l_plot(x = data$A, y = data$B, color = data$C, linkingGroup = \"test missing\") h_test <- l_hist(x = data$D, color = data$C, linkingGroup = \"test missing\") p_test[\"selected\"] <- (data$A > 0) LogVal <- data$A > data$B p[\"selected\"] <- logVal[1 + as.numeric(p_test[\"linkingKey\"])]"},{"path":"https://great-northern-diver.github.io/loon/articles/logicalQueries.html","id":"loons-linking-model","dir":"Articles","previous_headings":"Missing data and linking keys","what":"loon’s linking model","title":"Logical queries","text":"Loon’s linking model following three parts linkingGroup identifies plots linked linkingKey, character vector element key uniquely identifying single observation plot (two observations plot can value linking key), linked display states plot declared (e.g. see l_getlinkedStates()). Observations different plots (linking group) linked (linked states change together) linking key. Points appearing different plots (linkingGroup) matched value linkingKey share value linked states.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"producing-static-grid-plots","dir":"Articles","previous_headings":"","what":"Producing static grid plots","title":"Loon plots and grid graphics","text":"grid graphics package one fundamental graphics systems R. provides low-level, general purpose graphics system producing wide variety plots. Many well-known graphical systems, e.g. lattice ggplot2, use grid draw plots. loon plots transformed grid graphics plots provide, close possible, wysiwyg snapshot interactive plot. grid graphics plots, turn can edited using various grid functions. Begin classic data set R – mtcars contains 32 automobiles 11 (numeric) variables. , p loon widget. aesthetics attributes can accessed either function l_cget() simple [, returned values always reflect current states p. example, suppose size points modified 6 direct manipulations plot, call p['size'], length 32 vector 6 returned. handy “querying tool”, essential elements loon widget can accessed construct selfsame grid graphics, produced printed plot p (presently appears) first translating loon plot grid graphics object (grob). can used time, including RMarkdown document (). users, need done. vignette end . users might also interested turning loon plots ggplots (vice versa); , information provided towards end vignette ggplots section. interested deeper understanding grid plots, read . Note: plot() function simply wrapper function around workhorse function loonGrob() translatation current display loon plot grid object (grob) capturing features loon display. resulting grob drawn using grid.draw() grid package.","code":"library(loon) p <- with(mtcars, l_plot(mpg, hp,                           size = 8,                          showScales = TRUE)) # x coordinates p['x'] ## [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 ## [14] 15.2 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 ## [27] 26.0 30.4 15.8 19.7 15.0 21.4 # point size p['size'] ## [1] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 # `p` is a loon widget plot(p)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"loongrob-loon-grid-object","dir":"Articles","previous_headings":"Producing static grid plots","what":"loonGrob(): loon –> grid object","title":"Loon plots and grid graphics","text":"grid graphic plot saved assigning variable created. Either drawing time (side-effect) postponing drawing later Either way, grid data structure created assigned variable g0. Alternatively, loonGrob() can called directly, returns grid graphics object grob. can drawn time using grid.draw() grid package.","code":"g0 <- plot(p) g0 <- plot(p, draw = FALSE) g0 <- loonGrob(p) library(grid) grid.newpage() grid.draw(g0)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"multiple-plots","dir":"Articles","previous_headings":"Producing static grid plots","what":"multiple plots","title":"Loon plots and grid graphics","text":"grob, output loonGrob()ccan manipulated can grid data structure – perhaps arranging several compound display using grid.arrange() (gridExtra package). example, might several stages interactive plot ow might captured. might constructed programmatically drawn single display arrangement positioned within another arrrangement.","code":"oldColor <- p[\"color\"] set.seed(3141) selection <- sample(c(TRUE, FALSE),                      size = length(oldColor),                      replace = TRUE) p[\"color\"]  <- selection gtrans <- loonGrob(p) p[\"active\"] <- selection gauto <- loonGrob(p) p[\"active\"] <- !selection gmanual <- loonGrob(p) p[\"active\"] <- TRUE p[\"color\"] <- oldColor library(gridExtra) grid.newpage() grid.arrange(g0, gtrans, gauto, gmanual, nrow = 2)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"the-data-structure-returned-by-loongrob","dir":"Articles","previous_headings":"Producing static grid plots","what":"the data structure returned by loonGrob()","title":"Loon plots and grid graphics","text":"returned data structure gTree object tree data structure grid contains many grobs needed draw plot demand. Numerous functions exist within grid package validating, drawing, modifying grid graphical objects like gTree many elements. tree structure g0 easily seen using grid.ls() list contents: levels indicated indenting. following figure renders tree structure generally:  Node labels give loonGrob names tree hierarchy following solid lines left right. Grey values indicate types loon plots (separate braces) identify potential options peculiar loon plot. example, root node “l_plot” contains “bounding box” “loon plot”, loon plot “guides”, “labels”, “axes”, “clipping region”, “boundary rectangle” “l_xxxx_layers” (according type loon plot), loon plot p “l_plot_layers” consisting “scatterplot” possibly layers like lines .","code":"class(g0) ## [1] \"gTree\" \"grob\"  \"gDesc\" grid.ls(g0) ## GRID.gTree.2 ##   l_plot ##     bounding box ##     loon plot ##       guides ##         guides background ##         guidelines: xaxis (major), x = 15 ##         guidelines: xaxis (major), x = 25 ##         guidelines: xaxis (major), x = 35 ##         guidelines: xaxis (minor), x = 10 ##         guidelines: xaxis (minor), x = 20 ##         guidelines: xaxis (minor), x = 30 ##         guidelines: yaxis (major), y = 100 ##         guidelines: yaxis (major), y = 200 ##         guidelines: yaxis (major), y = 300 ##         guidelines: yaxis (minor), y = 50 ##         guidelines: yaxis (minor), y = 150 ##         guidelines: yaxis (minor), y = 250 ##         guidelines: yaxis (minor), y = 350 ##       labels ##         x label ##         y label ##         title: textGrob arguments ##       axes ##         x axis ##           major ##           ticks ##           labels ##         y axis ##           major ##           ticks ##           labels ##       clipping region ##       l_plot_layers ##         scatterplot ##           points: primitive glyphs ##       boundary rectangle"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"changing-a-grid-object-get-edit-set","dir":"Articles","previous_headings":"Producing static grid plots","what":"changing a grid object: get, edit, set","title":"Loon plots and grid graphics","text":"Knowing labels, one can retrieve, edit, even replace fine details static plot. example, consider “xlabel” “ylabel” gTree. label (appears list gTree) provides path corresponding grob. Changes existing grid plot made three steps: getGrob() get copy grob changed editGrob() produce grob desired changes, setGrob() set newly produced grob appropriate place plot. now illustrated turn.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"getgrob","dir":"Articles","previous_headings":"Producing static grid plots > changing a grid object: get, edit, set","what":"getGrob()","title":"Loon plots and grid graphics","text":"Knowing path “x label” gTree g0, grob extracted using getGrob(). example, structure: Note xlabelGrob copy grob found “x label” path g0. Similarly grobs paths (e.g., “y label”) extracted copied. Note also elements gTree appearing listing grid.ls(g0) actually parts grob path . example, consider x-axis elements:","code":"# retrieve xlabel grob xlabelGrob <- getGrob(g0, \"x label\") xlabelGrob ## text[x label] class(xlabelGrob) ## [1] \"text\"  \"grob\"  \"gDesc\" names(xlabelGrob) ##  [1] \"label\"         \"x\"             \"y\"             \"just\"          ##  [5] \"hjust\"         \"vjust\"         \"rot\"           \"check.overlap\" ##  [9] \"name\"          \"gp\"            \"vp\" xlabelGrob$label ## [1] \"mpg\" xAxisGrob <- getGrob(g0, \"x axis\") names(xAxisGrob) ## [1] \"major\"  \"ticks\"  \"labels\" names(xAxisGrob$children) ## [1] \"at\"            \"label\"         \"main\"          \"edits\"         ## [5] \"name\"          \"gp\"            \"vp\"            \"children\"      ## [9] \"childrenOrder\""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"editgrob","dir":"Articles","previous_headings":"Producing static grid plots > changing a grid object: get, edit, set","what":"editGrob()","title":"Loon plots and grid graphics","text":"xlabelGrob hand, can use create another copy changed features using editGrob(). example, meaningful x axis “label” name can assigned: newGrob now textGrob informative label:","code":"newGrob = editGrob(xlabelGrob,                     label = \"Miles per (US) gallon\") class(newGrob) ## [1] \"text\"  \"grob\"  \"gDesc\" newGrob$label ## [1] \"Miles per (US) gallon\""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"setgrob","dir":"Articles","previous_headings":"Producing static grid plots > changing a grid object: get, edit, set","what":"setGrob()","title":"Loon plots and grid graphics","text":"complete change g0, old “x label” needs replaced newGrob: Now “xlabel” changed “Miles/(US) gallon” within grid plot g0. way, features “x label” changed well grobs paths gTree returned loonGrob().","code":"g0 <- setGrob(gTree = g0,                gPath = \"x label\",               newGrob = newGrob) grid.newpage() grid.draw(g0)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"adding-an-alpha-channel-to-the-points","dir":"Articles","previous_headings":"Producing static grid plots","what":"adding an alpha channel to the points","title":"Loon plots and grid graphics","text":"common place reason edit add features grid plot available loon. example, transparency (presently) missing tcltk colours (loon based) – tcltk system presently uses 12 digit hexadecimal colour represent three channels (one RGB colours) fourth channel indicating alpha transparency. contrast, transparency accommodated grid graphics one might choose set alpha values transformation. points plot can made transparent using setGrob(), editGrob(), getGrob(), given path points grob, namely “points: primitive glyphs”. modification, points now transparent size made larger.","code":"pathGrob <- \"points: primitive glyphs\" newLoonPointsGrob <-    editGrob(     getGrob(g0, pathGrob),      gp = gpar(fill = as_hex6color(p['color']),               col = l_getOption(\"foreground\"),               fontsize = 20, # give a larger point size,               alpha = 0.3 # turn color transparent               )     ) # update loon points grob g0 <- setGrob(   gTree = g0,   gPath = \"points: primitive glyphs\",   newGrob = newLoonPointsGrob ) grid.newpage() grid.draw(g0)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"helper-functions-from-loon","dir":"Articles","previous_headings":"Producing static grid plots","what":"helper functions from loon","title":"Loon plots and grid graphics","text":"Three loon helper functions simplify editing gTree produced loon special case grobs gTree incompletely specified. three helper functions l_instantiateGrob() instatiates complete grob using information available incomplete description grob; l_setGrobPlotView() resets margins grid plot loon plot labels scales shown (margin sizes specified arguments); l_updateGrob() behaves much like editGrob() except can work incomplete grob descriptions called l_instantiateGrob(). See help(\"loonGrobInstantiation\") . Common cases functions might used pieces plot rendered invisible.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"e-g--missing-title","dir":"Articles","previous_headings":"Producing static grid plots > helper functions from loon","what":"e.g. missing title","title":"Loon plots and grid graphics","text":"plot p given title title appears g0 drawn. Nevertheless, gTree g0 appear title information indicated path “title: textGrob arguments”. indication loonGrob() transfer title information p g0 incomplete way. access grob path, empty label string , looking class: appears text grob. Instead, incomplete description, gDesc, grob. Note fontsize chosen small fit space available. little room standard title margins loon plot p smaller title. alternative making font small return loon (alternatively user specified) margins plot using l_setGrobPlotView(): displays title default fontsize (translating p). extra room title also admit larger font sizes.","code":"titleGrob <- getGrob(g0, \"title: textGrob arguments\") titleGrob$label ## [1] \"\" class(titleGrob) ## [1] \"grob\"  \"gDesc\" g1 <- l_instantiateGrob(g0, \"title: textGrob arguments\",                         label = \"1974 Motor Trend cars data\",                         gp = gpar(col = \"blue\",                                   fontsize = 8)) grid.newpage() grid.draw(g1) g2 <- l_instantiateGrob(g0, \"title: textGrob arguments\",                         label = \"1974 Motor Trend cars data\",                         gp = gpar(col = \"red\")) g2 <- l_setGrobPlotView(g2) grid.newpage() grid.draw(g2)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"e-g--missing-labels","dir":"Articles","previous_headings":"Producing static grid plots > helper functions from loon","what":"e.g. missing labels","title":"Loon plots and grid graphics","text":"Oftentimes labels (.e., “xlabel”, “ylabel”, “title”) p turned loonGrob() called: like turn labels static plot. gTree g3 now different path label. Knowing paths missing labels, two helper functions (together desiredtextGrob() arguments) construct desired plot: Extra arguments l_instantiateGrob() passed grobFun (case textGrob()).","code":"p['showLabels'] <- FALSE g3 <- loonGrob(p) grid.newpage() grid.draw(g3) grid.ls(g3) ## GRID.gTree.5 ##   l_plot ##     bounding box ##     loon plot ##       guides ##         guides background ##         guidelines: xaxis (major), x = 15 ##         guidelines: xaxis (major), x = 25 ##         guidelines: xaxis (major), x = 35 ##         guidelines: xaxis (minor), x = 10 ##         guidelines: xaxis (minor), x = 20 ##         guidelines: xaxis (minor), x = 30 ##         guidelines: yaxis (major), y = 100 ##         guidelines: yaxis (major), y = 200 ##         guidelines: yaxis (major), y = 300 ##         guidelines: yaxis (minor), y = 50 ##         guidelines: yaxis (minor), y = 150 ##         guidelines: yaxis (minor), y = 250 ##         guidelines: yaxis (minor), y = 350 ##       labels ##         x label: textGrob arguments ##         y label: textGrob arguments ##         title: textGrob arguments ##       axes ##         x axis ##           major ##           ticks ##           labels ##         y axis ##           major ##           ticks ##           labels ##       clipping region ##       l_plot_layers ##         scatterplot ##           points: primitive glyphs ##       boundary rectangle g4 <-l_instantiateGrob(g3,                         \"title: textGrob arguments\",                        x = unit(8, \"native\"),                        just = \"left\",                        label = \"Motor Trend Magazine 1974\")  g4 <-l_instantiateGrob(g4,                         \"x label: textGrob arguments\",                        label = \"Miles per US gallon\",                        x = unit(35, \"native\"),                        y = unit(-1.5, \"lines\"),                        just = \"right\",                        gp = gpar(fontsize = 15,                                   fontface = \"italic\",                                  col = \"blue\"))  g4 <-l_instantiateGrob(g4,                         \"y label: textGrob arguments\",                        label = \"Horse power\",                        rot = 45,                        x = unit(7, \"native\"),                        y = unit(275, \"native\"),                        just = \"right\",                        gp = gpar(fontsize = 15,                                   fontface = \"italic\",                                  col = \"blue\"))  g4 <- l_setGrobPlotView(g4) grid.newpage() grid.draw(g4)"},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"l_updategrob","dir":"Articles","previous_headings":"Producing static grid plots > helper functions from loon","what":"l_updateGrob()","title":"Loon plots and grid graphics","text":"function called l_instantiateGrob() perform role editGrob(), operating incomplete grobs gDescs. function l_updateGrob() also used editGrob() complete grob (e.g. classes text, grob, gDesc).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"some-points-are-invisible","dir":"Articles","previous_headings":"Producing static grid plots > What if …","what":"some points are invisible?","title":"Loon plots and grid graphics","text":"Unfortunately, points invisible, coordinates aesthetics attributes missing loonGrob. Technically speaking, possible include invisible points inside loonGrob, however, stops us data structure changed – pointsGrob replaced gTree several children pointsGrobs preserve display order distinguish visible invisible point. solution seems overly complicated implemented. Better simply make changes interactively loon plot translate new grid data structure.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"some-points-are-not-primitive-glyphs","dir":"Articles","previous_headings":"Producing static grid plots > What if …","what":"some points are not primitive glyphs?","title":"Loon plots and grid graphics","text":"loon provides non-primitive glyphs, e.g. text glyphs, image glyphs, polygon glyphs, et cetera. non-primitive glyph drawn, grob label beneath scatterplot points: mixed glyph. returns gTree object child textGrob.","code":"# add text glyph carNames <- l_glyph_add_text(p, text = rownames(mtcars)) p['glyph'] <- carNames # loonGrob g2 <- loonGrob(p) getGrob(g2, \"points: mixed glyphs\") grid.newpage() grid.draw(g2)"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"ggplots-from-loon-ggplot","dir":"Articles","previous_headings":"Other packages","what":"ggplots from loon.ggplot","title":"Loon plots and grid graphics","text":"Elegant print graphics also provided popular ggplot2 package built top grid graphics. Users familiar ggplot2 grammar graphics might interested loon companion package loon.ggplot extends grammar grammar interactive graphics. loon plot can captured ggplot simply calling loon.ggplot() . function also create interactive loon plot called existing ggplot. Details can found . probably simplest solution static plot can subsequently edited programmatically (via grammar ggplot2). changes ggplot also ve turned interactive loon plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/loonPlotsAndGridGraphics.html","id":"shiny-applications-from-loon-shiny","dir":"Articles","previous_headings":"Other packages","what":"shiny applications from loon.shiny","title":"Loon plots and grid graphics","text":"interest supporting reproducible research, analysts sometimes want share interactive (linked) plots curated analysis. shiny app way shared interaction. loon companion package loon.shiny makes possible just incorporating interactive loon style plots shiny app. viewer may interactively explore data analysis inside hyml browser. interaction open ended using loon R peculiar data app features selected y author. loon.shiny transformation relies loon grid functionality described . Details can found .","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"interactive-analysis-and-static-plots","dir":"Articles","previous_headings":"","what":"Interactive analysis and static plots","title":"Saving loon plots","text":"carrying interactive analysis, might want save pictures include later report. might also want save state interactive plot can pause analysis, quit R, later return analysis left . illustrate , consider classic data set iris. three different linked plots might displayed. plot simply just appear () processed RMarkdown file. grid gridExtra packages loaded, arrange see several plots one place.","code":"library(loon) # First, make sure you always assign a loon plot to a variable # at the same time that you create it.  This will give you access # to it later.   # (NB: If you haven't assigned it, you can later using l_getFromPath(). ) #  #  A histogram, the name for the linkingGroup is arbitrary h <- l_hist(iris$Sepal.Length, color = \"grey\", xlabel = \"Sepal length\",             linkingGroup = \"flowers\") # # A scatterplot p <- l_plot(iris$Petal.Width, iris$Petal.Length,               color = \"grey\", size = 10,             xlabel = \"Petal Width\", ylabel = \"Petal Length\",             linkingGroup = \"flowers\") # # A serial axes plot using the first 4 columns of iris (i.e. no Species info). sa <- l_serialaxes(iris[, 1:4],                color = \"grey\", linkingGroup = \"flowers\") # # A static version of the plot can be easily produced. plot(h) library(grid); library(gridExtra) # First get the data stuctures corresponding to the static snapshots # of the current plots.  Because we want to arrange them, we don't # draw them at first. plot_h <- plot(h, draw = FALSE) plot_p <- plot(p, draw = FALSE) plot_sa <- plot(sa, draw = FALSE) # Now we draw them grid.arrange(plot_h, plot_p, plot_sa, nrow = 1)"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"when-interaction-is-only-programmatic","dir":"Articles","previous_headings":"Interactive analysis and static plots","what":"When interaction is only programmatic","title":"Saving loon plots","text":"works fine want display entirely determined programming done inside RMarkdown code. example, colours changed programmatically, linked plots change plotting reflect change. couple things note . First, plots redrawn static snapshots reflecting interactive plot looked like time snapshot taken using plot(). Second, linked plots changed colour directly changed histogram. Finally, numerous states can programmatically accessed set interactive plot. states can found calling names() plot question. e.g. names(h) returns state names histogram h. Knowing state names provides user programmatic means access /set values. values can queried time, whether set programmatically interactively. example, problem things interactively direct manipulation plots using inspector brushing, panning, zooming, etc. recorded. want values states (set interactively) appear later report, values need recorded somewhere first. necessary save state somehow, either snapshot data separate file recovered later (saving plot states like colours, selections, etc.). either case, information must stored RMarkdown file can read back adjust plots programmatically.","code":"# Change the colour by changing it *programmatically* on the plot #  h[\"color\"] <- iris$Species  # use species to determine the colours plot_h <- plot(h, draw = FALSE) plot_p <- plot(p, draw = FALSE) plot_sa <- plot(sa, draw = FALSE) # And draw them again grid.arrange(plot_h, plot_p, plot_sa, nrow = 1) # Accessing values head(sa[\"color\"])  # will show the current colours of sa # Note that these colours are expressed as 12 hexadecimal digits  # This is what is used in TCL.  To turn them into R's 6 digit hexadecimal  # (to use in other R static plots, for example) just use hex12tohex6() hex12tohex6(sa[\"color\"][1:3]) # Setting values ... make only specied iris versicolor active sa[\"active\"] <- iris$Species == \"versicolor\" plot(sa) # Setting values ... make everything active sa[\"active\"] <- TRUE plot(sa)"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"saving-shapshots-for-later-display-","dir":"Articles","previous_headings":"Interactive analysis and static plots","what":"Saving shapshots for later display.","title":"Saving loon plots","text":"things interactively, may just want save current version plot, effectively snapshot, file. , completed analysis can read back . save current picture variety ways.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"export-from-rstudio","dir":"Articles","previous_headings":"Interactive analysis and static plots > Saving shapshots for later display.","what":"Export from RStudio","title":"Saving loon plots","text":"Simply plot(p) select Export button static plot. Choose file name location plot. plot() actually turns loon plot grid graphic, picture saves close necessarily exactly appears screen. Typical differences include font sizes names.","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"use-l_export","dir":"Articles","previous_headings":"Interactive analysis and static plots > Saving shapshots for later display.","what":"Use l_export()","title":"Saving loon plots","text":"loon function export loon plot file. plus side, see get. loon plot saved file appears display. Trouble , depending OS, might able save picture type image. example, pdf images available nearly OSes, png . need specify file suffix:","code":"l_export(p, filename = \"myplot_via_l_export.pdf\", height = 500, width = 600)"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"use-rs-png-device","dir":"Articles","previous_headings":"Interactive analysis and static plots > Saving shapshots for later display.","what":"Use R’s png() device","title":"Saving loon plots","text":"R, variety graphics “devices”. identify R draw static plot. call dev.cur() tell current device . One device png() allows R plots drawn png graphic. work like ","code":"# turn the png graphics device on with name of the file png(file = \"myplot_via_R.png\", width = 600, height = 500) # Draw the static plot plot(p) # Turn the device off/close the file dev.off()"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"including-saved-graphics-in-your-report","dir":"Articles","previous_headings":"Interactive analysis and static plots > Saving shapshots for later display.","what":"Including saved graphics in your report","title":"Saving loon plots","text":"saved various snapshots various files, can now include Rmarkdown file using include_graphics() function knitr. course, means various files mentioned previously saved (created markdown file) can now read RMarkdown report follows: Alternatively, use LaTeX want control. example, following LaTeX code centre three plots column tabular lay :","code":"# The one exported from RStudio knitr::include_graphics(\"myplot_via_RStudio.png\") # Followed by the one saved using l_export  # (note that background grid is missing) knitr::include_graphics(\"myplot_via_l_export.pdf\") # And finally, the one saved using R's png device knitr::include_graphics(\"myplot_via_R.png\") \\begin{center}   \\begin{tabular} {ccc}     \\includegraphics[height = 0.15\\textheight]{myplot_via_RStudio.png} &      \\includegraphics[height = 0.15\\textheight]{myplot_via_l_export.pdf} &     \\includegraphics[height = 0.15\\textheight]{myplot_via_R.png}      \\\\     {\\scriptsize The one exported from RStudio} &      {\\scriptsize The one saved using \\code{l\\_export}} &      {\\scriptsize The one saved using R's \\code{png} device}   \\end{tabular} \\end{center}"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"reconstruct-the-plot-from-saved-states","dir":"Articles","previous_headings":"Interactive analysis and static plots","what":"Reconstruct the plot from saved states","title":"Saving loon plots","text":"loon also provides functionality save current states loon plot. saving snapshots, done time interactive analysis. later, time write report, saved states plot read back plot reconstructed programmatically displayed report using plot() . use model Use l_saveStates() save current states loon plot file (repeat often desirable, saving different file time). Later, use l_getStates() recover saved states named file/ Construct new loon plot desired type. Copy saved states new plot using l_copyStates() (alternatively, assign selected saved states new plot using $). Produce static picture new loon plot using plot() . Note first step happens interactive part analysis. Steps 2 5 programmatically recover plot picture incorporation report. course place step 5, one use steps 2 4 restart interactive analysis one left .","code":""},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"a-simple-example","dir":"Articles","previous_headings":"Interactive analysis and static plots > Reconstruct the plot from saved states","what":"A simple example","title":"Saving loon plots","text":"typical use simply recording plot interaction display, usually involving linking two displays, say scatterplot histogram . save states plot p file Later, construct new plot (perhaps report), states recovered file new plot constructed saved states transferred . can programmatically incorporated report , alternatively new_p simply reconstruction continue interactive analysis point.","code":"l_saveStates(p, file = \"p_savedStates\") p_savedStates <- l_getSavedStates(file = \"p_savedStates\") new_p <- l_plot(iris$Petal.Width, iris$Petal.Length) l_copyStates(source = p_savedStates, target = new_p) plot(new_p)"},{"path":"https://great-northern-diver.github.io/loon/articles/savingLoonPlots.html","id":"a-more-complex-example","dir":"Articles","previous_headings":"Interactive analysis and static plots > Reconstruct the plot from saved states","what":"A more complex example","title":"Saving loon plots","text":", default, following states related linking saved [1] \"color\"        \"active\"       \"selected\"     \"linkingKey\"   \"linkingGroup\" Sometimes, interactive analysis involved. , example, involved panning zooming, changing glyphs, particular choices labels titles, . example, direct manipulation loon plot inspector, scatterplot p might point look something like : , analyst zoomed species “versicolor”, jittered locations points, changed glyphs large closed triangles. involves many states, must saved reproduce plot. states saved can named explicitly efficient storage, providing course one knows states need saved. states loon plot p given names(p). risk saving information necessary, choose save states p, Now states available file read back . comes transferring states new plot many choices. go large collection display states (default states still excluding “basic” states panning zooming example). see states, add argument returnNames = TRUE: excluded “basic” states argument excludeBasicStates whose default value TRUE. , different, states excluded using argument exclude list vector. Alternatively, states transferred made explicit naming value argument states. “basic” states excluded default, new plot now looks like can seen, glyph sizes shapes transferred zooming jittering. ensure get exact copy, need include states, exclude none . Now new_p look much like original interactive plot saved. .","code":"names(p_savedStates) ## [1] \"color\"        \"active\"       \"selected\"     \"linkingKey\"   \"linkingGroup\" l_saveStates(p,               states = names(p),               file = \"p_focusOnVersicolor\") p_focusOnVersicolor <- l_getSavedStates(file = \"p_focusOnVersicolor\") l_copyStates(source = p_focusOnVersicolor,               target = new_p,               returnNames = TRUE) plot(new_p) l_copyStates(source = p_focusOnVersicolor,               target = new_p,               excludeBasicStates = FALSE) plot(new_p)"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"illustrates","dir":"Articles","previous_headings":"","what":"Illustrates:","title":"Smoothers and Bone Mineral Density","text":"linked scatterplots panning zooming creating new interactions bindings","code":"library(loon)"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"the-data-bone-mineral-density","dir":"Articles","previous_headings":"","what":"The data: Bone mineral density","title":"Smoothers and Bone Mineral Density","text":"data consists measurements spinal bone mineral density. Several measurements taken 261 North American adolescents years. entire dataset called bone can found R package loon.data. can seen, five variates. idnum uniquely identifies 261 adolescents (N.B. numbered 1 261), sex identifies sex, ethnic “ethnicity/race”. response variate interest rspnbmd relative measure spinal bone mineral density determined ratio difference bone mineral density measured two consecutive visits divided average. Similarly, explanatory variate age average adolescent’s age years two visits. vignette investigate fit smoothing splines data.","code":"data(bone, package = \"loon.data\") summary(bone)"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"the-scatterplot","dir":"Articles","previous_headings":"","what":"The scatterplot","title":"Smoothers and Bone Mineral Density","text":"begin, execute following code: Two windows appeared code executed. One plot p, inspector plot p. plot interactive. Hovering mouse point plot, example, pop itemLabel point. Scrolling mouse wheel (equivalent) plot zooms () plot; note zoom centred mouse position. horizontal zooming , hold “control” key scrolling; vertical zooming hold “alt” (cmd Mac) key scrolling. Zoom anywhere plot. Notice inspector displays miniature version whole plot World View top display. plot bounded World View grey rectangle region plot displayed shown brighter region bounded black rectangle. bright display region can grabbed clicking (holding depressed) left (primary) mouse button. Moving mouse around keeping left button depressed moves bright region inspector turn cause display plot update accordingly. way, inspector World View can used pan entire display. Alternatively, panning may also effected right (secondary) button clicking interior plot, holding mouse button moving mouse. inspector region moves mouse, plot background . Panning zooming can occur either inspector plot plot . either case, panning zooming constrained horizontal control key held time vertical alt cmd key held. get displayed scatterplot back original scale, inspector click scale : plot. Alternatively effect can hand programmatically l_scaleto_plot(p). (scale layers plot use l_scaleto_world(p).) See help(l_plot) details examples. inspector window, immediately World View several tabs, first Analysis tab. first subsection analysis tab contains plot attributes. values determined plot p created according values arguments given l_plot(...). can changed inspector toggling check boxes. complete set arguments used time creation can querying plot p names(l_info_states). values can also accessed changed programmatically example vertical variate, rspnbmd, measured change spinal bone mineral density. Anything zero indicates increase, anything decrease; magnitude rate change density. might interest, , add horizontal line plot zero. accomplished layering line plot p follows: “axis” can turned via inspector programmatically. inspector, click Layers tab. layers appear list ordered top bottom inspector order displayed plot. axis appears Scatterplot hence displayed behind points. Selecting axis, buttons bottom list allow axis placed Scatterplot. axis (Scatterplot) can moved display. Either can made (temporarily) invisible clicking icon showing cartoon eye stroke made visible clicking cartoon eye. Try . axis (layer, e.g. Scatterplot), removed entirely minus sign. Don’t right now; click “Analysis” tab instead.","code":"# The plot x <- bone$age y <- bone$rspnbmd #  A scatterplot p <- l_plot(x, y,             color=\"darkgrey\",             xlabel=\"age\", ylabel=\"rspnbmd\",             showGuides = TRUE, showScales = TRUE,             itemLabel = paste0(\"IDnum = \", bone$idnum, \"\\n\",                                 bone$sex, \"\\n\",                                 \"Age: \", bone$age),             showItemLabels = TRUE,             linkingGroup=\"Bone density\",             title = \"Spinal bone mineral density (rspnbmd)\") p[\"showItemLabels\"] p[\"showGuides\"] p[\"swapAxes\"] <- TRUE p[\"swapAxes\"] <- FALSE axis <- l_layer_line(p,                      x=extendrange(x, f=0.5), y=c(0,0),                      label=\"axis\", linewidth=2,                      color = \"black\",                      dash=c(10,10),                      index=\"end\")   # last argument places axis behind other layers"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"histogram","dir":"Articles","previous_headings":"","what":"Histogram","title":"Smoothers and Bone Mineral Density","text":"histogram can constructed way numeric values. Now, sex factor, result essentially simple bar plot layer labelling bars corresponding sex: Note inspector now shows histogram (.e. barplot) World View plot section Analysis now options peculiar histogram. histogram scatterplot linkingGroup “Bone density” inspector shows 2 plots linked. Selecting left bar histogram highlights females plots. Switching back forth two bars observing scatterplot shows pattern males seems shifted slightly right females. Similarly, selecting point scatterplot causes corresponding slice bar appears histogram highlighted. Multiple selections can made holding shift key selecting. Alternatively, clicking background, holding mouse button sweeping rectangle highlight data objects intersect rectangle. selected, display points can modified clicking colour patches change colour, glyph symbols change shape points, - + signs change size, deactivate (reactivate) remove points (return ) display. Try selecting points scatterplot making various modifications. Note displays linked changes effected (sensible) displays. Note points coloured also possible select points colour inspector. Note shift sweeping (sweeping shift key pressed), multiple selections can made. Couple dynamic selection deselects inverts complex patterns selected points can constructed. return displays original configuration, inspector reactivate points, select Select part Analysis panel, select filled circle glyph shape, single colour available (selecting colour + pop colour picker) return original colour execute p[\"color\"] <- \"darkgrey\".","code":"h <- l_hist(bone$sex,              xlabel = \"sex\",             linkingGroup=\"Bone density\",             title = \"Sex\"             )"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"panning-and-brushing","dir":"Articles","previous_headings":"","what":"Panning and brushing","title":"Smoothers and Bone Mineral Density","text":"second scatterplot display variates. example, plotting age versus patient ID number gives: Ideally plot look like fairly uniform scatter. Assuming idnum assigned recruitment patterns. middle idnum range, example, appears preponderance older ages followed immediately preponderance younger ages. might investigate change idnum low high manifests relationship bone mineral density age brushing points p2 observing effect p. , click p2 inspector p2 focus (appears inspector World View). inspector Select panel (Analysis tab) select : brushing. rectangle appear p2; brush. Since interested observing relationship bone density age conditional idnum, need shape brush long, relatively thin, vertical brush. brush reshaped selecting box lower-right corner moving get shape desired. brush maintain shape (unique p2) changed. Now clicking anywhere p2 brush follow mouse (mouse button depressed) highlight points located within rectangle. example beginning lower left corner scatterplot moving mouse left right horizontally, tall narrow brush select points (nearly ) idnum relationship bone density age idnum increases can seen original scatterplot p. sticky brush, brush accumulate selections brushed, simply use shift key . nature brushing can changed selecting different dynamic modes. turn brushing select sweeping Select panel inspector p2. Zooming panning p2 also reveals interesting structure. Horizontally zoom p2 idnum well separated. horizontally pan across idnums (easily done inspector World View). becomes easy see subject (idnum) appears one, two, three times. value change bone density (must calculated basis two visits) means person two, three, four visits. Checking scales guides boxes plot panel inspector panning reveals also every idnum, difference age 2 appear span 3 years. Together, suggests data may collected single time period 3 years. Moreover, bulk idnums three entries occur early order idnum, possibly meaning early recruitment.","code":"p2 <- l_plot(bone$idnum, bone$age,              xlabel=\"idnum\", ylabel=\"age\",              linkingGroup=\"Bone density\",              title = \"ID numbers and age\")"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"adding-a-dynamically-changing-smooth","dir":"Articles","previous_headings":"","what":"Adding a (dynamically changing) smooth","title":"Smoothers and Bone Mineral Density","text":"summarize relationship, first add straight line fitted lm() using function l_layer_smooth() method \"lm\". function also used add smooth (default method = \"loess\"). Instead, add smoothing spline splines package use fit bone mineral density function time (.e. data p). Unlike straight line fit, smooth shows change spinal bone mineral density rises 12 years age declines thereafter ultimately hitting zero. course aggregate behaviour, sexes. might interesting see changes males females. adding smooth sex may subgroups data like investigate. end introduce dynamic update smooth. Now, like update called whenever interesting change state occurs. numerous possible states (see names(p), names(l_info_states(p)), l_help(\"learn_R_bind\") ). bind anonymous function arguments called whenever change values p contained selected state. means function called point p selected deselected. Note also smooth based temporary x y values. Points scatterplot may moved selecting control button depressed (well shift multiple selection). Alternatively, selected points may pushed together, distributed vertically horizontally, arranged grid, jittered selecting corresponding move button Modify panel inspector. points can returned original position clicking recover button Now go histogram select first female bar, make bar, watch smoothing spline adapts sex. Clearly, females greater changes spinal bone mineral density younger age males. doubt consequence different ages girls boys sexually mature. Brushing set points, linked plots now cause smooth function automatically recalculate redisplay. way one might pursue, example smooth changes subsets idnum values. Note points must active selected. , example, focus smooth changes subset females first deactivating males brushing subset females. Note states bound can seen l_bind_state_ids(p) deleted using l_bind_state_delete(p, \"stateBinding0\").","code":"l_layer_smooth(p, method = \"lm\",                 label = \"straight line fit\",                linecolor = \"firebrick\",                linedash = c(4,4),                linewidth = 4) library(splines) # Fit a smoothing spline fitsmooth <- smooth.spline(x, y, df=5) xOrder <- order(x) smooth <- l_layer_line(p,                        x = x[xOrder],                        y = predict(fitsmooth, x = x[xOrder])$y,                        label = \"smooth fit\",                         linewidth = 4,                        color = \"blue\") ## Define the update function updateSmooth <- function(myPlot, minpts, df, color=\"blue\") {   ## Get the values for x and y from the plot   ##   ## For x   xnew <- myPlot[\"xTemp\"]   if (length(xnew) == 0) {xnew <- myPlot[\"x\"]}      ## For y   ynew <- myPlot[\"yTemp\"]   if (length(ynew) == 0) {ynew <- myPlot[\"y\"]}      ## Now **only** use the active selected points to construct the smooth   sel <- myPlot[\"selected\"] & myPlot[\"active\"]   xnew <- xnew[sel]   ynew <- ynew[sel]   Nsel <- sum(sel)      if (Nsel > 3 & diff(range(xnew)) > 0) {     ## Find the range of the selected x values     xrng <- extendrange(xnew)     xvals.temp <- seq(from=min(xrng),                       to=max(xrng),                        length.out=100)          ## Redo our smooth **only** if we have enough points     if ((Nsel > minpts) & (minpts > (df + 1))){       fit.temp <- smooth.spline(xnew, ynew, df=df)       ypred.temp <- predict(fit.temp,x=xvals.temp)$y       ## update the smooth       if (smooth %in% l_layer_ids(myPlot)) {         ## reconfigure the smooth with new data         l_configure(smooth, x=xvals.temp, y=ypred.temp)       } else {         ## If the smooth has been deleted, then we recreate it          ## (N.B. in the global environment)         smooth <<-  l_layer_line(myPlot,                                  x=xvals.temp,                                   y=ypred.temp,                                  label=\"smooth fit\",                                   linewidth=4,                                  color = color)       }      }   }   ## Update the tcl language's event handler   tcl(\"update\", \"idletasks\") } # Here we \"bind\" the anonymous to the named state changes of p l_bind_state(p, c(\"selected\"),              function() {updateSmooth(p, 10, 5, \"blue\")} )"},{"path":"https://great-northern-diver.github.io/loon/articles/teaching-example-smoothing.html","id":"a-smooth-as-a-running-linear-fit","dir":"Articles","previous_headings":"","what":"A smooth as a running linear fit","title":"Smoothers and Bone Mineral Density","text":"Linear smoothers can thought connected predicted values locally fitted linear models weights maximal point xx prediction made drop zero xx values far away . illustrate add straight line scatterplot fitted data via weighted least squares using Gaussian weights. collection xx values, prediction made median. Gaussian weight function centred median: Use weights fit line data. Clicking Layers tab inspector shows scatterplot, axis, smooth fit, Gaussian weight straight line. Select last render invisible clicking button, , programmatically executing following. Now make fitted line update fit selected points. now bind update function change p either select active states. Selecting male female sex histograms show weighted least squares line sex. Brushing tall thin vertical brush p2 show fitted line changes () similar idnums change. interestingly, object lesson, brush p2 short wide brush age can kept roughly constant. age increases decreases, line segment changes fit: height slope. smooth seen earlier essentially connected midpoints line segments.","code":"GaussWt <- function(x) {   # Get an estimated standard deviation   h <- diff(range(x))/4   # Centre at median   xloc <- median(x)   # Gaussian density   dnorm(x, mean=xloc, sd=h) } # Fit a local line using some Gaussian weights. # Prediction will be at the median of x, fit by ### weights that decrease with x's # distance from the median. fitwls <- lm(y ~ x, weights=GaussWt(x)) linewls <- l_layer_line(p,                          x=x,                         y=predict(fitwls,                                   newdata=data.frame(x=x)),                         label=\"Fitted line\",                         linewidth=4,                         color = \"blue\") l_layer_hide(p, smooth) updateLocalLine <- function(myPlot, minpts, df, volor=\"blue\") {   ## Get the values for x and y from the plot   ## For x   xnew <- myPlot[\"xTemp\"]   if (length(xnew) == 0) {xnew <- myPlot[\"x\"]}      ## For y   ynew <- myPlot[\"yTemp\"]   if (length(ynew) == 0) {ynew <- myPlot[\"y\"]}    ## Now **only** use the active selected points to construct the smooth   sel <- myPlot[\"selected\"] & myPlot[\"active\"]   xnew <- xnew[sel]   ynew <- ynew[sel]   Nsel <- sum(sel)   if (Nsel > 3 & diff(range(xnew)) > 0) {     xrng <- extendrange(xnew)     xvals.temp <- seq(from=min(xrng),                       to=max(xrng),                        length.out=100)     ## Redo line if more than two points.     if (Nsel> 2) {       fit.wls <-  lm(ynew ~ xnew, weights=GaussWt(xnew))       ywls.temp <- predict(fit.wls,                            newdata=data.frame(xnew=xvals.temp))       ## update the fit       if (linewls %in% l_layer_ids(myPlot)) {         l_configure(linewls, x=xvals.temp, y=ywls.temp)       } else {         ## If it's been deleted, we recreate it (in the global environment).         linewls <<- l_layer_line(myPlot,                                  x=xvals.temp,                                  y=predict(fitwls,                                            newdata=data.frame(x=xvals.temp)                                  ),                                  label=\"GaussWt at median line\",                                   linewidth=4,                                  color=\"blue\"         )       }     }      }   ## Update the tcl language's event handler   tcl(\"update\", \"idletasks\") } # Here we \"bind\" the anonymous to the named state changes of p l_bind_state(p, c(\"active\",\"selected\"),              function() {updateLocalLine(p, 10, 5, \"blue\")} )"},{"path":"https://great-northern-diver.github.io/loon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian Waddell. Author. R. Wayne Oldford. Author, maintainer, thesis advisor. Zehao Xu. Contributor. Martin Gauch. Contributor.","code":""},{"path":"https://great-northern-diver.github.io/loon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Waddell , Oldford R (2025). loon: Interactive Statistical Data Visualization. R package version 1.4.2, https://great-northern-diver.github.io/loon/.","code":"@Manual{,   title = {loon: Interactive Statistical Data Visualization},   author = {Adrian Waddell and R. Wayne Oldford},   year = {2025},   note = {R package version 1.4.2},   url = {https://great-northern-diver.github.io/loon/}, }"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"loon-","dir":"","previous_headings":"","what":"loon","title":"Interactive Statistical Data Visualization","text":"loon extendible interactive data visualization system designed exploratory visualization. Though primarily exploratory data analysis, can also used develop new interactive analysis teaching tools. sense breadth application possible extensions can seen various vignettes, demos, examples documentation. sense use loon can articles, especially introduction, available .","code":""},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"web-documentation","dir":"","previous_headings":"","what":"Web Documentation","title":"Interactive Statistical Data Visualization","text":"addition R package documentation also TCL R documentation . ß R, accessible loon ","code":"# Combined TCL and R documentation (a learning document) l_help()  # R only manual l_web()  l_web(directory = \"articles\")  # R system documentation help(package = loon\")  vignette(package = \"loon\")  demo(package = \"loon\")"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Statistical Data Visualization","text":"interactive graphics loon written TCL, accessible R via tcltk R package. sure version R includes Tcl/Tk 8.6.6 (happens default might missing custom R build).","code":"# The easiest way to install loon install.packages(\"loon\")  # You could also install the latest development release directly from GitHub devtools::install_github(\"great-northern-diver/loon\", subdir = \"R\") # Or, to ensure you have the vignettes as well  # (  also accessible via l_web(directory = \"articles\")  ) devtools::install_github(\"great-northern-diver/loon\", subdir = \"R\",                           build_opts = c(\"--no-resave-data\") )"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"other-usageinstallation-notes","dir":"","previous_headings":"Installation","what":"Other Usage/Installation notes","title":"Interactive Statistical Data Visualization","text":"best use loon RStudio within terminal. Rgui app OSX work well loon. default Windows R GUI accept debug messages Tcl, now need use RStudio terminal. Mac users need install XQuartz close XQuartz R running! Otherwise end crashing active R session (including RStudio). Ubuntu one install libtk-img debian package (e.g. sudo apt-get install libtk-img) order get wide variety export formats l_export function.","code":""},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Interactive Statistical Data Visualization","text":"loon installed, work way introductory vignette:","code":"library(loon) # # from the vignette in R vignette(\"introduction\", package = \"loon\") # # or via the web l_web(page = \"introduction\", directory = \"articles\")"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"demos","dir":"","previous_headings":"Getting started","what":"Demos","title":"Interactive Statistical Data Visualization","text":"data used demo quakes giving locations, depth, Richter magnitude earthquakes Fiji since 1964.","code":""},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"histogram","dir":"","previous_headings":"Getting started > Demos","what":"Histogram","title":"Interactive Statistical Data Visualization","text":"binsize can modified graphical element bottom histogram.","code":"h <- l_hist(quakes$depth,             yshows = \"density\",             showBinHandle = TRUE,             xlabel = \"depth\",             title = \"Tonga trench earthquakes\",             linkingGroup = \"quakes\")"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"scatterplot","dir":"","previous_headings":"Getting started > Demos","what":"Scatterplot","title":"Interactive Statistical Data Visualization","text":"Scrolling mouse zoom plot. pan plot, press right mouse button move mouse","code":"p <- l_plot(x = quakes$long, y = quakes$lat,             xlabel = \"longitude\", ylabel = \"latitude\",             linkingGroup = \"quakes\",             title = \"Tonga trench earthquakes\")"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"linking-and-brushing","dir":"","previous_headings":"Getting started > Demos","what":"Linking and Brushing","title":"Interactive Statistical Data Visualization","text":"Two plots linked change one change can affect changes .","code":""},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"id_3d-rotation","dir":"","previous_headings":"Getting started > Demos","what":"3D rotation","title":"Interactive Statistical Data Visualization","text":"","code":"with(l_scale3D(quakes),      l_plot3D(long, lat, depth, linkingGroup = \"quakes\") )"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"facetting","dir":"","previous_headings":"Getting started > Demos","what":"Facetting","title":"Interactive Statistical Data Visualization","text":"plot splited three panels level Richter magnitude.","code":"# add a map layer NZFijiMap <- maps::map(\"world2\", regions = c(\"New Zealand\", \"Fiji\"), plot = FALSE) l_layer(p, NZFijiMap,         label = \"New Zealand and Fiji\",         color = \"forestgreen\",         index = \"end\") # facet `p` levels <- rep(NA, nrow(quakes)) levels[quakes$mag < 5 & quakes$mag >= 4] <- \"Light\" levels[quakes$mag < 6 & quakes$mag >= 5] <- \"Moderate\" levels[quakes$mag >= 6] <- \"Strong\" l_facet(p, by = levels,          linkingGroup = \"quakes\")"},{"path":"https://great-northern-diver.github.io/loon/index.html","id":"on-the-name","dir":"","previous_headings":"","what":"On the name","title":"Interactive Statistical Data Visualization","text":"software named large aquatic bird known common loon (Gavia immer) Canada United States, great northern diver United Kingdom. (Hence name github organization: https://github.com/great-northern-diver) loon visual predator, diving deep beneath surface, chasing prey speed remarkable maneuvrability. apprehended, prey either swallowed immediately , large, least brought surface dealt . seemed excellent metaphor agile, interactive, exploratory visualization system; one empowered analyst chase, perhaps discover, whatever features might revealed data quickly diving surface. goal provide system loon. acronym “loon” fare well (least obvious ostensive name) perhaps synonym “diver” better (direct interactive visual exploration R). , , “loon” funnier … diveR name collection “loon” related packages. can find documentation related packages via l_web() Enjoy!","code":"library(loon) l_web(package = \"loon.data\", directory = \"reference\") l_web(package = \"zenplots\")     # become one with your data l_web(package = \"ggmulti\")      # high dimensional graphics extending the ggplot2 package l_web(package = \"loon.ggplot\")  # interactive grammar of graphics via ggplot2 package l_web(package = \"loon.tourr\")   # interactive high dimensional tours via tourr package # And more coming .."},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"Quickly calculates returns Euclidean distances m vectors one set n vectors another.  set vectors given columns matrix.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"","code":"L2_distance(a, b, df = 0)"},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"d m numeric matrix giving first set m vectors dimension d columns . b d n numeric matrix giving second set n vectors dimension d columns b. df Indicator whether force diagonals returned matrix zero (df = 1) (default df = 0).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"m n matrix containing Euclidean distances column vectors matrix column vectors matrix b.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"fully vectorized (FAST!) function computes Euclidean distance two vectors : ||-B|| = sqrt ( ||||^2 + ||B||^2 - 2*.B ) Originally written L2_distance.m Matlab Roland Bunschoten University Amsterdam, Netherlands.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"Roland Bunschoten (original), Adrian Waddell, Wayne Oldford","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/L2_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euclidean distance between two vectors, or between column vectors of two matrices. — L2_distance","text":"","code":"A <- matrix(rnorm(400), nrow = 10) B <- matrix(rnorm(800), nrow = 10) L2_distance(A[,1, drop = FALSE], B[,1, drop = FALSE]) #>          [,1] #> [1,] 6.139374 d_AB <- L2_distance(A,B) d_BB <- L2_distance(B,B, df = 1) # force diagonal to be zero"},{"path":"https://great-northern-diver.github.io/loon/reference/UsAndThem.html","id":null,"dir":"Reference","previous_headings":"","what":"Data to re-create Hans Rosling's famous ","title":"Data to re-create Hans Rosling's famous ","text":"data sourced https://www.gapminder.org/   contains Population, Life Expectancy, Fertility, Income,   Geographic.Region information 1962 2013 198 countries.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/UsAndThem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data to re-create Hans Rosling's famous ","text":"","code":"UsAndThem"},{"path":"https://great-northern-diver.github.io/loon/reference/UsAndThem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data to re-create Hans Rosling's famous ","text":"data frame 9855 rows 8 variables Country country name Year year recorded measurements Population country's population LifeExpectancy average life expectancy years birth Fertility number babies per woman Income Gross domestic product per person adjusted inflation purchasing power  (international dollars) Geographic.Region one six large global regions Geographic.Region.ID two letter identification country","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/UsAndThem.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data to re-create Hans Rosling's famous ","text":"https://www.gapminder.org/","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a loongraph object to an object of class graph — as.graph","title":"Convert a loongraph object to an object of class graph — as.graph","text":"Loon's native graph class fairly basic. graph package (  bioconductor) provides powerful alternative create work   graphs. Also, many graph theoretic algorithms complement   function graph layout visualization methods implemented   graph objects RBGL Rgraphviz R packages.   information packages useful work graphs see   gRaphical Models R CRAN Task View   https://cran.r-project.org/web/views/.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a loongraph object to an object of class graph — as.graph","text":"","code":"as.graph(loongraph)"},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a loongraph object to an object of class graph — as.graph","text":"loongraph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a loongraph object to an object of class graph — as.graph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a loongraph object to an object of class graph — as.graph","text":"See   https://www.bioconductor.org/packages/release/bioc/html/graph.html   information graph R package.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a loongraph object to an object of class graph — as.graph","text":"","code":"if (requireNamespace(\"graph\", quietly = TRUE)) {   g <- loongraph(letters[1:4], letters[1:3], letters[2:4], FALSE)   g1 <- as.graph(g) }"},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a graph object to a loongraph object — as.loongraph","title":"Convert a graph object to a loongraph object — as.loongraph","text":"Sometimes simpler work objects class loongraph   work object class graph.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a graph object to a loongraph object — as.loongraph","text":"","code":"as.loongraph(graph)"},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a graph object to a loongraph object — as.loongraph","text":"graph object class graph (defined graph library)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a graph object to a loongraph object — as.loongraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a graph object to a loongraph object — as.loongraph","text":"See   https://www.bioconductor.org/packages/release/bioc/html/graph.html   information graph R package. information run: l_help(\"learn_R_display_graph.html.html#graph-utilities\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as.loongraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a graph object to a loongraph object — as.loongraph","text":"","code":"if (requireNamespace(\"graph\", quietly = TRUE)) {   graph_graph  = graph::randomEGraph(LETTERS[1:15], edges=100)   loon_graph <- as.loongraph(graph_graph) }"},{"path":"https://great-northern-diver.github.io/loon/reference/as_grid_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn a loon size to a grid size — as_grid_size","title":"Turn a loon size to a grid size — as_grid_size","text":"size loon determined pixel (px), , grid graphics, size determined pointsize (pt)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as_grid_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn a loon size to a grid size — as_grid_size","text":"","code":"as_grid_size(   size,   type = c(\"points\", \"texts\", \"images\", \"radial\", \"parallel\", \"polygon\", \"lines\"),   adjust = 1,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/as_grid_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn a loon size to a grid size — as_grid_size","text":"size input loon size type glyph type; one \"points\", \"texts\", \"images\", \"radial\", \"parallel\", \"polygon\", \"lines\". adjust pixel (px) 96DPI (dots per inch) equal 0.75 point. However, different machines, DPI slightly different. Argument adjust used twist size. HACK removed later version. ... arguments used specify size, e.g. pch \"points\", ratio \"image\" p \"parallel\".","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as_hex6color.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a 6 hexidecimal digit color representations — as_hex6color","title":"Return a 6 hexidecimal digit color representations — as_hex6color","text":"Return 6 hexidecimal digit color representations","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as_hex6color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a 6 hexidecimal digit color representations — as_hex6color","text":"","code":"as_hex6color(color)"},{"path":"https://great-northern-diver.github.io/loon/reference/as_hex6color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a 6 hexidecimal digit color representations — as_hex6color","text":"color input color","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/as_hex6color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return a 6 hexidecimal digit color representations — as_hex6color","text":"Compared hex12tohex6(), accommodate 6 digit code, 12 digit code real color names.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/as_hex6color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a 6 hexidecimal digit color representations — as_hex6color","text":"","code":"color <- c(\"#FF00FF\", \"#999999999999\", \"red\") # return 12 hexidecimal digit color loon:::l_hexcolor(color) #> [1] \"#FFFF0000FFFF\" \"#999999999999\" \"#FFFF00000000\" # return 6 hexidecimal digit color as_hex6color(color) #> [1] \"#FF00FF\" \"#999999\" \"#FF0000\" # return color names l_colorName(color) #> [1] \"magenta\" \"gray60\"  \"red\"      if (FALSE) # WRONG COLORS hex12tohex6(color) # \\dontrun{}"},{"path":"https://great-northern-diver.github.io/loon/reference/char2num.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"A Character Data Frame to a Numerical Data Frame — char2num.data.frame","title":"A Character Data Frame to a Numerical Data Frame — char2num.data.frame","text":"Turn data frame characters data frame numerical values. character converted numerical direct, turned factor first, numerical data","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/char2num.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Character Data Frame to a Numerical Data Frame — char2num.data.frame","text":"","code":"char2num.data.frame(chardataframe)"},{"path":"https://great-northern-diver.github.io/loon/reference/char2num.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Character Data Frame to a Numerical Data Frame — char2num.data.frame","text":"chardataframe char data frame","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/char2num.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Character Data Frame to a Numerical Data Frame — char2num.data.frame","text":"","code":"data <- data.frame(x = c(\"1\", \"2\", \"3\"),                    y = c(\"foo\", \"bar\", \"foo\"),                    z = 4:6) # ERROR # data + 1 numData <- char2num.data.frame(data) numData + 1 #>   x y z #> 1 2 2 5 #> 2 3 1 6 #> 3 4 2 7  if(interactive()) {   s <- l_serialaxes(iris)   data <- s[\"data\"]   # it is a character data frame   data[1,1]   numData <- char2num.data.frame(data)   numData[1,1] }"},{"path":"https://great-northern-diver.github.io/loon/reference/color_loon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a palette with loon's color mapping — color_loon","title":"Create a palette with loon's color mapping — color_loon","text":"Used map nominal data colors. default colors   chosen categories can well differentiated visually (e.g.   highlight different groups)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/color_loon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a palette with loon's color mapping — color_loon","text":"","code":"color_loon()"},{"path":"https://great-northern-diver.github.io/loon/reference/color_loon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a palette with loon's color mapping — color_loon","text":"function takes vector values maps vector   6 digit hexadecimal encoded color representation (strings). Note   loon uses internally 12 digit hexadecimal encoded color values.    values get passed function valid color names Tcl   colors get returned hexencoded. Otherwise, one   elements valid color name uses loons default color   mapping algorithm.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/color_loon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a palette with loon's color mapping — color_loon","text":"function loon uses default map values   colors. Loon's mapping algorithm follows:  values already represent valid Tk colors (see   tkcolors) colors taken number distinct values less number values   loon's color mapping list get mapped according color list,   see l_setColorList l_getColorList. distinct values colors loon's color   mapping list loon's color mapping algorithm used. See   loon_palette details section documentation   l_setColorList. mappings see col_numeric   col_factor functions scales package.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/color_loon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a palette with loon's color mapping — color_loon","text":"","code":"pal <- color_loon() pal(letters[1:4]) #> [1] \"#999999\" \"#A6CEE3\" \"#FFC0CB\" \"#B2DF8A\" pal(c('a','a','b','c')) #> [1] \"#999999\" \"#999999\" \"#A6CEE3\" \"#FFC0CB\" pal(c('green', 'yellow')) #> [1] \"#008000\" \"#FFFF00\"  # show color choices for different n's if (requireNamespace(\"grid\", quietly = TRUE)) {   grid::grid.newpage()   grid::pushViewport(grid::plotViewport())   grid::grid.rect()   n <- c(2,4,8,16, 21)   # beyond this, colors are generated algorithmically   # generating a warning   grid::pushViewport(grid::dataViewport(xscale=c(0, max(n)+1),                      yscale=c(0, length(n)+1)))   grid::grid.yaxis(at=c(1:length(n)), label=paste(\"n =\", n))   for (i in rev(seq_along(n))) {    cols <- pal(1:n[i])    grid::grid.points(x = 1:n[i], y = rep(i, n[i]),                      default.units = \"native\", pch=15,                      gp=grid::gpar(col=cols))   }   grid::grid.text(\"note the first i colors are shared for each n\",                   y = grid::unit(1,\"npc\") + grid::unit(1, \"line\")) }"},{"path":"https://great-northern-diver.github.io/loon/reference/complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Complement Graph of a Graph — complement","title":"Create the Complement Graph of a Graph — complement","text":"Creates complement graph graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Complement Graph of a Graph — complement","text":"","code":"complement(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Complement Graph of a Graph — complement","text":"x graph loongraph object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Complement Graph of a Graph — complement","text":"graph object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Complement Graph of a loon Graph — complement.loongraph","title":"Create the Complement Graph of a loon Graph — complement.loongraph","text":"Creates complement graph graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Complement Graph of a loon Graph — complement.loongraph","text":"","code":"# S3 method for class 'loongraph' complement(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/complement.loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Complement Graph of a loon Graph — complement.loongraph","text":"x loongraph object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.loongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Complement Graph of a loon Graph — complement.loongraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/complement.loongraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Complement Graph of a loon Graph — complement.loongraph","text":"method currently implemented undirected graphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete graph or digraph with a set of nodes — completegraph","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"Wikipedia: \"complete graph simple undirected graph   every pair distinct vertices connected unique edge.   complete digraph directed graph every pair distinct   vertices connected pair unique edges (one direction","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"","code":"completegraph(nodes, isDirected = FALSE)"},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"nodes character vector node names, element defines node hence elements need unique isDirected boolean scalar indicate wheter returned object complete graph (undirected) complete digraph (directed).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"Note function masks completegraph function   graph package. Hence good idead specify package namespace   ::, .e. loon::completegraph graph::completegraph. information run: l_help(\"learn_R_display_graph.html.html#graph-utilities\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/completegraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete graph or digraph with a set of nodes — completegraph","text":"","code":"g <- loon::completegraph(letters[1:5])"},{"path":"https://great-northern-diver.github.io/loon/reference/condGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a named grob or a template grob depending on a test — condGrob","title":"Create a named grob or a template grob depending on a test — condGrob","text":"Creates returns grid object using function given `grobFun` `test` `TRUE`  Otherwise simple `grob()` produced parameters.  grob parameters given `...`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/condGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a named grob or a template grob depending on a test — condGrob","text":"","code":"condGrob(test = TRUE, grobFun = grid::grob, name = \"grob name\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/condGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a named grob or a template grob depending on a test — condGrob","text":"test Either `TRUE` `FALSE` indicate whether `grobFun` used (default `TRUE`) . grobFun function used create grob `test = TRUE` (e.g. `textGrob`, `polygonGrob`, etc.). name name used returned grob. ... arguments given `grobFun` (`grob()` `test = FALSE`).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/condGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a named grob or a template grob depending on a test — condGrob","text":"grob produced either `grobFun` given `grob()` using remaining arguments. `test = FALSE` name suffixed \": `grobFun name` arguments\".","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/condGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a named grob or a template grob depending on a test — condGrob","text":"","code":"myGrob <- condGrob(test = (runif(1) > 0.5),                    grobFun = textGrob,                    name = \"my label\",                    label = \"Some random text\") #> Error: object 'textGrob' not found myGrob #> Error: object 'myGrob' not found"},{"path":"https://great-northern-diver.github.io/loon/reference/facet_grid_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout as a grid — facet_grid_layout","title":"Layout as a grid — facet_grid_layout","text":"Layout grid","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/facet_grid_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout as a grid — facet_grid_layout","text":"","code":"facet_grid_layout(   plots,   subtitles,   by = NULL,   prop = 10,   parent = NULL,   title = \"\",   xlabel = \"\",   ylabel = \"\",   labelLocation = c(\"top\", \"right\"),   byrow = FALSE,   swapAxes = FALSE,   labelBackground = l_getOption(\"facetLabelBackground\"),   labelForeground = l_getOption(\"foreground\"),   labelBorderwidth = 2,   labelRelief = \"ridge\",   plotWidth = 200,   plotHeight = 200,   sep = \"*\",   maxCharInOneRow = 10,   new.toplevel = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/facet_grid_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout as a grid — facet_grid_layout","text":"plots list loon plots subtitles subtitles layout. list length equal number variables. element list unique values variable. object class \"formula\" (one can coerced class): symbolic description plots separated prop proportion label height widget height parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . title title widget xlabel xlabel widget ylabel ylabel widget labelLocation Labels location. Length two vector layout grid. first one used determine position column labels ('top' 'bottom'). second one used determine position row labels ('right' 'left'). Length one vector layout wrap, 'top' 'bottom'. byrow Place widget row column swapAxes swap axes, TRUE FALSE labelBackground Label background color labelForeground Label foreground color labelBorderwidth Label border width labelRelief Label relief plotWidth default plot width (pixel) plotHeight default plot height (pixel) sep character string separate combine vector maxCharInOneRow deprecated new.toplevel determine whether parent new top level. new window, widgets packed ... named arguments modify plot states. See l_info_states instantiated l_plot examples names values.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/facet_separate_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"layout separately — facet_separate_layout","title":"layout separately — facet_separate_layout","text":"layout separately","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/facet_separate_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"layout separately — facet_separate_layout","text":"","code":"facet_separate_layout(   plots,   subtitles,   title = \"\",   xlabel = \"\",   ylabel = \"\",   sep = \"*\",   maxCharInOneRow = 10,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/facet_separate_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"layout separately — facet_separate_layout","text":"plots list loon plots subtitles subtitles layout. list length equal number variables. element list unique values variable. title title widget xlabel xlabel widget ylabel ylabel widget sep character string separate combine vector maxCharInOneRow deprecated ... named arguments modify plot states. See l_info_states instantiated l_plot examples names values.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/facet_wrap_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout as a wrap — facet_wrap_layout","title":"Layout as a wrap — facet_wrap_layout","text":"Layout wrap","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/facet_wrap_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout as a wrap — facet_wrap_layout","text":"","code":"facet_wrap_layout(   plots,   subtitles,   prop = 10,   parent = NULL,   title = \"\",   xlabel = \"\",   ylabel = \"\",   nrow = NULL,   ncol = NULL,   labelLocation = \"top\",   byrow = TRUE,   swapAxes = FALSE,   labelBackground = l_getOption(\"facetLabelBackground\"),   labelForeground = l_getOption(\"foreground\"),   labelBorderwidth = 2,   labelRelief = \"ridge\",   plotWidth = 200,   plotHeight = 200,   sep = \"*\",   maxCharInOneRow = 10,   new.toplevel = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/facet_wrap_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout as a wrap — facet_wrap_layout","text":"plots list loon plots subtitles subtitles layout. list length equal number variables. element list unique values variable. prop proportion label height widget height parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . title title widget xlabel xlabel widget ylabel ylabel widget nrow number layout rows ncol number layout columns labelLocation Labels location. Length two vector layout grid. first one used determine position column labels ('top' 'bottom'). second one used determine position row labels ('right' 'left'). Length one vector layout wrap, 'top' 'bottom'. byrow Place widget row column swapAxes swap axes, TRUE FALSE labelBackground Label background color labelForeground Label foreground color labelBorderwidth Label border width labelRelief Label relief plotWidth default plot width (pixel) plotHeight default plot height (pixel) sep character string separate combine vector maxCharInOneRow deprecated new.toplevel determine whether parent new top level. new window, widgets packed ... named arguments modify plot states. See l_info_states instantiated l_plot examples names values.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Displayed Color — get_display_color","title":"Return the Displayed Color — get_display_color","text":"Always reflect current displayed color.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Displayed Color — get_display_color","text":"","code":"get_display_color(color, selected)"},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Displayed Color — get_display_color","text":"color loon widget color selected selected states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Displayed Color — get_display_color","text":"color shown plot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the Displayed Color — get_display_color","text":"loon, element (.e. point, bin, line) \"temporary\" color \"permanent\" color. one element selected, color switched \"temporary\" color highlight . selection state eliminated, \"permanent\" color element displayed. function always gives \"temporary\" displayed color.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_display_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the Displayed Color — get_display_color","text":"","code":"if(interactive()) {   p <- l_plot(1:10)   p['selected'][c(1,3,5)] <- TRUE    displayedColor <- get_display_color(p['color'], p['selected'])   plot(1:10, bg = as_hex6color(displayedColor), pch = 21) }"},{"path":"https://great-northern-diver.github.io/loon/reference/get_facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a loon plot for each facet from an existing loon plot. — get_facets","title":"Creates a loon plot for each facet from an existing loon plot. — get_facets","text":"generic function used l_facet facetting existing loon plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a loon plot for each facet from an existing loon plot. — get_facets","text":"","code":"get_facets(widget, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/get_facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a loon plot for each facet from an existing loon plot. — get_facets","text":"widget loon widget ... arguments function used create loon plot facet.  Depending plot facetted, include arguments ,  , parent,  layout, inheritLayers, separate, bySubstitute. See l_facet details parameters. loon plot constructor parameters can passed well way.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_facets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a loon plot for each facet from an existing loon plot. — get_facets","text":"list containing named components plots, subtitles, child = child, new.toplevel containing facets plots relevant information construct facetted plot.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/get_font_info_from_tk.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Font Information — get_font_info_from_tk","title":"Return Font Information — get_font_info_from_tk","text":"Return Font Information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_font_info_from_tk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Font Information — get_font_info_from_tk","text":"","code":"get_font_info_from_tk(tkFont)"},{"path":"https://great-northern-diver.github.io/loon/reference/get_font_info_from_tk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Font Information — get_font_info_from_tk","text":"tkFont specified tk font character, one l_getOption(\"font-scales\"), l_getOption(\"font-title\"), l_getOption(\"font-xlabel\"), l_getOption(\"font-ylabel\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_font_info_from_tk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Font Information — get_font_info_from_tk","text":"list font information, containing font \"family\", font \"face\" font \"size\"","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_font_info_from_tk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Font Information — get_font_info_from_tk","text":"","code":"fontscales <- l_getOption(\"font-scales\") get_font_info_from_tk(fontscales) #> $family #> [1] \"sans\" #>  #> $face #> [1] \"plain\" #>  #> $size #> [1] \"9\" #>"},{"path":"https://great-northern-diver.github.io/loon/reference/get_layer_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Layer States — get_layer_states","title":"Get Layer States — get_layer_states","text":"Return input widget states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_layer_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Layer States — get_layer_states","text":"","code":"get_layer_states(target, native_unit = TRUE, omit = NULL)"},{"path":"https://great-northern-diver.github.io/loon/reference/get_layer_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Layer States — get_layer_states","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. native_unit return numerical vectors unit objects omit deprecated","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_layer_states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Layer States — get_layer_states","text":"get layer states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_layer_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Layer States — get_layer_states","text":"","code":"if(interactive()){ p <- l_plot(x = c(0,1), y = c(0,1)) l <- l_layer_rectangle(p, x = c(0,0.5), y = c(0, 0.5)) # the coordinates are in `unit` get_layer_states(p) # the coordinates are numerical get_layer_states(p, native_unit = FALSE) # get `l_layer` state get_layer_states(l) }"},{"path":"https://great-northern-diver.github.io/loon/reference/get_model_display_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Order of the Display — get_model_display_order","title":"Get the Order of the Display — get_model_display_order","text":"loon, points (scatter plot) lines (parallel radial coordinate) highlighted, displayed order changed. function always reflects current displayed order","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_model_display_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Order of the Display — get_model_display_order","text":"","code":"get_model_display_order(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/get_model_display_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Order of the Display — get_model_display_order","text":"widget l_plot l_serialaxes widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/get_model_display_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Order of the Display — get_model_display_order","text":"","code":"if(interactive()) {   p <- l_plot(rnorm(10))   get_model_display_order(p)   p['selected'][c(1,3,5,7)] <- TRUE   # The 1st, 3rd, 5th, 7th points will be drawn afterwards   # to make sure that they are displayed on top   get_model_display_order(p) }"},{"path":"https://great-northern-diver.github.io/loon/reference/glyph_to_pch.html","id":null,"dir":"Reference","previous_headings":"","what":"Glyph to Pch — glyph_to_pch","title":"Glyph to Pch — glyph_to_pch","text":"turn loon point glyph R graphics plotting 'character' (pch)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/glyph_to_pch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glyph to Pch — glyph_to_pch","text":"","code":"glyph_to_pch(glyph)"},{"path":"https://great-northern-diver.github.io/loon/reference/glyph_to_pch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glyph to Pch — glyph_to_pch","text":"glyph glyph type loon, must \"circle\", \"ocircle\", \"ccircle\", \"square\", \"osquare\", \"csquare\", \"triangle\", \"otriangle\", \"ctriangle\", \"diamond\", \"cdiamond\", \"odiamond\". input glyph valid, NA returned.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/glyph_to_pch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glyph to Pch — glyph_to_pch","text":"pch type","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/glyph_to_pch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glyph to Pch — glyph_to_pch","text":"","code":"glyph_to_pch(c(\"circle\", \"ocircle\", \"ccircle\",                \"square\", \"osquare\", \"csquare\",                \"triangle\", \"otriangle\", \"ctriangle\",                \"diamond\", \"cdiamond\", \"odiamond\",                \"foo\")) #>    circle   ocircle   ccircle    square   osquare   csquare  triangle otriangle  #>        19         1        21        15         0        22        17         2  #> ctriangle   diamond  cdiamond  odiamond       foo  #>        24        18        23         5        NA"},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Make each space in a node apprear only once — graphreduce","title":"Make each space in a node apprear only once — graphreduce","text":"Reduce graph unique node names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make each space in a node apprear only once — graphreduce","text":"","code":"graphreduce(graph, separator)"},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make each space in a node apprear only once — graphreduce","text":"graph graph class loongraph separator one character separates spaces node names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make each space in a node apprear only once — graphreduce","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make each space in a node apprear only once — graphreduce","text":"Note string based operation. Node names must contain   separator character!","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/graphreduce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make each space in a node apprear only once — graphreduce","text":"","code":"G <- completegraph(nodes=LETTERS[1:4]) LG <- linegraph(G)  LLG <- linegraph(LG)  R_LLG <- graphreduce(LLG)"},{"path":"https://great-northern-diver.github.io/loon/reference/grid.loon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","title":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","text":"Create optionally draw grid grob loon widget handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/grid.loon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","text":"","code":"grid.loon(target, name = NULL, gp = gpar(), draw = TRUE, vp = NULL)"},{"path":"https://great-northern-diver.github.io/loon/reference/grid.loon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. name character identifier grob, NULL. Used find grob display list /child another grob. gp gpar object, NULL, typically output call function gpar. basically list graphical parameter settings. draw logical value indicating whether graphics output produced. vp grid viewport object (NULL).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/grid.loon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","text":"grid grob loon plot","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/grid.loon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and optionally draw a grid grob from a loon widget handle — grid.loon","text":"","code":"if (FALSE) { # \\dontrun{ library(grid) widget <- with(iris, l_plot(Sepal.Length, Sepal.Width)) grid.loon(widget) } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/hex12tohex6.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","title":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","text":"Tk colors must 6 hexadecimal format two hexadecimal digits red, green, blue components.  Twelve hexadecimal digit colors 4 hexadecimal digits .  function converts 12 digit format 6 provided color preserved.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/hex12tohex6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","text":"","code":"hex12tohex6(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/hex12tohex6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","text":"x vector 12 digit hexcolors","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/hex12tohex6.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","text":"Function throws warning conversion loses information.   l_hexcolor function converts Tcl color specification   12 digit hexadecimal color representation.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/hex12tohex6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert 12 hexadecimal digit color representations to 6 hexidecimal digit color representations — hex12tohex6","text":"","code":"x <- l_hexcolor(c(\"red\", \"green\", \"blue\", \"orange\")) x #> [1] \"#FFFF00000000\" \"#000080800000\" \"#00000000FFFF\" \"#FFFFA5A50000\" hex12tohex6(x) #> [1] \"#FF0000\" \"#008000\" \"#0000FF\" \"#FFA500\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_Rlist2nestedTclList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","title":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","text":"helper function create nested Tcl list R   list (.e. list vectors).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_Rlist2nestedTclList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","text":"","code":"l_Rlist2nestedTclList(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_Rlist2nestedTclList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","text":"x list vectors","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_Rlist2nestedTclList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","text":"string represents tcl nested list","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_Rlist2nestedTclList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an R list to a nested Tcl list — l_Rlist2nestedTclList","text":"","code":"x <- list(c(1,3,4), c(4,3,2,1), c(4,3,2,5,6)) l_Rlist2nestedTclList(x) #> [1] \"{1 3 4} {4 3 2 1} {4 3 2 5 6}\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_after_idle.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a function on once the processor is idle — l_after_idle","title":"Evaluate a function on once the processor is idle — l_after_idle","text":"possible observer call configure method   plot plot still configuration pipeline.   case, warning thrown unwanted side effects can happen next   observer line gets outdated notification. case,   recommended use l_after_idle function evaluates code   processor idle.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_after_idle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a function on once the processor is idle — l_after_idle","text":"","code":"l_after_idle(fun)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_after_idle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a function on once the processor is idle — l_after_idle","text":"fun function evaluated tcl interpreter idle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the aspect ratio of a plot — l_aspect<-","title":"Set the aspect ratio of a plot — l_aspect<-","text":"aspect ratio defined ratio number pixels   one data unit y axis number pixels one data unit   x axes.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the aspect ratio of a plot — l_aspect<-","text":"","code":"l_aspect(widget) <- value"},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the aspect ratio of a plot — l_aspect<-","text":"widget widget path string object handle value aspect ratio","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect-set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the aspect ratio of a plot — l_aspect<-","text":"Changing aspect ratio l_aspect<- changes effectively   zoomY state obtain desired aspect ratio. Note   aspect ratio loon depends plot width, plot height states   zoomX, zoomY, deltaX, deltaY   swapAxes. Hence, aspect aspect ratio can set permanently   loon plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the aspect ratio of a plot — l_aspect<-","text":"","code":"if (FALSE) { # \\dontrun{ p <- with(iris, l_plot(Sepal.Length ~ Sepal.Width, color=Species))  l_aspect(p) l_aspect(p) <- 1 } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the aspect ratio of a plot — l_aspect","title":"Query the aspect ratio of a plot — l_aspect","text":"aspect ratio defined ratio number pixels   one data unit y axis number pixels one data unit   x axes.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the aspect ratio of a plot — l_aspect","text":"","code":"l_aspect(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the aspect ratio of a plot — l_aspect","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the aspect ratio of a plot — l_aspect","text":"aspect ratio","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_aspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the aspect ratio of a plot — l_aspect","text":"","code":"if (FALSE) { # \\dontrun{ p <- with(iris, l_plot(Sepal.Length ~ Sepal.Width, color=Species))  l_aspect(p) l_aspect(p) <- 1 } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_basePaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the set of basic path types for loon plots. — l_basePaths","title":"Get the set of basic path types for loon plots. — l_basePaths","text":"Loon's plots constructed TCL identified path string appearing window containing plot. path string begins unique identifier plot ends suffix describing type loon plot displayed. path identifying plot string concatenation identifier type. function returns set base (non-compound) loon path types.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_basePaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the set of basic path types for loon plots. — l_basePaths","text":"","code":"l_basePaths()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_basePaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the set of basic path types for loon plots. — l_basePaths","text":"character vector base path types.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_binCut.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","title":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","text":"l_binCut divides l_hist widget x current histogram intervals codes values x according interval fall (active). modelled cut base package.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_binCut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","text":"","code":"l_binCut(widget, labels, digits = 2, inactive)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_binCut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","text":"widget loon histogram widget. labels Labels identify bin observations . default, labels constructed using \"(,b]\" interval notation. labels = FALSE, simple integer codes given histogram's bin number returned instead factor. labels can also vector length equal number bins; used construct vector identifying bins. digits number digits used formatting breaks default labels. inactive value use inactive observations labels vector. Default depends labels.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_binCut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","text":"vector bin identifiers length equal total number observations histogram. type vector depends labels argument. default labels = NULL, factor returned, labels = FALSE, vector bin numbers, arbitrary vector labels vector bins labelled order labels returned. Inactive cases appear bin assigned value active given. default active value also depends labels:  labels = NULL, default active \"(-Inf, Inf)\"; labels = FALSE, default active  -1; labels vector length equal number bins, default active NA. value active denotes bin name inactive cases.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_binCut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels for each observation according to bin cuts in the histogram. — l_binCut","text":"","code":"if(interactive()) { h <- l_hist(iris) h[\"active\"] <- iris$Species != \"setosa\" binCut <- l_binCut(h) h['color'] <- binCut ## number of bins nBins <- length(l_getBinIds(h)) ## ggplot color hue gg_color_hue <- function(n) {   hues <- seq(15, 375, length = n + 1)   hcl(h = hues, l = 65, c = 100)[1:n] } h['color'] <- l_binCut(h, labels = gg_color_hue(nBins), inactive = \"firebrick\") h[\"active\"] <- TRUE }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Canvas Binding — l_bind_canvas","title":"Create a Canvas Binding — l_bind_canvas","text":"Canvas bindings triggered mouse/keyboard gesture   plot whole.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Canvas Binding — l_bind_canvas","text":"","code":"l_bind_canvas(widget, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Canvas Binding — l_bind_canvas","text":"widget widget path string object handle event event patterns defined Tk canvas widget https://www.tcl-lang.org/man/tcl8.6/TkCmd/bind.htm#M5. callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Canvas Binding — l_bind_canvas","text":"canvas binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Canvas Binding — l_bind_canvas","text":"Canvas bindings used evaluate callbacks certain X events canvas widget (underlying widget loon's plot widgets). X events include re-sizing canvas entering canvas mouse. Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Canvas Binding — l_bind_canvas","text":"","code":"# binding for when plot is resized if(interactive()){ p <- l_plot(iris[,1:2], color=iris$Species)  printSize <- function(p) {     size <- l_size(p)     cat(paste('Size of widget ', p, ' is: ',               size[1], 'x', size[2], ' pixels\\n', sep='')) }  l_bind_canvas(p, event='<Configure>', function(W) {printSize(W)})  id <- l_bind_canvas_ids(p) id  l_bind_canvas_get(p, id)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a canvas binding — l_bind_canvas_delete","title":"Delete a canvas binding — l_bind_canvas_delete","text":"Remove canvas binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a canvas binding — l_bind_canvas_delete","text":"","code":"l_bind_canvas_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a canvas binding — l_bind_canvas_delete","text":"widget widget path string object handle id canvas binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a canvas binding — l_bind_canvas_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"","code":"l_bind_canvas_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"widget widget path string object handle id canvas binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the event pattern and callback Tcl code of a canvas binding — l_bind_canvas_get","text":"","code":"# binding for when plot is resized if(interactive()){ p <- l_plot(iris[,1:2], color=iris$Species)  printSize <- function(p) {     size <- l_size(p)     cat(paste('Size of widget ', p, ' is: ',               size[1], 'x', size[2], ' pixels\\n', sep='')) }  l_bind_canvas(p, event='<Configure>', function(W) {printSize(W)})  id <- l_bind_canvas_ids(p) id  l_bind_canvas_get(p, id)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List canvas binding ids — l_bind_canvas_ids","title":"List canvas binding ids — l_bind_canvas_ids","text":"List user added canvas binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List canvas binding ids — l_bind_canvas_ids","text":"","code":"l_bind_canvas_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List canvas binding ids — l_bind_canvas_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List canvas binding ids — l_bind_canvas_ids","text":"vector canvas binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List canvas binding ids — l_bind_canvas_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List canvas binding ids — l_bind_canvas_ids","text":"","code":"# binding for when plot is resized if(interactive()){ p <- l_plot(iris[,1:2], color=iris$Species)  printSize <- function(p) {     size <- l_size(p)     cat(paste('Size of widget ', p, ' is: ',               size[1], 'x', size[2], ' pixels\\n', sep='')) }  l_bind_canvas(p, event='<Configure>', function(W) {printSize(W)})  id <- l_bind_canvas_ids(p) id  l_bind_canvas_get(p, id)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","title":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","text":"order canvas bindings defines get evaluated   event matches event patterns multiple canvas bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","text":"","code":"l_bind_canvas_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","text":"widget widget path string object handle ids new canvas binding id evaluation order, must rearrangement elements returned l_bind_canvas_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_canvas_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the canvas binding evaluation sequence — l_bind_canvas_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a context binding — l_bind_context","title":"Add a context binding — l_bind_context","text":"Creates binding evaluates callback particular changes collection contexts display.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a context binding — l_bind_context","text":"","code":"l_bind_context(widget, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a context binding — l_bind_context","text":"widget widget path string object handle event vector one following events: 'add', 'delete', 'relabel' callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a context binding — l_bind_context","text":"context binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a context binding — l_bind_context","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a context binding — l_bind_context_delete","title":"Delete a context binding — l_bind_context_delete","text":"Remove context binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a context binding — l_bind_context_delete","text":"","code":"l_bind_context_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a context binding — l_bind_context_delete","text":"widget widget path string object handle id context binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a context binding — l_bind_context_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","title":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","text":"","code":"l_bind_context_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","text":"widget widget path string object handle id context binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a context binding — l_bind_context_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List context binding ids — l_bind_context_ids","title":"List context binding ids — l_bind_context_ids","text":"List user added context binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List context binding ids — l_bind_context_ids","text":"","code":"l_bind_context_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List context binding ids — l_bind_context_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List context binding ids — l_bind_context_ids","text":"vector context binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List context binding ids — l_bind_context_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the context binding evaluation sequence — l_bind_context_reorder","title":"Reorder the context binding evaluation sequence — l_bind_context_reorder","text":"order context bindings defines get evaluated   event matches event patterns multiple context bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the context binding evaluation sequence — l_bind_context_reorder","text":"","code":"l_bind_context_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the context binding evaluation sequence — l_bind_context_reorder","text":"widget widget path string object handle ids new context binding id evaluation order, must rearrangement elements returned l_bind_context_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the context binding evaluation sequence — l_bind_context_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_context_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the context binding evaluation sequence — l_bind_context_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a glyph binding — l_bind_glyph","title":"Add a glyph binding — l_bind_glyph","text":"Creates binding evaluates callback particular changes collection glyphs display.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a glyph binding — l_bind_glyph","text":"","code":"l_bind_glyph(widget, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a glyph binding — l_bind_glyph","text":"widget widget path string object handle event vector one following events: 'add', 'delete', 'relabel' callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a glyph binding — l_bind_glyph","text":"glyph binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a glyph binding — l_bind_glyph","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a glyph binding — l_bind_glyph_delete","title":"Delete a glyph binding — l_bind_glyph_delete","text":"Remove glyph binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a glyph binding — l_bind_glyph_delete","text":"","code":"l_bind_glyph_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a glyph binding — l_bind_glyph_delete","text":"widget widget path string object handle id glyph binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a glyph binding — l_bind_glyph_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","title":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","text":"","code":"l_bind_glyph_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","text":"widget widget path string object handle id glyph binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a glyph binding — l_bind_glyph_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List glyph binding ids — l_bind_glyph_ids","title":"List glyph binding ids — l_bind_glyph_ids","text":"List user added glyph binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List glyph binding ids — l_bind_glyph_ids","text":"","code":"l_bind_glyph_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List glyph binding ids — l_bind_glyph_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List glyph binding ids — l_bind_glyph_ids","text":"vector glyph binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List glyph binding ids — l_bind_glyph_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","title":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","text":"order glyph bindings defines get evaluated   event matches event patterns multiple glyph bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","text":"","code":"l_bind_glyph_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","text":"widget widget path string object handle ids new glyph binding id evaluation order, must rearrangement elements returned l_bind_glyph_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_glyph_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the glyph binding evaluation sequence — l_bind_glyph_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Canvas Binding — l_bind_item","title":"Create a Canvas Binding — l_bind_item","text":"Canvas bindings triggered mouse/keyboard gesture   plot whole.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Canvas Binding — l_bind_item","text":"","code":"l_bind_item(widget, tags, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Canvas Binding — l_bind_item","text":"widget widget path string object handle tags item tags explained l_help(\"learn_R_bind.html#item-bindings\") event event patterns defined Tk canvas widget https://www.tcl-lang.org/man/tcl8.6/TkCmd/bind.htm#M5. callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Canvas Binding — l_bind_item","text":"item binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Canvas Binding — l_bind_item","text":"Item bindings used evaluating callbacks certain mouse /keyboard gestures events (.e. X events) visual items canvas. Items canvas can tags item bindings specified evaluated certain X events items specific tags. Note item bindings get currently evaluated order added. Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a item binding — l_bind_item_delete","title":"Delete a item binding — l_bind_item_delete","text":"Remove item binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a item binding — l_bind_item_delete","text":"","code":"l_bind_item_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a item binding — l_bind_item_delete","text":"widget widget path string object handle id item binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a item binding — l_bind_item_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","title":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","text":"","code":"l_bind_item_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","text":"widget widget path string object handle id item binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a item binding — l_bind_item_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List item binding ids — l_bind_item_ids","title":"List item binding ids — l_bind_item_ids","text":"List user added item binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List item binding ids — l_bind_item_ids","text":"","code":"l_bind_item_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List item binding ids — l_bind_item_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List item binding ids — l_bind_item_ids","text":"vector item binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List item binding ids — l_bind_item_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the item binding evaluation sequence — l_bind_item_reorder","title":"Reorder the item binding evaluation sequence — l_bind_item_reorder","text":"order item bindings defines get evaluated   event matches event patterns multiple item bindings. Reordering item bindings currently effect. Item bindings   evaluated order added.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the item binding evaluation sequence — l_bind_item_reorder","text":"","code":"l_bind_item_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the item binding evaluation sequence — l_bind_item_reorder","text":"widget widget path string object handle ids new item binding id evaluation order, must rearrangement elements returned l_bind_item_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the item binding evaluation sequence — l_bind_item_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_item_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the item binding evaluation sequence — l_bind_item_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layer binding — l_bind_layer","title":"Add a layer binding — l_bind_layer","text":"Creates binding evaluates callback particular changes collection layers display.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layer binding — l_bind_layer","text":"","code":"l_bind_layer(widget, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layer binding — l_bind_layer","text":"widget widget path string object handle event vector one following events: 'add', 'delete', 'move', 'hide', 'show', 'relabel' callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a layer binding — l_bind_layer","text":"layer binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a layer binding — l_bind_layer","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a layer binding — l_bind_layer_delete","title":"Delete a layer binding — l_bind_layer_delete","text":"Remove layer binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a layer binding — l_bind_layer_delete","text":"","code":"l_bind_layer_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a layer binding — l_bind_layer_delete","text":"widget widget path string object handle id layer binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a layer binding — l_bind_layer_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","title":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","text":"","code":"l_bind_layer_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","text":"widget widget path string object handle id layer binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a layer binding — l_bind_layer_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List layer binding ids — l_bind_layer_ids","title":"List layer binding ids — l_bind_layer_ids","text":"List user added layer binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List layer binding ids — l_bind_layer_ids","text":"","code":"l_bind_layer_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List layer binding ids — l_bind_layer_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List layer binding ids — l_bind_layer_ids","text":"vector layer binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List layer binding ids — l_bind_layer_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","title":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","text":"order layer bindings defines get evaluated   event matches event patterns multiple layer bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","text":"","code":"l_bind_layer_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","text":"widget widget path string object handle ids new layer binding id evaluation order, must rearrangement elements returned l_bind_layer_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_layer_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the layer binding evaluation sequence — l_bind_layer_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a navigator binding — l_bind_navigator","title":"Add a navigator binding — l_bind_navigator","text":"Creates binding evaluates callback particular changes collection navigators display.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a navigator binding — l_bind_navigator","text":"","code":"l_bind_navigator(widget, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a navigator binding — l_bind_navigator","text":"widget widget path string object handle event vector one following events: 'add', 'delete', 'relabel' callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a navigator binding — l_bind_navigator","text":"navigator binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a navigator binding — l_bind_navigator","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a navigator binding — l_bind_navigator_delete","title":"Delete a navigator binding — l_bind_navigator_delete","text":"Remove navigator binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a navigator binding — l_bind_navigator_delete","text":"","code":"l_bind_navigator_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a navigator binding — l_bind_navigator_delete","text":"widget widget path string object handle id navigator binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a navigator binding — l_bind_navigator_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","title":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","text":"","code":"l_bind_navigator_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","text":"widget widget path string object handle id navigator binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a navigator binding — l_bind_navigator_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List navigator binding ids — l_bind_navigator_ids","title":"List navigator binding ids — l_bind_navigator_ids","text":"List user added navigator binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List navigator binding ids — l_bind_navigator_ids","text":"","code":"l_bind_navigator_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List navigator binding ids — l_bind_navigator_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List navigator binding ids — l_bind_navigator_ids","text":"vector navigator binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List navigator binding ids — l_bind_navigator_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","title":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","text":"order navigator bindings defines get evaluated   event matches event patterns multiple navigator bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","text":"","code":"l_bind_navigator_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","text":"widget widget path string object handle ids new navigator binding id evaluation order, must rearrangement elements returned l_bind_navigator_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_navigator_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the navigator binding evaluation sequence — l_bind_navigator_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a state change binding — l_bind_state","title":"Add a state change binding — l_bind_state","text":"callback state change binding evaluated certain   states change, specified binding creation.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a state change binding — l_bind_state","text":"","code":"l_bind_state(target, event, callback)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a state change binding — l_bind_state","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. event vector state names callback callback function R function called Tcl interpreter event interest happens. Note loon callback functions support different optional arguments depending binding type, read details information","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a state change binding — l_bind_state","text":"state change binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a state change binding — l_bind_state","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a state binding — l_bind_state_delete","title":"Delete a state binding — l_bind_state_delete","text":"Remove state binding","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a state binding — l_bind_state_delete","text":"","code":"l_bind_state_delete(target, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a state binding — l_bind_state_delete","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. id state binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a state binding — l_bind_state_delete","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","title":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","text":"function returns registered event pattern Tcl   callback code Tcl interpreter evaluates event occurs   matches event pattern.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","text":"","code":"l_bind_state_get(target, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. id state binding id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","text":"Character vector length two. First element event pattern,   second element Tcl callback code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the event pattern and callback Tcl code of a state binding — l_bind_state_get","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List state binding ids — l_bind_state_ids","title":"List state binding ids — l_bind_state_ids","text":"List user added state binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List state binding ids — l_bind_state_ids","text":"","code":"l_bind_state_ids(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List state binding ids — l_bind_state_ids","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List state binding ids — l_bind_state_ids","text":"vector state binding ids","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List state binding ids — l_bind_state_ids","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the state binding evaluation sequence — l_bind_state_reorder","title":"Reorder the state binding evaluation sequence — l_bind_state_reorder","text":"order state bindings defines get evaluated   event matches event patterns multiple state bindings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the state binding evaluation sequence — l_bind_state_reorder","text":"","code":"l_bind_state_reorder(target, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the state binding evaluation sequence — l_bind_state_reorder","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. ids new state binding id evaluation order, must rearrangement elements returned l_bind_state_ids function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the state binding evaluation sequence — l_bind_state_reorder","text":"vector binding id evaluation order (id argument)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_bind_state_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder the state binding evaluation sequence — l_bind_state_reorder","text":"Bindings, callbacks, binding substitutions described detail loon's documentation webpage, .e. run l_help(\"learn_R_bind\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the boundaries of the histogram bins containing active points. — l_breaks","title":"Gets the boundaries of the histogram bins containing active points. — l_breaks","text":"Queries histogram returns ids active points bin contains active points.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the boundaries of the histogram bins containing active points. — l_breaks","text":"","code":"l_breaks(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the boundaries of the histogram bins containing active points. — l_breaks","text":"widget loon histogram widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the boundaries of the histogram bins containing active points. — l_breaks","text":"named list minimum maximum values boundaries active bins histogram.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_cget.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a Plot State — l_cget","title":"Query a Plot State — l_cget","text":"loon's displays plot states. Plot states specify   displayed, displayed plot linked   loon plots. Layers, glyphs, navigators contexts states   (also refered plot states). function queries single plot   state.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_cget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a Plot State — l_cget","text":"","code":"l_cget(target, state)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_cget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query a Plot State — l_cget","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. state state name","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_cget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query a Plot State — l_cget","text":"","code":"if(interactive()){  p <- l_plot(iris, color = iris$Species) l_cget(p, \"color\") p['selected'] }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_colRemoveAlpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert color representations having an alpha transparency level to 6 digit color representations — l_colRemoveAlpha","title":"Convert color representations having an alpha transparency level to 6 digit color representations — l_colRemoveAlpha","text":"Colors standard tk used loon allow alpha transparency. function allows loon use color palettes (e.g. l_setColorList) produce colors alpha transparency simply using rgb.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colRemoveAlpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert color representations having an alpha transparency level to 6 digit color representations — l_colRemoveAlpha","text":"","code":"l_colRemoveAlpha(col)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_colRemoveAlpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert color representations having an alpha transparency level to 6 digit color representations — l_colRemoveAlpha","text":"col vector colors (potentially) containing alpha level","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colRemoveAlpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert color representations having an alpha transparency level to 6 digit color representations — l_colRemoveAlpha","text":"","code":"x <- l_colRemoveAlpha(rainbow(6)) # Also works with ordinary color string representations # since it just extracts the rgb values from the colors. x <- l_colRemoveAlpha(c(\"red\", \"blue\", \"green\", \"orange\")) x #> [1] \"#FF0000\" \"#0000FF\" \"#00FF00\" \"#FFA500\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Color Names from the Hex Code — l_colorName","title":"Get Color Names from the Hex Code — l_colorName","text":"Return built-color names given hex code.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Color Names from the Hex Code — l_colorName","text":"","code":"l_colorName(color, error = TRUE, precise = FALSE)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Color Names from the Hex Code — l_colorName","text":"color vector 12 digit (tcl) 6 (8 transparency) digit color hex code, e.g. \"#FFFF00000000\", \"#FF0000\" error Suppose input valid color, TRUE, error returned; else input vector returned. precise Logical; precise = FALSE, name nearest built-colour returned. precise = TRUE, name returned minimum Euclidean distance zero; otherwise hex code colour returned. See details.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Color Names from the Hex Code — l_colorName","text":"vector built-color names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Color Names from the Hex Code — l_colorName","text":"Function colors returns built-color names R knows . convert hex code real color name, first convert built-colours hex code RGB (red/green/blue) values (e.g., \"black\" –> [0, 0, 0]). , using RGB vector value, closest (Euclidean distance) built-colour determined. Matching \"precise\" whenever minimum distance zero; otherwise \"approximate\", locating nearest R colour.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_colorName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Color Names from the Hex Code — l_colorName","text":"","code":"l_colorName(c(\"#FFFF00000000\", \"#FF00FF\", \"blue\")) #> [1] \"red\"     \"magenta\" \"blue\"     if(require(grid)) { # redGradient is a matrix of 20 different colors redGradient <- matrix(hcl(0, 80, seq(49, 68, 1)),                       nrow=4, ncol=5, byrow = TRUE) # a color plate grid::grid.newpage() grid::grid.raster(redGradient,                   interpolate = FALSE)  # a \"rough matching\"; r <- l_colorName(redGradient) # the color name of each row is identical... r grid::grid.newpage() # very different from the first plate grid::grid.raster(r, interpolate = FALSE)  # a \"precise matching\"; p <- l_colorName(redGradient, precise = TRUE) # no built-in color names can be precisely matched... p } #> Loading required package: grid   #>      [,1]      [,2]      [,3]      [,4]      [,5]      #> [1,] \"#C24C6A\" \"#C54E6D\" \"#C7516F\" \"#CA5472\" \"#CD5774\" #> [2,] \"#D05A77\" \"#D35C79\" \"#D65F7C\" \"#D8627F\" \"#DB6581\" #> [3,] \"#DE6884\" \"#E16A86\" \"#E46D89\" \"#E7708C\" \"#EA738E\" #> [4,] \"#ED7591\" \"#F07894\" \"#F37B96\" \"#F57E99\" \"#F8809C\" if (FALSE) { # \\dontrun{ # an error will be returned l_colorName(c(\"foo\", \"bar\", \"red\"))  # c(\"foo\", \"bar\", \"red\") will be returned l_colorName(c(\"foo\", \"bar\", \"#FFFF00000000\"), error = FALSE) } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_compoundPaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the set of basic path types for loon plots. — l_compoundPaths","title":"Get the set of basic path types for loon plots. — l_compoundPaths","text":"Loon's plots constructed TCL identified path string appearing window containing plot. path string begins unique identifier plot ends suffix describing type loon plot displayed. path identifying plot string concatenation identifier type. function returns set loon path types compound loon plots.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_compoundPaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the set of basic path types for loon plots. — l_compoundPaths","text":"","code":"l_compoundPaths()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_compoundPaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the set of basic path types for loon plots. — l_compoundPaths","text":"character vector compound path types.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify one or multiple plot states — l_configure","title":"Modify one or multiple plot states — l_configure","text":"loon's displays plot states. Plot states specify   displayed, displayed plot linked   loon plots. Layers, glyphs, navigators contexts states   (also refered plot states). function modifies one   multiple plot states.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify one or multiple plot states — l_configure","text":"","code":"l_configure(target, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify one or multiple plot states — l_configure","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. ... state=value pairs","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify one or multiple plot states — l_configure","text":"","code":"if(interactive()){  p <- l_plot(iris, color = iris$Species) l_configure(p, color='red') p['size'] <- ifelse(iris$Species == \"versicolor\", 2, 8) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_context2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a context2d navigator context — l_context_add_context2d","title":"Create a context2d navigator context — l_context_add_context2d","text":"context2d maps every location 2d space graph list   xvars list yvars , moving navigator along   graph, changes possible take place xvars yvars. Contexts detail explained webmanual accessible l_help. Please read section context running l_help(\"learn_R_display_graph.html#contexts\").","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_context2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a context2d navigator context — l_context_add_context2d","text":"","code":"l_context_add_context2d(navigator, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_context2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a context2d navigator context — l_context_add_context2d","text":"navigator navigator handle object ... arguments passed modify context states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_context2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a context2d navigator context — l_context_add_context2d","text":"context handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_geodesic2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a geodesic2d navigator context — l_context_add_geodesic2d","title":"Create a geodesic2d navigator context — l_context_add_geodesic2d","text":"Geodesic2d maps every location graph orthogonal   projection data onto two-dimensional subspace. nodes   represent sub-space spanned pair variates edges either   3d- 4d-transition one scatterplot another, depending   many variates two nodes connected edge share (see Hurley   Oldford 2011). geodesic2d context inherits context2d context. Contexts detail explained webmanual accessible l_help. Please read section context running l_help(\"learn_R_display_graph.html#contexts\").","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_geodesic2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a geodesic2d navigator context — l_context_add_geodesic2d","text":"","code":"l_context_add_geodesic2d(navigator, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_geodesic2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a geodesic2d navigator context — l_context_add_geodesic2d","text":"navigator navigator handle object ... arguments passed modify context states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_geodesic2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a geodesic2d navigator context — l_context_add_geodesic2d","text":"context handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_slicing2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a slicind2d navigator context — l_context_add_slicing2d","title":"Create a slicind2d navigator context — l_context_add_slicing2d","text":"slicing2d context implements slicing using navigation graphs   scatterplot condition one two variables. Contexts detail explained webmanual accessible l_help. Please read section context running l_help(\"learn_R_display_graph.html#contexts\").","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_slicing2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a slicind2d navigator context — l_context_add_slicing2d","text":"","code":"l_context_add_slicing2d(navigator, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_slicing2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a slicind2d navigator context — l_context_add_slicing2d","text":"navigator navigator handle object ... arguments passed modify context states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_slicing2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a slicind2d navigator context — l_context_add_slicing2d","text":"context handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_add_slicing2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a slicind2d navigator context — l_context_add_slicing2d","text":"","code":"if(interactive()){  names(oliveAcids) <- c('p','p1','s','o','l','l1','a','e') nodes <- apply(combn(names(oliveAcids),2),2,               function(x)paste(x, collapse=':')) G <- completegraph(nodes) g <- l_graph(G) nav <- l_navigator_add(g) con <- l_context_add_slicing2d(nav, data=oliveAcids)  # symmetric range proportion around nav['proportion'] con['proportion'] <- 0.2  con['conditioning4d'] <- \"union\" con['conditioning4d'] <- \"intersection\" }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a context from a navigator — l_context_delete","title":"Delete a context from a navigator — l_context_delete","text":"Navigators can multiple contexts. function removes   context navigator.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a context from a navigator — l_context_delete","text":"","code":"l_context_delete(navigator, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a context from a navigator — l_context_delete","text":"navigator navigator hanlde id context id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_delete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a context from a navigator — l_context_delete","text":"information run: l_help(\"learn_R_display_graph.html#contexts\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_getLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the label of a context — l_context_getLabel","title":"Query the label of a context — l_context_getLabel","text":"Context labels eventually used context inspector.   function queries label context.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_getLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the label of a context — l_context_getLabel","text":"","code":"l_context_getLabel(navigator, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_getLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the label of a context — l_context_getLabel","text":"navigator navigator hanlde id context id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_getLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query the label of a context — l_context_getLabel","text":"information run: l_help(\"learn_R_display_graph.html#contexts\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List context ids of a navigator — l_context_ids","title":"List context ids of a navigator — l_context_ids","text":"Navigators can multiple contexts. function list   context ids navigator.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List context ids of a navigator — l_context_ids","text":"","code":"l_context_ids(navigator)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List context ids of a navigator — l_context_ids","text":"navigator navigator hanlde","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List context ids of a navigator — l_context_ids","text":"information run: l_help(\"learn_R_display_graph.html#contexts\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the label of a context — l_context_relabel","title":"Change the label of a context — l_context_relabel","text":"Context labels eventually used context inspector.   function relabels context.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the label of a context — l_context_relabel","text":"","code":"l_context_relabel(navigator, id, label)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the label of a context — l_context_relabel","text":"navigator navigator hanlde id context id label context label shown","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_context_relabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the label of a context — l_context_relabel","text":"information run: l_help(\"learn_R_display_graph.html#contexts\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_copyStates.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","title":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","text":"l_copyStates reads values states `source` assigns states name `target`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_copyStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","text":"","code":"l_copyStates(   source,   target,   states = NULL,   exclude = NULL,   excludeBasicStates = TRUE,   returnNames = FALSE )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_copyStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","text":"source `loon` object providing values states. target `loon` object whose states assigned values `sources` states name. states character vector states copied. `NULL` (default), states common (excluding identified exclusion parameters) copied `source` `target`. exclude character vector naming common states excluded copying.  Default NULL. excludeBasicStates logical indicating whether certain basic states excluded copy (`TRUE`, default). states include derived data variables (like \"x\", \"xTemp\", \"zoomX\", \"panX\", \"deltaX\", \"xlabel\", \"y\" counterparts) since values determine coordinates plot typically copied. Similarly \"swapAxes\" one basic states l_compound plots l_pairs() swapping axes can wreak havoc unintended. Finally, important pair basic states exclude \"linkingKey\" \"linkingGroup\" since changes  require proper synchronization. Setting `excludeBasicStates = TRUE` simple way avoid copying values basic states. Setting `excludeBasicStates = FALSE` allow copied well. returnNames logical indicate whether return names states successfully copied plots.  Default `FALSE`","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_copyStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","text":"character vector names states successfully copied (plot whose states affected), NULL none copied `returnNames == FALSE`.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_copyStates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A generic function to transfer the values of the states of one `loon` structure to another. — l_copyStates","text":"","code":"if(interactive()){ # Source and target are `l_plots`    p <- with(iris,          l_plot(x = Sepal.Width, y = Petal.Width,                 color = Species, glyph = \"ccircle\",                 size = 10, showGuides = TRUE,                 title = \"Edgar Anderson's Iris data\"                )            )     p2 <- with(iris,           l_plot(x = Sepal.Length, y = Petal.Length,                  title = \"Fisher's Iris data\"                  )               ) # Copy the states of p to p2 # First just the size and title    l_copyStates(source = p, target = p2,                 states = c(\"size\", \"title\")                 ) # Copy all but those associated with the variables    l_copyStates(source = p, target = p2)  # Suppose p had a linkingGroup, say \"Edgar\"    l_configure(p, linkingGroup = \"Edgar\", sync = \"push\")  # To force this linkingGroup to be copied to a new plot    p3 <- with(iris,           l_plot(x = Sepal.Length, y = Petal.Length,                  title = \"Fisher's Iris data\"                  )               )    l_copyStates(source = p, target = p3,                 states = c(\"linkingGroup\"),                 # To allow this to happen:                 excludeBasicStates = FALSE                 )     h <- with(iris,              l_hist((Petal.Width * Petal.Length),                     showStackedColors = TRUE,                     yshows = \"density\")                     )    l_copyStates(source = p, target = h)     sa <- l_serialaxes(iris, axes = \"parallel\")    l_copyStates(p, sa)     pp <- l_pairs(iris, showHistograms = TRUE)    suppressWarnings(l_copyStates(p, pp))     pp2 <- l_pairs(iris,                   color = iris$Species,                   showGuides = TRUE,                   title =\"Iris data\",                   glyph = \"ctriangle\")    l_copyStates(pp2, pp)    l_copyStates(pp2, p) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_createCompoundGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"For the target compound loon plot, creates the final grob from the class of the `target` and the `arrangeGrob.args` — l_createCompoundGrob","title":"For the target compound loon plot, creates the final grob from the class of the `target` and the `arrangeGrob.args` — l_createCompoundGrob","text":"target compound loon plot, creates final grob class `target` `arrangeGrob.args`","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_createCompoundGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For the target compound loon plot, creates the final grob from the class of the `target` and the `arrangeGrob.args` — l_createCompoundGrob","text":"","code":"l_createCompoundGrob(target, arrangeGrob.args)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_createCompoundGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For the target compound loon plot, creates the final grob from the class of the `target` and the `arrangeGrob.args` — l_createCompoundGrob","text":"target (compound) loon  plot arrangeGrob.args arguments described `gridExtra::arrangeGrob()`","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_createCompoundGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For the target compound loon plot, creates the final grob from the class of the `target` and the `arrangeGrob.args` — l_createCompoundGrob","text":"grob (list grobs) can handed `gTree()` `children = gList(returnedValue)` final grob constructed compound loon plot.  Default `l_compound` simply execute `gridExtra::arrangeGrob(arrangeGrob.args)`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_create_handle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a loon object handle — l_create_handle","title":"Create a loon object handle — l_create_handle","text":"function can used create loon object handles   vector widget path name object ids (order   parent-child relationships).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_create_handle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a loon object handle — l_create_handle","text":"","code":"l_create_handle(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_create_handle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a loon object handle — l_create_handle","text":"target loon object specification (e.g. \".l0.plot\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_create_handle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a loon object handle — l_create_handle","text":"loon's plot handles useful query modify plot states   via command line. information run: l_help(\"learn_R_intro.html#re-creating-object-handles\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_create_handle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a loon object handle — l_create_handle","text":"","code":"if(interactive()){   # plot handle p <- l_plot(x=1:3, y=1:3) p_new <- l_create_handle(unclass(p)) p_new['showScales']  # glyph handle gl <- l_glyph_add_text(p, text=LETTERS[1:3]) gl_new <- l_create_handle(c(as.vector(p), as.vector(gl))) gl_new['text']  # layer handle l <- l_layer_rectangle(p, x=c(1,3), y=c(1,3), color='yellow', index='end') l_new <- l_create_handle(c(as.vector(p), as.vector(l))) l_new['color']  # navigator handle g <- l_graph(linegraph(completegraph(LETTERS[1:3]))) nav <- l_navigator_add(g) nav_new <- l_create_handle(c(as.vector(g), as.vector(nav))) nav_new['from']  # context handle con <- l_context_add_context2d(nav) con_new <- l_create_handle(c(as.vector(g), as.vector(nav), as.vector(con))) con_new['separator']  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer-relative index of the item below the mouse cursor — l_currentindex","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"Checks visual item mouse cursor   , returns index visual item's position   corresponding variable dimension layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"","code":"l_currentindex(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"index visual item's position corresponding variable   dimension layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"details see l_help(\"learn_R_bind.html#item-bindings\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_currentindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer-relative index of the item below the mouse cursor — l_currentindex","text":"","code":"if(interactive()){  p <- l_plot(iris[,1:2], color=iris$Species)  printEntered <- function(W) {     cat(paste('Entered point ', l_currentindex(W), '\\n')) }  printLeave <- function(W) {     cat(paste('Left point ', l_currentindex(W), '\\n')) }  l_bind_item(p, tags='model&&point', event='<Enter>',             callback=function(W) {printEntered(W)})  l_bind_item(p, tags='model&&point', event='<Leave>',             callback=function(W) {printLeave(W)})  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tags of the item below the mouse cursor — l_currenttags","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"Retrieves tags visual item time   function evaluation mouse cursor.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"","code":"l_currenttags(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"vector item tags visual","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"details see l_help(\"learn_R_bind.html#item-bindings\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_currenttags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tags of the item below the mouse cursor — l_currenttags","text":"","code":"if(interactive()){  printTags <- function(W) {     print(l_currenttags(W)) }  p <- l_plot(x=1:3, y=1:3, title='Query Visual Item Tags')  l_bind_item(p, 'all', '<ButtonPress>', function(W)printTags(W)) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an R data.frame to a Tcl dictionary — l_data","title":"Convert an R data.frame to a Tcl dictionary — l_data","text":"helper function convert R data.frame object   Tcl data frame object. function useful changing data state   l_configure.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an R data.frame to a Tcl dictionary — l_data","text":"","code":"l_data(data)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an R data.frame to a Tcl dictionary — l_data","text":"data data.frame object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an R data.frame to a Tcl dictionary — l_data","text":"string represents data.frame Tcl dictionary data   structure.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a loon plot as an image — l_export","title":"Export a loon plot as an image — l_export","text":"supported image formats dependent system   environment. Plots can always exported PostScript format.   Exporting displays .pdfs possible command line tool   epstopdf installed. Finally, exporting either png, jpg,   bmp, tiff gif requires Img Tcl extension.   choosing one formats   depend Img extension, possible export Tk widget   image including inspectors.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a loon plot as an image — l_export","text":"","code":"l_export(widget, filename, width, height)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a loon plot as an image — l_export","text":"widget widget path string object handle filename path output file width image width pixels height image height pixels","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a loon plot as an image — l_export","text":"path exported file","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_export.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export a loon plot as an image — l_export","text":"Note CTRL-P key combination opens dialog export   graphic. native export format ps Tk canvas   offers. l_export fails formats please   resort screen capture method moment.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_export_valid_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list of the available image formats when exporting a loon plot — l_export_valid_formats","title":"Return a list of the available image formats when exporting a loon plot — l_export_valid_formats","text":"supported image formats dependent system   environment. Plots can always exported Postscript format.   Exporting displays .pdfs possible command line tool   epstopdf installed. Finally, exporting either png, jpg, bmp, tiff   gif requires Img Tcl extension. choosing one formats   depend Img extension, possible export Tk widget   image including inspectors.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_export_valid_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list of the available image formats when exporting a loon plot — l_export_valid_formats","text":"","code":"l_export_valid_formats()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_export_valid_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list of the available image formats when exporting a loon plot — l_export_valid_formats","text":"vector image formats available exporting loon plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout Facets across multiple panels — l_facet","title":"Layout Facets across multiple panels — l_facet","text":"takes loon widget forms matrix loon widget facets.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout Facets across multiple panels — l_facet","text":"","code":"l_facet(widget, by, on, layout = c(\"grid\", \"wrap\", \"separate\"), ...)  # S3 method for class 'loon' l_facet(   widget,   by,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   connectedScales = c(\"cross\", \"row\", \"column\", \"both\", \"x\", \"y\", \"none\"),   linkingGroup,   nrow = NULL,   ncol = NULL,   inheritLayers = TRUE,   labelLocation = c(\"top\", \"right\"),   labelBackground = \"gray80\",   labelForeground = \"black\",   labelBorderwidth = 2,   labelRelief = c(\"groove\", \"flat\", \"raised\", \"sunken\", \"ridge\", \"solid\"),   plotWidth = 200,   plotHeight = 200,   parent = NULL,   ... )  # S3 method for class 'l_serialaxes' l_facet(   widget,   by,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   linkingGroup,   nrow = NULL,   ncol = NULL,   labelLocation = c(\"top\", \"right\"),   labelBackground = \"gray80\",   labelForeground = \"black\",   labelBorderwidth = 2,   labelRelief = c(\"groove\", \"flat\", \"raised\", \"sunken\", \"ridge\", \"solid\"),   plotWidth = 200,   plotHeight = 200,   parent = NULL,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout Facets across multiple panels — l_facet","text":"widget loon widget loon plot can separated variables mutiple panels. argument can take vector, list lengths data.frame input. formula, optional data frame containing variables . variables found data, variables taken environment(formula), typically environment function called. layout layout facets 'grid', 'wrap' 'separate' ... named arguments modify `loon` widget states connectedScales Determines scales facets connected depending layout used.  value layout, scales connected follows: layout = \"wrap\":  Across facets, connectedScales \"x\",  \"x\"  scales connected \"y\", \"y\" scales connected \"\",  \"x\" \"y\" scales connected \"none\",  neither \"x\" \"y\" scales connected.    value, \"y\" scale connected. layout = \"grid\":  Across facets, connectedScales \"cross\", scales row column connected \"row\", \"x\" \"y\" scales facets row connected \"column\", \"x\" \"y\" scales facets column connected \"x\", \"x\"  scales connected (regardless column) \"y\", \"y\" scales connected (regardless row) \"\",  \"x\" \"y\" scales connected facets \"none\",  neither \"x\" \"y\" scales connected facets. linkingGroup linkingGroup widgets. missing, default paste \"layout\" current tk path number. nrow number layout rows ncol number layout columns inheritLayers Logical value. widget layers inherited layout panels? labelLocation Labels location. Length two vector layout grid. first one used determine position column labels ('top' 'bottom'). second one used determine position row labels ('right' 'left'). Length one vector layout wrap, 'top' 'bottom'. labelBackground Label background colour labelForeground Label foreground colour labelBorderwidth Label border width labelRelief Label relief plotWidth default plot width (pixels) plotHeight default plot height (pixels) parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layout Facets across multiple panels — l_facet","text":"`l_facet` object (`l_compound` object), list named elements, representing separate interactive plot. names plots self explanatory list plots can accessed `l_facet` object via `l_getPlots()`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_facet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout Facets across multiple panels — l_facet","text":"","code":"if(interactive()) {   library(maps)   p <- with(quakes, l_plot(long, lat, linkingGroup = \"quakes\"))   p[\"color\"][quakes$mag < 5 & quakes$mag >= 4] <- \"lightgreen\"   p[\"color\"][quakes$mag < 6 & quakes$mag >= 5] <- \"lightblue\"   p[\"color\"][quakes$mag >= 6] <- \"firebrick\"   # A Fiji map   NZFijiMap <- map(\"world2\", regions = c(\"New Zealand\", \"Fiji\"), plot = FALSE)   l_layer(p, NZFijiMap,           label = \"New Zealand and Fiji\",           color = \"forestgreen\",           index = \"end\")   fp <- l_facet(p, by = \"color\", layout = \"grid\",                 linkingGroup = \"quakes\")    size <- c(rep(50, 2), rep(25, 2), rep(50, 2))   color <- c(rep(\"red\", 3), rep(\"green\", 3))   p <- l_plot(x = 1:6, y = 1:6,               size = size,               color = color)   g <- l_glyph_add_text(p, text = 1:6)   p['glyph'] <- g   on <- data.frame(Factor1 = c(rep(\"A\", 3), rep(\"B\", 3)),                    Factor2 = rep(c(\"C\", \"D\"), 3))   cbind(on, size = size, color = color)   fp <- l_facet(p, by = Factor1 ~ Factor2, on = on) }  if(interactive()) {  # serialaxes facets s <- l_serialaxes(iris[, -5], color = iris$Species) fs <- l_facet(s, layout = \"wrap\", by = iris$Species) # The linkingGroup can be printed or accessed by l_configure(s, linkingGroup = fs[[1]]['linkingGroup'], sync = \"pull\") }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on current bins from a histogram — l_getBinData","title":"Get information on current bins from a histogram — l_getBinData","text":"Queries histogram returns information active cases contained histogram's bins.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on current bins from a histogram — l_getBinData","text":"","code":"l_getBinData(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on current bins from a histogram — l_getBinData","text":"widget loon histogram widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on current bins from a histogram — l_getBinData","text":"nested list bins histogram contain active points. bin list counts, point indices, minimum (x0) maximum (x1) bin.  Loon histogram bins open  left closed right default, namely \"(x0, x1]\". counts points identify number ids points, selected, colour bin (identified hex12 colour tcl).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the ids of the active points in each bin of a histogram — l_getBinIds","title":"Gets the ids of the active points in each bin of a histogram — l_getBinIds","text":"Queries histogram returns ids active points bin contains active points.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the ids of the active points in each bin of a histogram — l_getBinIds","text":"","code":"l_getBinIds(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the ids of the active points in each bin of a histogram — l_getBinIds","text":"widget loon histogram widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getBinIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the ids of the active points in each bin of a histogram — l_getBinIds","text":"named list bins histogram ids active points.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getColorList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get loon's color mapping list — l_getColorList","title":"Get loon's color mapping list — l_getColorList","text":"color mapping list used loon convert nominal values   color values, see documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getColorList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get loon's color mapping list — l_getColorList","text":"","code":"l_getColorList()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getColorList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get loon's color mapping list — l_getColorList","text":"vector hex-encoded colors","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getDeprecatedLinkedVar.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to determine which, if any, linked variables in a plot are now deprecated. — l_getDeprecatedLinkedVar","title":"A helper function to determine which, if any, linked variables in a plot are now deprecated. — l_getDeprecatedLinkedVar","text":"Checks linkable states linked, whether input state default one, valid, equal plot current states.  intended general user.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getDeprecatedLinkedVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to determine which, if any, linked variables in a plot are now deprecated. — l_getDeprecatedLinkedVar","text":"","code":"l_getDeprecatedLinkedVar(   widget,   args,   modifiedLinkedStates = character(0L),   l_className = NULL )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getDeprecatedLinkedVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to determine which, if any, linked variables in a plot are now deprecated. — l_getDeprecatedLinkedVar","text":"widget loon widget list loon widgets args named list state values linkable state variables named list. modifiedLinkedStates vector variable names modified link states/ l_className class loon widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getDeprecatedLinkedVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to determine which, if any, linked variables in a plot are now deprecated. — l_getDeprecatedLinkedVar","text":"named vector, list vectors, logicals indicating whether linkable states need deprecated .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getFromPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Create loon objects from path name — l_getFromPath","title":"Create loon objects from path name — l_getFromPath","text":"function can used create loon objects   valid widget path name. main difference l_create_handle   l_getFromPath can take loon compound widget path   l_create_handle .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getFromPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create loon objects from path name — l_getFromPath","text":"","code":"l_getFromPath(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getFromPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create loon objects from path name — l_getFromPath","text":"target loon object specification (e.g. \".l0.plot\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getFromPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create loon objects from path name — l_getFromPath","text":"information run: l_help(\"learn_R_intro.html#re-creating-object-handles\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getFromPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create loon objects from path name — l_getFromPath","text":"","code":"if (FALSE) { # \\dontrun{  l_pairs(iris, showHistogram = TRUE)  # The path can be found at the top of tk title  # Suppose it is the first loon widget, this path should be \".l0.pairs\"  p <- l_create_handle(\".l0.pairs\") # error  p <- l_getFromPath(\".l0.pairs\") } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a loongraph or graph object from loon's graph display — l_getGraph","title":"Extract a loongraph or graph object from loon's graph display — l_getGraph","text":"graph display represents graph nodes,   , , isDirected plot states. function   creates loongraph graph object using states.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a loongraph or graph object from loon's graph display — l_getGraph","text":"","code":"l_getGraph(widget, asloongraph = TRUE)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a loongraph or graph object from loon's graph display — l_getGraph","text":"widget graph widget handle asloongraph boolean, TRUE function returns loongraph object, otherwise function returns graph object defined graph R package.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a loongraph or graph object from loon's graph display — l_getGraph","text":"loongraph graph object","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLinkedStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the States that are Linked with Loon's Standard Linking Model — l_getLinkedStates","title":"Query the States that are Linked with Loon's Standard Linking Model — l_getLinkedStates","text":"Loon's standard linking model based three levels,   linkingGroup linkingKey states used   linkable states. See details documentation   l_setLinkedStates.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLinkedStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the States that are Linked with Loon's Standard Linking Model — l_getLinkedStates","text":"","code":"l_getLinkedStates(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLinkedStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the States that are Linked with Loon's Standard Linking Model — l_getLinkedStates","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLinkedStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the States that are Linked with Loon's Standard Linking Model — l_getLinkedStates","text":"vector state names linked states","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLocations.html","id":null,"dir":"Reference","previous_headings":"","what":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","title":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","text":"target compound loon plot, determines location (excluding grobs) arguments pass `gridExtra::arrangeGrob()`","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLocations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","text":"","code":"l_getLocations(target)  # S3 method for class 'l_facet' l_getLocations(target)  # S3 method for class 'l_pairs' l_getLocations(target)  # S3 method for class 'l_ts' l_getLocations(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLocations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","text":"target (compound) loon  plot whose locations needed lay .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLocations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","text":"list appropriate subset named location arguments `c(\"ncol\", \"nrow\", \"layout_matrix\", \"heights\", \"widths\")`.  many heights  widths plots returned l_getPlots(); specify  relative height width plot display.  layout_matrix  nrow ncol matrix whose entries identify location  plot l_getPlots() index.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getLocations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"For the target compound loon plot, determines location (only and excluding the grobs) arguments to pass to `gridExtra::arrangeGrob()` — l_getLocations","text":"","code":"if(interactive()) {  pp <- l_pairs(iris, showHistograms = TRUE) ll <- l_getLocations(pp) nplots <- length(l_getPlots(pp)) # the plots returned by l_getPlots(pp) are positioned # in order by the layout_matrix ll$layout_matrix }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOption.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of a loon display option — l_getOption","title":"Get the value of a loon display option — l_getOption","text":"loon's displays access set common options. function accesses returns current value named option.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of a loon display option — l_getOption","text":"","code":"l_getOption(option)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of a loon display option — l_getOption","text":"option name option queried.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of a loon display option — l_getOption","text":"value named option.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of a loon display option — l_getOption","text":"","code":"l_getOption(\"background\") #> [1] \"white\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOptionNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of all loon display options — l_getOptionNames","title":"Get the names of all loon display options — l_getOptionNames","text":"loon's displays access set common options. function accesses returns names loon options.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOptionNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of all loon display options — l_getOptionNames","text":"","code":"l_getOptionNames()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOptionNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of all loon display options — l_getOptionNames","text":"vector loon display option names.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getOptionNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of all loon display options — l_getOptionNames","text":"","code":"l_getOptionNames() #>  [1] \"linewidth\"                      \"defaultMetaTempMove\"            #>  [3] \"metaMulSel\"                     \"default-font\"                   #>  [5] \"guidelines\"                     \"guidesBackground\"               #>  [7] \"colors-palette-hcl\"             \"brush_color\"                    #>  [9] \"export_ps_font\"                 \"facetLabelBackground\"           #> [11] \"size\"                           \"select-color\"                   #> [13] \"font-xlabel\"                    \"glyph\"                          #> [15] \"ticks_density\"                  \"defaultMetaMulSel\"              #> [17] \"font-title\"                     \"printConfigureDebug\"            #> [19] \"fixed_guide_distance\"           \"font\"                           #> [21] \"image_sizes\"                    \"background\"                     #> [23] \"printInConfigurationWarningMsg\" \"abbreviations\"                  #> [25] \"colors\"                         \"printInConfigurationWarning\"    #> [27] \"image_scale\"                    \"metaKeys\"                       #> [29] \"foreground\"                     \"noscrollInspector\"              #> [31] \"metaTempMove\"                   \"canvas_bg_guides\"               #> [33] \"tick_length\"                    \"font-text_glyph\"                #> [35] \"brush_color_handle\"             \"font-ylabel\"                    #> [37] \"colors-palette\"                 \"size_0_rect\"                    #> [39] \"font-scales\"                    \"color\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"For the target compound loon plot, determines all the loon plots in that compound plot. — l_getPlots","title":"For the target compound loon plot, determines all the loon plots in that compound plot. — l_getPlots","text":"target compound loon plot, determines loon plots compound plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For the target compound loon plot, determines all the loon plots in that compound plot. — l_getPlots","text":"","code":"l_getPlots(target)  # S3 method for class 'l_facet' l_getPlots(target)  # S3 method for class 'l_pairs' l_getPlots(target)  # S3 method for class 'l_ts' l_getPlots(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For the target compound loon plot, determines all the loon plots in that compound plot. — l_getPlots","text":"target (compound) loon  plot laid .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For the target compound loon plot, determines all the loon plots in that compound plot. — l_getPlots","text":"list named arguments values passed `gridExtra::arrangeGrob()`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getSavedStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve saved plot states from the named file. — l_getSavedStates","title":"Retrieve saved plot states from the named file. — l_getSavedStates","text":"l_getSavedStates reads file created l_saveStates() containing saved info states loon plot returning loon object class \"l_savedStates\". helpful, example, using RMarkdown notebooking facility recreate earlier saved loon plot present document. Note plot saved \"l_compound\" l_getSavedStates return list plots list item saved states corresponding plots.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getSavedStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve saved plot states from the named file. — l_getSavedStates","text":"","code":"l_getSavedStates(file = stop(\"missing name of file\"), ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getSavedStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve saved plot states from the named file. — l_getSavedStates","text":"file connection name file \"l_savedStates\" R object read (readRDS(). ... arguments passed readRDS().","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getSavedStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve saved plot states from the named file. — l_getSavedStates","text":"list class `l_savedStates` containing states values. Also attribute `l_plot_class` contains class vector plot `p`","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_getSavedStates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve saved plot states from the named file. — l_getSavedStates","text":"","code":"if(interactive()){ # # Suppose you have some plot that you created like p <- l_plot(iris, showGuides = TRUE) # # and coloured groups by hand (using the mouse and inspector) # so that you ended up with these colours: p[\"color\"] <- rep(c( \"lightgreen\", \"firebrick\",\"skyblue\"),                   each = 50) # # Having determined the colours you could save them (and other states) # in a file of your choice, here some tempfile: myFileName <- tempfile(\"myPlot\", fileext = \".rds\") # # Save the named states of p l_saveStates(p,              states = c(\"color\", \"active\", \"selected\"),              file = myFileName) # # These can later be retrieved and used on a new plot # (say in RMarkdown) to set the new plot's values to those # previously determined interactively. p_new <- l_plot(iris, showGuides = TRUE) p_saved_info <- l_getSavedStates(myFileName) # # We can tell what kind of plot was saved attr(p_saved_info, \"l_plot_class\") # # The result is a list of class \"l_savedStates\" which # contains the names of the p_new[\"color\"] <- p_saved_info$color # # The result is that p_new looks like p did # (after your interactive exploration) # and can now be plotted as part of the document plot(p_new) # # For compound plots, the info_states are saved for each plot pp <- l_pairs(iris) myPairsFile <- tempfile(\"myPairsPlot\", fileext = \".rds\") # # Save the names states of pp l_saveStates(pp,              states = c(\"color\", \"active\", \"selected\"),              file = myPairsFile) pairs_info <-  l_getSavedStates(myPairsFile) # # For compound plots, the info states for all constitutent # plots are saved.  The result is a list of class \"l_savedStates\" # whose elements are the named plots as \"l_savedStates\" # themselves. # # The names of the plots which were saved names(pairs_info) # # And the names of the info states whose values were saved for # the first plot names(pairs_info$x2y1) # # While it is generally recommended to access (or assign) saved # state values using the $ sign accessor, paying attention to the # nested list structure of an \"l_savedStates\" object (especially for # l_compound plots), R's square bracket notation [] has also been # specialized to allow a syntactically simpler (but less precise) # access to the contents of an l_savedStates object. # # For example, p_saved_info[\"color\"] # # returns the saved \"color\" as a vector of colours. # # In contrast, pairs_info[\"x2y1\"] # returns the l_savedStates object of the states of the plot named \"x2y1\", # but pairs_info[\"color\"] # returns a LIST of colour vectors, by plot as they were named in pairs_info # # As a consequence, the following two are equivalent, pairs_info[\"x2y1\"][\"color\"] # finds the value of \"color\" from an \"l_savedStates\" object # whereas pairs_info[\"color\"][[\"x2y1\"]] # finds the value of \"x2y1\" from a \"list\" object # # Also, setting a state of an \"l_savedStates\" is possible # (though not generally recommended; better to save the states again) # p_saved_info[\"color\"] <- rep(\"red\", 150) # changes the saved state \"color\" on p_saved_info # whereas pairs_info[\"color\"] <- rep(\"red\", 150) # will set the red color for any plot within pairs_info having \"color\" saved. # In this way the assignment function via [] is trying to be clever # for l_savedStates for compound plots and so may have unintentional # consequences if the user is not careful.  # Generally, one does not want/need to change the value of saved states. # Instead, the states would be saved again from the interactive plot # if change is necessary. # Alternatively, more nuanced and careful control is maintained using # the $ selectors for lists. }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getScaledData.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Scaling — l_getScaledData","title":"Data Scaling — l_getScaledData","text":"Scaling data set","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getScaledData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Scaling — l_getScaledData","text":"","code":"l_getScaledData(   data,   sequence = NULL,   scaling = c(\"variable\", \"observation\", \"data\", \"none\"),   displayOrder = NULL,   reserve = FALSE,   as.data.frame = FALSE )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_getScaledData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Scaling — l_getScaledData","text":"data data frame sequence vector variable names scaled. NULL, set whole column names (data set scaled). scaling one 'variable', 'data', 'observation' 'none' specify data scaled. See details displayOrder order display reserve TRUE, return variables shown sequence well; else return variables defined sequence. .data.frame Return matrix data.frame","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_getScaledData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Scaling — l_getScaledData","text":"scaling state defines data scaled. axes display 0 one end 1 . following explanation assume data nxp dimensional matrix. scaling options ","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_get_arrangeGrobArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"For the target (compound) loon plot, determines all arguments (i.e. including the grobs) to be passed to `gridExtra::arrangeGrob()` so as to determine the layout in `grid` graphics. — l_get_arrangeGrobArgs","title":"For the target (compound) loon plot, determines all arguments (i.e. including the grobs) to be passed to `gridExtra::arrangeGrob()` so as to determine the layout in `grid` graphics. — l_get_arrangeGrobArgs","text":"target (compound) loon plot, determines arguments (.e. including grobs) passed `gridExtra::arrangeGrob()` determine layout `grid` graphics.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_get_arrangeGrobArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For the target (compound) loon plot, determines all arguments (i.e. including the grobs) to be passed to `gridExtra::arrangeGrob()` so as to determine the layout in `grid` graphics. — l_get_arrangeGrobArgs","text":"","code":"l_get_arrangeGrobArgs(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_get_arrangeGrobArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For the target (compound) loon plot, determines all arguments (i.e. including the grobs) to be passed to `gridExtra::arrangeGrob()` so as to determine the layout in `grid` graphics. — l_get_arrangeGrobArgs","text":"target (compound) loon  plot laid .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_get_arrangeGrobArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For the target (compound) loon plot, determines all arguments (i.e. including the grobs) to be passed to `gridExtra::arrangeGrob()` so as to determine the layout in `grid` graphics. — l_get_arrangeGrobArgs","text":"list named arguments values passed `gridExtra::arrangeGrob()`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for adding non-primitive glyphs — l_glyph_add.default","title":"Default method for adding non-primitive glyphs — l_glyph_add.default","text":"Generic function write new glyph types using loon's primitive   glyphs","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for adding non-primitive glyphs — l_glyph_add.default","text":"","code":"# Default S3 method l_glyph_add(widget, type, label = \"\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for adding non-primitive glyphs — l_glyph_add.default","text":"widget widget path string object handle type loon-native non-primitive glyph type, one 'text', 'serialaxes', 'image', '[polygon', 'pointrange' label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"Generic method adding user-defined glyphs. See details   information non-primitive primitive glyphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"","code":"l_glyph_add(widget, type, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"widget widget path string object handle type object used method dispatch ... arguments passed method","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"String glyph id. Every set non-primitive glyphs id   (character).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"scatterplot graph displays n-dimensional state   'glyph' assigns data point graph node glyph (.e. visual representation). Loon distinguishes primitive non-primitive glyphs: primitive glyphs always available use whereas non-primitive glyphs need first specified added plot can used. primitive glyphs :  non-primitive glyph types creator functions :  adding non-primitive glyphs display, number glyphs needs match dimension n plot. words, glyph needs defined observations. See examples. Currently loon support compound glyphs. However, possible cunstruct arbitrary glyph using system save png re-import image glyphs using l_glyph_add_image. information run: l_help(\"learn_R_display_plot.html#glyphs\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add non-primitive glyphs to a scatterplot or graph display — l_glyph_add","text":"","code":"if(interactive()){  # Simple Example with Text Glyphs p <- with(olive, l_plot(stearic, eicosenoic, color=Region)) g <- l_glyph_add_text(p, text=olive$Area, label=\"Area\") p['glyph'] <- g  if (FALSE) { # \\dontrun{ demo(\"l_glyphs\", package=\"loon\") } # }  # create a plot that demonstrates the primitive glyphs and the text glyphs p <- l_plot(x=1:15, y=rep(0,15), size=10, showLabels=FALSE) text_glyph <- l_glyph_add_text(p, text=letters [1:15]) p['glyph'] <- c(     'circle', 'ocircle', 'ccircle',     'square', 'osquare' , 'csquare',     'triangle', 'otriangle', 'ctriangle',     'diamond', 'odiamond', 'cdiamond',     rep(text_glyph, 3) ) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an image glyphs — l_glyph_add_image","title":"Add an image glyphs — l_glyph_add_image","text":"Image glyphs useful show pictures sophisticated   compound glyphs. Note images Tk canvas support transparancy.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an image glyphs — l_glyph_add_image","text":"","code":"l_glyph_add_image(widget, images, label = \"\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an image glyphs — l_glyph_add_image","text":"widget widget path string object handle images Tk image references, see l_image_import_array l_image_import_files helper functions. label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an image glyphs — l_glyph_add_image","text":"information run: l_help(\"learn_R_display_plot.html#images\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an image glyphs — l_glyph_add_image","text":"","code":"if(interactive()){  p <- with(olive, l_plot(palmitic ~ stearic, color = Region)) img_paths <- list.files(file.path(find.package(package = 'loon'), \"images\"), full.names = TRUE) imgs <- setNames(l_image_import_files(img_paths),                  tools::file_path_sans_ext(basename(img_paths))) i <- pmatch(gsub(\"^[[:alpha:]]+-\",\"\", olive$Area), names(imgs), duplicates.ok = TRUE)  g <- l_glyph_add_image(p, imgs[i], label=\"Flags\") p['glyph'] <- g }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_pointrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Pointrange Glyph — l_glyph_add_pointrange","title":"Add a Pointrange Glyph — l_glyph_add_pointrange","text":"Pointrange glyphs show filled circle x-y location   also y-range.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_pointrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Pointrange Glyph — l_glyph_add_pointrange","text":"","code":"l_glyph_add_pointrange(   widget,   ymin,   ymax,   linewidth = 1,   showArea = TRUE,   label = \"\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_pointrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Pointrange Glyph — l_glyph_add_pointrange","text":"widget widget path string object handle ymin vector lower y-yalue point range. ymax vector upper y-yalue point range. linewidth line pixel. showArea boolean, show filled point just outline point label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_pointrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Pointrange Glyph — l_glyph_add_pointrange","text":"","code":"if(interactive()){  p <- l_plot(x = 1:3, color = c('red', 'blue', 'green'), showScales=TRUE) g <- l_glyph_add_pointrange(p, ymin=(1:3)-(1:3)/5, ymax=(1:3)+(1:3)/5) p['glyph'] <- g }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Polygon Glyph — l_glyph_add_polygon","title":"Add a Polygon Glyph — l_glyph_add_polygon","text":"Add one polygon per scatterplot point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Polygon Glyph — l_glyph_add_polygon","text":"","code":"l_glyph_add_polygon(   widget,   x,   y,   linewidth = 1,   showArea = TRUE,   label = \"\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Polygon Glyph — l_glyph_add_polygon","text":"widget widget path string object handle x nested list x-coordinates polygons (relative ), one list element scatterplot point. y nested list y-coordinates polygons, one list element scatterplot point. linewidth linewidth outline. showArea boolean, show filled polygon just outline label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Polygon Glyph — l_glyph_add_polygon","text":"polygon can useful point glyph visualize arbitrary shapes   airplanes, animals shapes available   primitive glyph types (e.g. cross). l_glyphs demo example   polygon glyphs reuse .","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Polygon Glyph — l_glyph_add_polygon","text":"","code":"if(interactive()){  x_star <-     c(-0.000864304235090734, 0.292999135695765, 0.949870354364736,       0.474503025064823, 0.586862575626621, -0.000864304235090734,       -0.586430423509075, -0.474070872947277, -0.949438202247191,       -0.29256698357822) y_star <-     c(-1, -0.403630077787381, -0.308556611927398, 0.153846153846154,       0.808556611927398, 0.499567847882455, 0.808556611927398,       0.153846153846154, -0.308556611927398, -0.403630077787381) x_cross <-     c(-0.258931143762604, -0.258931143762604, -0.950374531835206,       -0.950374531835206, -0.258931143762604, -0.258931143762604,       0.259651397291847, 0.259651397291847, 0.948934024776722,       0.948934024776722, 0.259651397291847, 0.259651397291847) y_cross <-     c(-0.950374531835206, -0.258931143762604, -0.258931143762604,       0.259651397291847, 0.259651397291847, 0.948934024776722,       0.948934024776722, 0.259651397291847, 0.259651397291847,       -0.258931143762604, -0.258931143762604, -0.950374531835206) x_hexagon <-     c(0.773552290406223, 0, -0.773552290406223, -0.773552290406223,       0, 0.773552290406223) y_hexagon <-     c(0.446917314894843, 0.894194756554307, 0.446917314894843,       -0.447637568424085, -0.892754249495822, -0.447637568424085)  p <- l_plot(1:3, 1:3)  gl <- l_glyph_add_polygon(p, x = list(x_star, x_cross, x_hexagon),                           y = list(y_star, y_cross, y_hexagon))  p['glyph'] <- gl  gl['showArea'] <- FALSE }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_serialaxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Serialaxes Glyph — l_glyph_add_serialaxes","title":"Add a Serialaxes Glyph — l_glyph_add_serialaxes","text":"Serialaxes glyph show either star glyph parallel   coordinate glyph point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_serialaxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Serialaxes Glyph — l_glyph_add_serialaxes","text":"","code":"l_glyph_add_serialaxes(   widget,   data,   sequence,   linewidth = 1,   scaling = \"variable\",   axesLayout = \"radial\",   showAxes = FALSE,   andrews = FALSE,   axesColor = \"gray70\",   showEnclosing = FALSE,   bboxColor = \"gray70\",   label = \"\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_serialaxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Serialaxes Glyph — l_glyph_add_serialaxes","text":"widget widget path string object handle data data frame numerical data sequence vector variable names defines axes sequence linewidth linewidth outline scaling one 'variable', 'data', 'observation' 'none' specify data scaled. See Details Examples information. axesLayout either \"radial\" \"parallel\" showAxes boolean indicate whether axes shown andrews Andrew's curve ('Fourier' transformation) axesColor color axes showEnclosing boolean, circle (axesLayout=radial) sqaure (axesLayout=parallel) show bounding box/circle glyph (showing unit circle rectangle height 1 scaling=none) bboxColor color bounding box/circle label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_serialaxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Serialaxes Glyph — l_glyph_add_serialaxes","text":"","code":"if(interactive()){  p <- with(olive, l_plot(oleic, stearic, color=Area)) gs <- l_glyph_add_serialaxes(p, data=olive[,-c(1,2)], showArea=FALSE) p['glyph'] <- gs }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Text Glyph — l_glyph_add_text","title":"Add a Text Glyph — l_glyph_add_text","text":"text glyph can multiline string.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Text Glyph — l_glyph_add_text","text":"","code":"l_glyph_add_text(widget, text, label = \"\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Text Glyph — l_glyph_add_text","text":"widget widget path string object handle text text strings observartion. object factor labels get extracted .character. label label glyph (currently shown glyph inspector) ... state arguments","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_add_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Text Glyph — l_glyph_add_text","text":"","code":"if(interactive()){  p <- l_plot(iris, color = iris$Species) g <- l_glyph_add_text(p, iris$Species, \"test_label\") p['glyph'] <- g }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Glyph — l_glyph_delete","title":"Delete a Glyph — l_glyph_delete","text":"Delete glyph plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Glyph — l_glyph_delete","text":"","code":"l_glyph_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Glyph — l_glyph_delete","text":"widget widget path string object handle id glyph id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Glyph Label — l_glyph_getLabel","title":"Get Glyph Label — l_glyph_getLabel","text":"Returns label glyph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Glyph Label — l_glyph_getLabel","text":"","code":"l_glyph_getLabel(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Glyph Label — l_glyph_getLabel","text":"widget widget path string object handle id glyph id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getType.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Glyph Type — l_glyph_getType","title":"Get Glyph Type — l_glyph_getType","text":"Query type glyph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Glyph Type — l_glyph_getType","text":"","code":"l_glyph_getType(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_getType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Glyph Type — l_glyph_getType","text":"widget widget path string object handle id glyph id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List glyphs ids — l_glyph_ids","title":"List glyphs ids — l_glyph_ids","text":"List non-primitive glyph ids attached display.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List glyphs ids — l_glyph_ids","text":"","code":"l_glyph_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List glyphs ids — l_glyph_ids","text":"widget widget path string object handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabel Glyph — l_glyph_relabel","title":"Relabel Glyph — l_glyph_relabel","text":"Change label glyph. Note label   displayed glyph inspector.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabel Glyph — l_glyph_relabel","text":"","code":"l_glyph_relabel(widget, id, label)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabel Glyph — l_glyph_relabel","text":"widget widget path string object handle id glyph id label new label","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyph_relabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relabel Glyph — l_glyph_relabel","text":"","code":"if(interactive()){  p <- l_plot(iris, color = iris$Species) g <- l_glyph_add_text(p, iris$Species, \"test_label\") p['glyph'] <- g l_glyph_relabel(p, g, \"Species\") }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Glyphs Inspector — l_glyphs_inspector","title":"Create a Glyphs Inspector — l_glyphs_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Glyphs Inspector — l_glyphs_inspector","text":"","code":"l_glyphs_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Glyphs Inspector — l_glyphs_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Glyphs Inspector — l_glyphs_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Glyphs Inspector — l_glyphs_inspector","text":"","code":"if(interactive()){  i <- l_glyphs_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Image Glyph Inspector — l_glyphs_inspector_image","title":"Create a Image Glyph Inspector — l_glyphs_inspector_image","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Image Glyph Inspector — l_glyphs_inspector_image","text":"","code":"l_glyphs_inspector_image(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Image Glyph Inspector — l_glyphs_inspector_image","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Image Glyph Inspector — l_glyphs_inspector_image","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Image Glyph Inspector — l_glyphs_inspector_image","text":"","code":"if(interactive()){  i <- l_glyphs_inspector_image() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_pointrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","title":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_pointrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","text":"","code":"l_glyphs_inspector_pointrange(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_pointrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_pointrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_pointrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Pointrange Glyph Inspector — l_glyphs_inspector_pointrange","text":"","code":"if(interactive()){  i <- l_glyphs_inspector_pointrange() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_serialaxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","title":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_serialaxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","text":"","code":"l_glyphs_inspector_serialaxes(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_serialaxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_serialaxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_serialaxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Serialaxes Glyph Inspector — l_glyphs_inspector_serialaxes","text":"","code":"if(interactive()){  i <- l_glyphs_inspector_serialaxes() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Text Glyph Inspector — l_glyphs_inspector_text","title":"Create a Text Glyph Inspector — l_glyphs_inspector_text","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Text Glyph Inspector — l_glyphs_inspector_text","text":"","code":"l_glyphs_inspector_text(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Text Glyph Inspector — l_glyphs_inspector_text","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Text Glyph Inspector — l_glyphs_inspector_text","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_glyphs_inspector_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Text Glyph Inspector — l_glyphs_inspector_text","text":"","code":"if(interactive()){  i <- l_glyphs_inspector_text() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic funtction to create an interactive graph display — l_graph","title":"Generic funtction to create an interactive graph display — l_graph","text":"Interactive graphs loon currently often used   navigation graphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic funtction to create an interactive graph display — l_graph","text":"","code":"l_graph(nodes, ...)  # S3 method for class 'graph' l_graph(nodes, ...)  # S3 method for class 'loongraph' l_graph(nodes, ...)  # Default S3 method l_graph(nodes = \"\", from = \"\", to = \"\", isDirected = FALSE, parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic funtction to create an interactive graph display — l_graph","text":"nodes object method dispatch ... arguments passed methods vector node names -pairs edges vector node names -pairs edges isDirected boolean state specify whether edges directions parent parent widget graph display","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic funtction to create an interactive graph display — l_graph","text":"graph handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic funtction to create an interactive graph display — l_graph","text":"information run: l_help(\"learn_R_display_graph.html#graph\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic funtction to create an interactive graph display — l_graph","text":"","code":"if(interactive()) {  G <- completegraph(nodes=names(iris))  LG <- linegraph(G, sep=\":\")  g <- l_graph(LG) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Graph Inspector — l_graph_inspector","title":"Create a Graph Inspector — l_graph_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Graph Inspector — l_graph_inspector","text":"","code":"l_graph_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Graph Inspector — l_graph_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Graph Inspector — l_graph_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Graph Inspector — l_graph_inspector","text":"","code":"if(interactive()){  i <- l_graph_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","title":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","text":"","code":"l_graph_inspector_analysis(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Graph Analysis Inspector — l_graph_inspector_analysis","text":"","code":"if(interactive()){  i <- l_graph_inspector_analysis() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_navigators.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","title":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_navigators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","text":"","code":"l_graph_inspector_navigators(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_navigators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_navigators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graph_inspector_navigators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Graph Navigator Inspector — l_graph_inspector_navigators","text":"","code":"if(interactive()){  i <- l_graph_inspector_navigators() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graphswitch widget — l_graphswitch","title":"Create a graphswitch widget — l_graphswitch","text":"graphswitch provides graphical user interface changing   graph graph display interactively.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graphswitch widget — l_graphswitch","text":"","code":"l_graphswitch(activewidget = \"\", parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graphswitch widget — l_graphswitch","text":"activewidget widget handle graph display parent parent widget path ... widget states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a graphswitch widget — l_graphswitch","text":"information run: l_help(\"learn_R_display_graph.html#graph-switch-widget\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a graph that is defined by node names and a from-to edges list — l_graphswitch_add.default","title":"Add a graph that is defined by node names and a from-to edges list — l_graphswitch_add.default","text":"default method uses loongraph display states   arguments add graph graphswitch widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a graph that is defined by node names and a from-to edges list — l_graphswitch_add.default","text":"","code":"# Default S3 method l_graphswitch_add(   widget,   graph,   from,   to,   isDirected,   label = \"\",   index = \"end\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a graph that is defined by node names and a from-to edges list — l_graphswitch_add.default","text":"widget graphswitch widget handle (widget path) graph vector node names, .e. argument gets passed nodes argument creat loongraph like object vector node names -pairs edges vector node names -pairs edges isDirected boolean indicate whether --list defines directed undirected edges label string label graph index position graph graph list ... additional arguments used methiod","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a graph that is defined by node names and a from-to edges list — l_graphswitch_add.default","text":"id graph graphswitch widget","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a graph to the graphswitch widget using a graph object — l_graphswitch_add.graph","title":"Add a graph to the graphswitch widget using a graph object — l_graphswitch_add.graph","text":"Graph objects defined graph R package.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a graph to the graphswitch widget using a graph object — l_graphswitch_add.graph","text":"","code":"# S3 method for class 'graph' l_graphswitch_add(widget, graph, label = \"\", index = \"end\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a graph to the graphswitch widget using a graph object — l_graphswitch_add.graph","text":"widget graphswitch widget handle (widget path) graph graph object created functions graph R package. label string label graph index position graph graph list ... additional arguments used methiod","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a graph to the graphswitch widget using a graph object — l_graphswitch_add.graph","text":"id graph graphswitch widget","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a graph to a graphswitch widget — l_graphswitch_add","title":"Add a graph to a graphswitch widget — l_graphswitch_add","text":"generic function add graph graphswitch   widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a graph to a graphswitch widget — l_graphswitch_add","text":"","code":"l_graphswitch_add(widget, graph, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a graph to a graphswitch widget — l_graphswitch_add","text":"widget widget path string object handle graph graph loongraph object ... arguments passed method","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a graph to a graphswitch widget — l_graphswitch_add","text":"id graph graphswitch widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a graph to a graphswitch widget — l_graphswitch_add","text":"information run: l_help(\"learn_R_display_graph.html#graph-switch-widget\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a graph to the graphswitch widget using a loongraph object — l_graphswitch_add.loongraph","title":"Add a graph to the graphswitch widget using a loongraph object — l_graphswitch_add.loongraph","text":"Loongraphs can created loongraph   function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a graph to the graphswitch widget using a loongraph object — l_graphswitch_add.loongraph","text":"","code":"# S3 method for class 'loongraph' l_graphswitch_add(widget, graph, label = \"\", index = \"end\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a graph to the graphswitch widget using a loongraph object — l_graphswitch_add.loongraph","text":"widget graphswitch widget handle (widget path) graph loongraph object label string label graph index position graph graph list ... additional arguments used methiod","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_add.loongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a graph to the graphswitch widget using a loongraph object — l_graphswitch_add.loongraph","text":"id graph graphswitch widget","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a graph from the graphswitch widget — l_graphswitch_delete","title":"Delete a graph from the graphswitch widget — l_graphswitch_delete","text":"Remove graph graphswitch widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a graph from the graphswitch widget — l_graphswitch_delete","text":"","code":"l_graphswitch_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a graph from the graphswitch widget — l_graphswitch_delete","text":"widget graphswitch widget handle (widget path) id graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a Graph as a loongraph Object — l_graphswitch_get","title":"Return a Graph as a loongraph Object — l_graphswitch_get","text":"Graphs can extracted graphswitch widget loongraph   objects.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a Graph as a loongraph Object — l_graphswitch_get","text":"","code":"l_graphswitch_get(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a Graph as a loongraph Object — l_graphswitch_get","text":"widget graphswitch widget handle (widget path) id graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_getLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Label of a Graph in the Graphswitch Widget — l_graphswitch_getLabel","title":"Query Label of a Graph in the Graphswitch Widget — l_graphswitch_getLabel","text":"graphs graphswitch widgets labels. Use   function query label graph.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_getLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Label of a Graph in the Graphswitch Widget — l_graphswitch_getLabel","text":"","code":"l_graphswitch_getLabel(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_getLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Label of a Graph in the Graphswitch Widget — l_graphswitch_getLabel","text":"widget graphswitch widget handle (widget path) id graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List the ids of the graphs in the graphswitch widget — l_graphswitch_ids","title":"List the ids of the graphs in the graphswitch widget — l_graphswitch_ids","text":"Every graph graphswitch widget id. function   returns ids preserving oder graphs listed   graphswitch.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the ids of the graphs in the graphswitch widget — l_graphswitch_ids","text":"","code":"l_graphswitch_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the ids of the graphs in the graphswitch widget — l_graphswitch_ids","text":"widget graphswitch widget handle (widget path)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_move.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a Graph in the Graph List — l_graphswitch_move","title":"Move a Graph in the Graph List — l_graphswitch_move","text":"Change postion graph graphswitch widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a Graph in the Graph List — l_graphswitch_move","text":"","code":"l_graphswitch_move(widget, id, index)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a Graph in the Graph List — l_graphswitch_move","text":"widget graphswitch widget handle (widget path) id graph index position graph positive integer, \"start\" \"end\" also valid keywords.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabel a Graph in the Graphswitch Widget — l_graphswitch_relabel","title":"Relabel a Graph in the Graphswitch Widget — l_graphswitch_relabel","text":"graphs graphswitch widgets labels. Use   function relabel graph.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabel a Graph in the Graphswitch Widget — l_graphswitch_relabel","text":"","code":"l_graphswitch_relabel(widget, id, label)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabel a Graph in the Graphswitch Widget — l_graphswitch_relabel","text":"widget graphswitch widget handle (widget path) id graph label string label graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the Positions of the Graphs in the Graph List — l_graphswitch_reorder","title":"Reorder the Positions of the Graphs in the Graph List — l_graphswitch_reorder","text":"Define new graph order graph list.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the Positions of the Graphs in the Graph List — l_graphswitch_reorder","text":"","code":"l_graphswitch_reorder(widget, ids)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the Positions of the Graphs in the Graph List — l_graphswitch_reorder","text":"widget graphswitch widget handle (widget path) ids vector graph ids graph widget. Use l_graphswitch_ids query ids.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the Graph shown in the Active Graph Widget — l_graphswitch_set","title":"Change the Graph shown in the Active Graph Widget — l_graphswitch_set","text":"activewidget state holds widget handle graph   display. function replaces graph activewidget   one graphs graphswitch widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the Graph shown in the Active Graph Widget — l_graphswitch_set","text":"","code":"l_graphswitch_set(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_graphswitch_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the Graph shown in the Active Graph Widget — l_graphswitch_set","text":"widget graphswitch widget handle (widget path) id graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a browser with loon's combined (TCL and R) documentation website — l_help","title":"Open a browser with loon's combined (TCL and R) documentation website — l_help","text":"l_help opens browser relevant page   official combined loon documentation website   https://great-northern-diver.github.io/loon/l_help/.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a browser with loon's combined (TCL and R) documentation website — l_help","text":"","code":"l_help(page = \"index\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a browser with loon's combined (TCL and R) documentation website — l_help","text":"page relative path page, .html part may omitted ... arguments forwarded browseURL, e.g. specify browser","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a browser with loon's combined (TCL and R) documentation website — l_help","text":"","code":"if (FALSE) { # \\dontrun{ l_help() l_help(\"learn_R_intro\") l_help(\"learn_R_display_hist\") l_help(\"learn_R_bind\") # jump to a section l_help(\"learn_R_bind.html#list-reorder-delete-bindings\") } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hexcolor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","title":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","text":"Color names loon mapped colors according Tk   color specifications normalized 12 digit hexadecimal color   representation.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hexcolor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","text":"","code":"l_hexcolor(color)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hexcolor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","text":"color vector color names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hexcolor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","text":"character vector 12 digit hexadecimal color strings.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_hexcolor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert color names to their 12 digit hexadecimal color representation — l_hexcolor","text":"","code":"if(interactive()){  p <- l_plot(1:2) p['color'] <- 'red' p['color']  l_hexcolor('red') }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive histogram — l_hist","title":"Create an interactive histogram — l_hist","text":"l_hist generic function creating interactive histogram displays can linked loon's displays.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive histogram — l_hist","text":"","code":"l_hist(x, ...)  # Default S3 method l_hist(   x,   yshows = c(\"frequency\", \"density\"),   by = NULL,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   connectedScales = c(\"cross\", \"row\", \"column\", \"both\", \"x\", \"y\", \"none\"),   origin = NULL,   binwidth = NULL,   showStackedColors = TRUE,   showBinHandle = FALSE,   color = l_getOption(\"color\"),   active = TRUE,   selected = FALSE,   xlabel = NULL,   showLabels = TRUE,   showScales = FALSE,   showGuides = TRUE,   parent = NULL,   ... )  # S3 method for class 'factor' l_hist(   x,   showFactors = length(unique(x)) < 25L,   factorLabelAngle,   factorLabelSize = 12,   factorLabelColor = l_getOption(\"foreground\"),   factorLabelY = 0,   ... )  # S3 method for class 'character' l_hist(   x,   showFactors = length(unique(x)) < 25L,   factorLabelAngle,   factorLabelSize = 12,   factorLabelColor = l_getOption(\"foreground\"),   factorLabelY = 0,   ... )  # S3 method for class 'data.frame' l_hist(x, ...)  # S3 method for class 'matrix' l_hist(x, ...)  # S3 method for class 'list' l_hist(x, ...)  # S3 method for class 'table' l_hist(x, ...)  # S3 method for class 'array' l_hist(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive histogram — l_hist","text":"x vector numerical data perform binning x, ... named arguments modify histogram plot states layouts, see details. yshows one \"frequency\" (default)  \"density\" loon plot can separated variables multiple panels. argument can take formula, n dimensional state names (see l_nDimStateNames) n-dimensional vector data.frame list lengths n input. x formula, optional data frame containing variables x . variables found data, taken environment, typically environment function called. layout layout facets 'grid', 'wrap' 'separate' connectedScales Determines scales facets connected depending layout used.  value layout, scales connected follows: layout = \"wrap\":  Across facets, connectedScales \"x\",  \"x\"  scales connected \"y\", \"y\" scales connected \"\",  \"x\" \"y\" scales connected \"none\",  neither \"x\" \"y\" scales connected.    value, \"y\" scale connected. layout = \"grid\":  Across facets, connectedScales \"cross\", scales row column connected \"row\", \"x\" \"y\" scales facets row connected \"column\", \"x\" \"y\" scales facets column connected \"x\", \"x\"  scales connected (regardless column) \"y\", \"y\" scales connected (regardless row) \"\",  \"x\" \"y\" scales connected facets \"none\",  neither \"x\" \"y\" scales connected facets. origin numeric scalar define binning origin binwidth numeric scalar specify binwidth NULL binwidth set using David Scott's rule x numeric (namely 3.49 * sd(x)/(n ^(1/3)) sd(x) > 0 1 sd(x) == 0) using minumum numerical difference factor levels x factor character vector (coerced factor). showStackedColors TRUE (default) bars coloured according colours points; FALSE, bars uniform colour except highlighted points. showBinHandle TRUE, interactive \"bin handle\" appears plot whose movement resets origin binwidth.  Default FALSE color colour fills bins; colours repeated matching number x. Default found using l_getOption(\"color\"). active logical determining whether points appear (default TRUE points). logical vector given length equal number points, identifies points appear (TRUE) (FALSE). selected logical determining whether points appear selected first (default FALSE points). logical vector given length equal number points, identifies points (TRUE) (FALSE). xlabel label used horizontal axis. NULL, attempt meaningful label inferred x made. showLabels logical determine whether axes label (title) presented. showScales logical determine whether numerical scales presented axes. showGuides logical determine whether present background guidelines help determine locations. parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . showFactors whether show factor labels (unique strings x) layer plot. FALSE, factor labels  hidden can turned \"layers\" tab inspector. factorLabelAngle angle rotation (degrees) factor labels. specified, angle 0 chosen fewer 10 labels; labels rotated 90 degrees 10 .  can also numeric vector length equal number factor labels. factorLabelSize font size factor labels (default 12). factorLabelColor colour used factor labels. (default l_getOption(\"foreground\")). Can also vector equal number factor labels. factorLabelY either single number, numeric vector length equal number factor labels, determining y coordinate(s) factor labels.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive histogram — l_hist","text":"argument set, loon widget returned; else l_facet object (list) returned element loon widget displaying subset interest.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an interactive histogram — l_hist","text":"information run: l_help(\"learn_R_display_hist\") Note changing yshows state   'frequency' 'density' might use   l_scaleto_world show complete histogram plotting   region. arguments modify layouts can passed ,   e.g. \"separate\", \"byrow\", etc.   Check l_facet see arguments work.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive histogram — l_hist","text":"","code":"if(interactive()){  h <- l_hist(iris$Sepal.Length)  names(h) h[\"xlabel\"] <- \"Sepal length\" h[\"showOutlines\"] <- FALSE  h[\"yshows\"] h[\"yshows\"] <- \"density\" l_scaleto_plot(h)  h[\"showStackedColors\"] <- TRUE h['color'] <- iris$Species h[\"showStackedColors\"] <- FALSE h[\"showOutlines\"] <- TRUE h[\"showGuides\"] <- FALSE  # link another plot with the previous plot h['linkingGroup'] <- \"iris_data\" h2 <- with(iris, l_hist(Petal.Width,                         linkingGroup=\"iris_data\",                         showStackedColors = TRUE))   # Get an R (grid) graphics plot of the current loon plot plot(h) # or with more control about grid parameters grid.loon(h) # or to save the grid data structure (grob) for later use hg <- loonGrob(h)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Histogram Inspector — l_hist_inspector","title":"Create a Histogram Inspector — l_hist_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Histogram Inspector — l_hist_inspector","text":"","code":"l_hist_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Histogram Inspector — l_hist_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Histogram Inspector — l_hist_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Histogram Inspector — l_hist_inspector","text":"","code":"if(interactive()){  i <- l_hist_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","title":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","text":"","code":"l_hist_inspector_analysis(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_hist_inspector_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Histogram Analysis Inspector — l_hist_inspector_analysis","text":"","code":"if(interactive()){  i <- l_hist_inspector_analysis() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"Import image grayscale data (0-255) image saved   row column array.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"","code":"l_image_import_array(   array,   width,   height,   img_in_row = TRUE,   invert = FALSE,   rotate = 0 )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"array 0-255 grayscale value data. width images pixels. height images pixels. img_in_row logical, TRUE every row array represents image invert logical, 'invert=FALSE' 0=withe, 'invert=TRUE' 0=black rotate image: one 0, 90, 180, 270 degrees.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"vector image object names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"Images tcl managed tcl interpreter made accessible   user via handle, .e. function name form image1, image2,   etc. information run: l_help(\"learn_R_display_plot.html#images\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Greyscale Images as Tcl images from an Array — l_image_import_array","text":"","code":"if (FALSE) { # \\dontrun{ # see demo(\"l_ng_images_frey_LLE\") } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Image Files as Tk Image Objects — l_image_import_files","title":"Import Image Files as Tk Image Objects — l_image_import_files","text":"Note supported image file formats depend whether   Img Tk extension installed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Image Files as Tk Image Objects — l_image_import_files","text":"","code":"l_image_import_files(paths)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Image Files as Tk Image Objects — l_image_import_files","text":"paths vector paths image files supported","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Image Files as Tk Image Objects — l_image_import_files","text":"vector image object names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_image_import_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Image Files as Tk Image Objects — l_image_import_files","text":"information run: l_help(\"learn_R_display_plot.html#load-images\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_imageviewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","title":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","text":"Loon provides simple image viewer browse specified tcl image objects. simple GUI supports either use mouse left right arrow keys switch images previous next image specified image vector. images resized fill viewer window.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_imageviewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","text":"","code":"l_imageviewer(tclimages)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_imageviewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","text":"tclimages Vector tcl image object names.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_imageviewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","text":"tclimages vector returned","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_imageviewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Tcl Images in a Simple Image Viewer — l_imageviewer","text":"","code":"if(interactive()){   img2 <- tkimage.create('photo', width=200, height=150) tcl(img2, 'put', 'yellow', '-to', 0, 0, 199, 149) tcl(img2, 'put', 'green', '-to', 40, 20, 130, 40) img3 <- tkimage.create('photo', width=500, height=100) tcl(img3, 'put', 'orange', '-to', 0, 0, 499, 99) tcl(img3, 'put', 'green', '-to', 40, 80, 350, 95)  l_imageviewer(c(tclvalue(img2), tclvalue(img3)))  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_info_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Information about the States of a Loon Widget — l_info_states","title":"Retrieve Information about the States of a Loon Widget — l_info_states","text":"Loon's built-object documentation. Can used every   loon object plot states including plots, layers, navigators,   contexts.  generic function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_info_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Information about the States of a Loon Widget — l_info_states","text":"","code":"l_info_states(target, states = \"all\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_info_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Information about the States of a Loon Widget — l_info_states","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. states vector names states. '' treated keyword results returning information plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_info_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Information about the States of a Loon Widget — l_info_states","text":"named nested list one element per state. list elements   also named lists type, dimension, defaultvalue,   description elements containing respective information.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_info_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Information about the States of a Loon Widget — l_info_states","text":"","code":"if(interactive()){  p <- l_plot(iris, linkingGroup=\"iris\") i <- l_info_states(p) names(p) names(i) i$selectBy  l <- l_layer_rectangle(p, x=range(iris[,1]), y=range(iris[,2]), color=\"\") l_info_states(l)   h <- l_hist(iris$Sepal.Length, linkingGroup=\"iris\") l_info_states(h)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_isLoonWidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a widget path is a valid loon widget — l_isLoonWidget","title":"Check if a widget path is a valid loon widget — l_isLoonWidget","text":"function can useful check whether loon widget   closed user.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_isLoonWidget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a widget path is a valid loon widget — l_isLoonWidget","text":"","code":"l_isLoonWidget(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_isLoonWidget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a widget path is a valid loon widget — l_isLoonWidget","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_isLoonWidget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a widget path is a valid loon widget — l_isLoonWidget","text":"boolean, TRUE argument valid loon widget path, FALSE   otherwise","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer line in Line object — l_layer.Line","title":"Layer line in Line object — l_layer.Line","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer line in Line object — l_layer.Line","text":"","code":"# S3 method for class 'Line' l_layer(widget, x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer line in Line object — l_layer.Line","text":"widget widget widget path string object handle x object defined sp class ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer line in Line object — l_layer.Line","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer line in Line object — l_layer.Line","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer line in Line object — l_layer.Line","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer line in Line object — l_layer.Line","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer lines in Lines object — l_layer.Lines","title":"Layer lines in Lines object — l_layer.Lines","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer lines in Lines object — l_layer.Lines","text":"","code":"# S3 method for class 'Lines' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer lines in Lines object — l_layer.Lines","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer lines in Lines object — l_layer.Lines","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer lines in Lines object — l_layer.Lines","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer lines in Lines object — l_layer.Lines","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer lines in Lines object — l_layer.Lines","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer polygon in Polygon object — l_layer.Polygon","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"","code":"# S3 method for class 'Polygon' l_layer(widget, x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"widget widget widget path string object handle x object defined sp class ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer polygon in Polygon object — l_layer.Polygon","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer polygons in Polygons object — l_layer.Polygons","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"","code":"# S3 method for class 'Polygons' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.Polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer polygons in Polygons object — l_layer.Polygons","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer lines in SpatialLines object — l_layer.SpatialLines","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"","code":"# S3 method for class 'SpatialLines' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer lines in SpatialLines object — l_layer.SpatialLines","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"","code":"# S3 method for class 'SpatialLinesDataFrame' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialLinesDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer lines in SpatialLinesDataFrame object — l_layer.SpatialLinesDataFrame","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer points in SpatialPoints object — l_layer.SpatialPoints","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"","code":"# S3 method for class 'SpatialPoints' l_layer(widget, x, asMainLayer = FALSE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"widget widget widget path string object handle x object defined sp class asMainLayer TRUE widget scatterplot widget, points can chosen added 'model' layer ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer points in SpatialPoints object — l_layer.SpatialPoints","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"","code":"# S3 method for class 'SpatialPointsDataFrame' l_layer(widget, x, asMainLayer = FALSE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"widget widget widget path string object handle x object defined sp class asMainLayer TRUE widget scatterplot widget, points can chosen added 'model' layer ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPointsDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer points in SpatialPointsDataFrame object — l_layer.SpatialPointsDataFrame","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"","code":"# S3 method for class 'SpatialPolygons' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer polygons in SpatialPolygons object — l_layer.SpatialPolygons","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"Methods plot map data defined sp   package","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"","code":"# S3 method for class 'SpatialPolygonsDataFrame' l_layer(widget, x, asSingleLayer = TRUE, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"widget widget widget path string object handle x object defined sp class asSingleLayer TRUE prefer single layer groups nested 1-dimensinal layers ... arguments forwarded relative l_layer function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"Note currently loon neither support holes ring   directions.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"Applied Spatial Data Analysis R Bivand, Roger S.   Pebesma, Edzer Gomez-Rubio Virgilio","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.SpatialPolygonsDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer polygons in SpatialPolygonDataFrame — l_layer.SpatialPolygonsDataFrame","text":"","code":"if (interactive()) {  if (requireNamespace(\"rworldmap\", quietly = TRUE)) {     world <- rworldmap::getMap(resolution = \"coarse\")     p <- l_plot()     lmap <- l_layer(p, world, asSingleLayer=TRUE)     l_scaleto_world(p)     attr(lmap,'hole')     attr(lmap,'NAME') } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer Method for Kernel Density Estimation — l_layer.density","title":"Layer Method for Kernel Density Estimation — l_layer.density","text":"Layer line represents kernel density estimate.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer Method for Kernel Density Estimation — l_layer.density","text":"","code":"# S3 method for class 'density' l_layer(widget, x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer Method for Kernel Density Estimation — l_layer.density","text":"widget widget path string object handle x object density class \"density\" ... additional arguments, often state definition basic layering function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer Method for Kernel Density Estimation — l_layer.density","text":"layer object handle, layer id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer Method for Kernel Density Estimation — l_layer.density","text":"","code":"if(interactive()){   d <- density(faithful$eruptions, bw = \"sj\")   h <- l_hist(x = faithful$eruptions, yshows=\"density\")   l <- l_layer.density(h, d, color=\"steelblue\", linewidth=3)   # or l <- l_layer(h, d, color=\"steelblue\", linewidth=3) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Loon layers — l_layer","title":"Loon layers — l_layer","text":"Loon supports layering visuals groups visuals.   l_layer function generic method.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loon layers — l_layer","text":"","code":"l_layer(widget, x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loon layers — l_layer","text":"widget widget path string object handle x UseMethod: object whose class determine method dispatched. ... additional arguments, often state definition basic layering function","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loon layers — l_layer","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loon layers — l_layer","text":"loon's displays use main graphics model (.e. histogram,   scatterplot graph displays) support layering visual information.   following table lists layer types functions layering   display.  Every layer within display unique id. visuals data   display present default layer display layer id   'model'. example, 'model' layer scatterplot   display visualizes scatterplot glyphs. Functions useful query layers    Layers arranged tree structure tree root layer   id 'root'. rendering order layers according   depth-first traversal layer tree. tree also maintains label   visibility flag layer. layer tree, layer ids, layer   labels visibility layer visualized layers   inspector. layer set invisible rendered   display. group layer set invisible children   rendered; however, visibility flag children layers remain   unchanged. Relevant functions :  layers states can queried modified using   functions ones used displays (.e. l_cget,   l_configure, `[` `[<-`).   last group layer types table n-dimensional states,   actual value n can different every layer display. difference model layer layers   model layer selected state, responds selection gestures   supports linking. information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loon layers — l_layer","text":"","code":"if(interactive()){  # l_layer is a generic method newFoo <- function(x, y, ...) {   r <- list(x=x, y=y, ...)   class(r) <- 'foo'   return(r) }  l_layer.foo <- function(widget, x) {     x$widget <- widget     id <- do.call('l_layer_polygon', x)     return(id) }  p <- l_plot()  obj <- newFoo(x=c(1:6,6:2), y=c(3,1,0,0,1,3,3,5,6,6,5), color='yellow')  id <- l_layer(p, obj)  l_scaleto_world(p) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.map.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Map of class map as Drawings to Loon plot — l_layer.map","title":"Add a Map of class map as Drawings to Loon plot — l_layer.map","text":"maps library provides map data polygon can   added drawings (currently polygons) Loon plots. function   adds map objects class map maps library background   drawings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Map of class map as Drawings to Loon plot — l_layer.map","text":"","code":"# S3 method for class 'map' l_layer(   widget,   x,   color = \"\",   linecolor = \"black\",   linewidth = 1,   label,   parent = \"root\",   index = 0,   asSingleLayer = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Map of class map as Drawings to Loon plot — l_layer.map","text":"widget widget path string object handle x map object class map defined maps R package color fill color, empty string \"\", fill transparant linecolor outline color linewidth linewidth outline label label used layers inspector parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . index position among siblings. valid values 0, 1, 2, ..., 'end' asSingleLayer TRUE polygons get placed n-dimension layer type polygons. Otherwise, FALSE, polygon gets layer. ... additional arguments used methiod","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Map of class map as Drawings to Loon plot — l_layer.map","text":"asSingleLayer=TRUE returns layer id polygons layer,   otherwise group layer contains polygon children layers.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer.map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Map of class map as Drawings to Loon plot — l_layer.map","text":"","code":"if(interactive()){  if (requireNamespace(\"maps\", quietly = TRUE)) {   canada <- maps::map(\"world\",  \"Canada\",                       fill=TRUE, plot=FALSE)   p <- l_plot()   l_map <- l_layer(p, canada,                    asSingleLayer=TRUE, color = \"cornsilk\")   l_map['color'] <- ifelse(grepl(\"lake\", canada$names, TRUE),                            \"lightblue\", \"cornsilk\")   l_scaleto_layer(p, l_map)   l_map['active'] <- FALSE   l_map['active'] <- TRUE   l_map['tag'] }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box of a layer. — l_layer_bbox","title":"Get the bounding box of a layer. — l_layer_bbox","text":"bounding box layer returns coordinates   smallest rectangle encloses elements layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box of a layer. — l_layer_bbox","text":"","code":"l_layer_bbox(widget, layer = \"root\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the bounding box of a layer. — l_layer_bbox","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box of a layer. — l_layer_bbox","text":"Numeric vector length 4 (xmin, ymin, xmax, ymax)   bounding box","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the bounding box of a layer. — l_layer_bbox","text":"","code":"if(interactive()){  p <- with(iris, l_plot(Sepal.Length ~ Sepal.Width, color=Species)) l_layer_bbox(p, layer='model')  l <- l_layer_rectangle(p, x=0:1, y=30:31) l_layer_bbox(p, l)  l_layer_bbox(p, 'root')  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer Contour Lines — l_layer_contourLines","title":"Layer Contour Lines — l_layer_contourLines","text":"function wrapper around   contourLines adds countourlines loon   plot based cartesian coordinate system.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer Contour Lines — l_layer_contourLines","text":"","code":"l_layer_contourLines(   widget,   x = seq(0, 1, length.out = nrow(z)),   y = seq(0, 1, length.out = ncol(z)),   z,   nlevels = 10,   levels = pretty(range(z, na.rm = TRUE), nlevels),   asSingleLayer = TRUE,   parent = \"root\",   index = \"end\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer Contour Lines — l_layer_contourLines","text":"widget widget path string object handle x, y described grDevices::contourLines: locations grid lines values z measured. must ascending order. default, equally spaced values 0 1 used. x list, components x$x x$y used x y, respectively. list component z used z. z described grDevices::contourLines: matrix containing values plotted (NAs allowed). Note x can used instead z convenience. nlevels described grDevices::contourLines: number contour levels desired iff levels supplied. levels described grDevices::contourLines: numeric vector levels draw contour lines. asSingleLayer TRUE lines layer used line, otherwise FALSE group nested line layers line created parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . index position among siblings. valid values 0, 1, 2, ..., 'end' ... arguments forwarded l_layer_line","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer Contour Lines — l_layer_contourLines","text":"layer id group lines layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer Contour Lines — l_layer_contourLines","text":"information run: l_help(\"learn_R_layer.html#countourlines-heatimage-rasterimage\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_contourLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer Contour Lines — l_layer_contourLines","text":"","code":"if(interactive()){  p <- l_plot() x <- 10*1:nrow(volcano) y <- 10*1:ncol(volcano) lcl <- l_layer_contourLines(p, x, y, volcano) l_scaleto_world(p)  if (requireNamespace(\"MASS\", quietly = TRUE)) {    p1 <- with(iris, l_plot(Sepal.Length~Sepal.Width, color=Species))   lcl <- with(iris, l_layer_contourLines(p1, MASS::kde2d(Sepal.Width,Sepal.Length)))    p2 <- with(iris, l_plot(Sepal.Length~Sepal.Width, color=Species))   layers <- sapply(split(cbind(iris, color=p2['color']), iris$Species), function(dat) {        kest <- with(dat, MASS::kde2d(Sepal.Width,Sepal.Length))        l_layer_contourLines(p2, kest, color=as.character(dat$color[1]), linewidth=2,             label=paste0(as.character(dat$Species[1]), \" contours\"))   }) }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a layer — l_layer_delete","title":"Delete a layer — l_layer_delete","text":"'model' 'root' layer can   dynamically deleted. group layer gets deleted   l_layer_delete children layers get moved   grandparent group layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a layer — l_layer_delete","text":"","code":"l_layer_delete(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a layer — l_layer_delete","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a layer — l_layer_delete","text":"0 success otherwise function throws error","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a layer — l_layer_delete","text":"","code":"if(interactive()){  p <- l_plot() l1 <- l_layer_rectangle(p, x = 0:1, y = 0:1, color='red') l_layer_delete(l1)  l2 <- l_layer_rectangle(p, x = 0:1, y = 0:1, color='yellow') l_layer_delete(p,l2)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_demote.html","id":null,"dir":"Reference","previous_headings":"","what":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","title":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","text":"Moves layer layer tree (away root layer)   sibling group layer right layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_demote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","text":"","code":"l_layer_demote(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_demote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_demote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","text":"0 success otherwise function throws error","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_demote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moves the layer to be a child of its right group layer sibling — l_layer_demote","text":"","code":"if(interactive()){  p <- l_plot()  g1 <- l_layer_group(p) g2 <- l_layer_group(p, parent=g1) l1 <- l_layer_oval(p, x=0:1, y=0:1)  l_layer_printTree(p) l_layer_demote(p, l1) l_layer_printTree(p) l_layer_demote(p, l1) l_layer_printTree(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_expunge.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a layer and all its descendants — l_layer_expunge","title":"Delete a layer and all its descendants — l_layer_expunge","text":"Delete group layer descendants. Note   'model' layer deleted.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_expunge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a layer and all its descendants — l_layer_expunge","text":"","code":"l_layer_expunge(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_expunge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a layer and all its descendants — l_layer_expunge","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_expunge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a layer and all its descendants — l_layer_expunge","text":"0 success otherwise function throws error","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_expunge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a layer and all its descendants — l_layer_expunge","text":"","code":"if(interactive()){  p <- l_plot() g <- l_layer_group(p) l1 <- l_layer_rectangle(p, x=0:1, y=0:1, parent=g, color=\"\", linecolor=\"orange\", linewidth=2) l2 <- l_layer_line(p, x=c(0,.5,1), y=c(0,1,0), parent=g, color=\"blue\")  l_layer_expunge(p, g)  # or l_layer_expunge(g)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getChildren.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children of a group layer — l_layer_getChildren","title":"Get children of a group layer — l_layer_getChildren","text":"Returns ids group layer's children.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getChildren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children of a group layer — l_layer_getChildren","text":"","code":"l_layer_getChildren(widget, layer = \"root\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getChildren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children of a group layer — l_layer_getChildren","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getChildren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children of a group layer — l_layer_getChildren","text":"Character vector ids childrens. create layer handles   (.e. objects class 'l_layer') use   l_create_handle function.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getChildren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children of a group layer — l_layer_getChildren","text":"","code":"if(interactive()){  p <- l_plot()  g <- l_layer_group(p) l1 <- l_layer_rectangle(p, x=0:1, y=0:1, parent=g) l2 <- l_layer_oval(p, x=0:1, y=0:1, color='thistle', parent=g)  l_layer_getChildren(p, g)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer label. — l_layer_getLabel","title":"Get layer label. — l_layer_getLabel","text":"Layer labels useful identify layer layer   inspector. layer label can initially set layer creation   label argument.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer label. — l_layer_getLabel","text":"","code":"l_layer_getLabel(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer label. — l_layer_getLabel","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer label. — l_layer_getLabel","text":"Named vector length 1 layer label value layer id   name.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get layer label. — l_layer_getLabel","text":"Note layer label state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer label. — l_layer_getLabel","text":"","code":"if(interactive()){  p <- l_plot() l1 <- l_layer_rectangle(p, x=0:1, y=0:1, label=\"a rectangle\") l_layer_getLabel(p, 'model') l_layer_getLabel(p, l1)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getParent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parent layer id of a layer — l_layer_getParent","title":"Get parent layer id of a layer — l_layer_getParent","text":"toplevel parent 'root' layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getParent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parent layer id of a layer — l_layer_getParent","text":"","code":"l_layer_getParent(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getParent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parent layer id of a layer — l_layer_getParent","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getParent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parent layer id of a layer — l_layer_getParent","text":"","code":"if(interactive()){  p <- with(iris, l_plot(Sepal.Length ~ Sepal.Width, color=Species))  l_layer_getParent(p, 'model')  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer type — l_layer_getType","title":"Get layer type — l_layer_getType","text":"see manual page l_layer   primitive layer types.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer type — l_layer_getType","text":"","code":"l_layer_getType(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer type — l_layer_getType","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer type — l_layer_getType","text":"One : 'group', 'polygon', 'text',   'line', 'rectangle', 'oval', 'points',   'texts', 'polygons', 'rectangles', 'lines'   'scatterplot', 'histogram', 'serialaxes'   'graph'.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get layer type — l_layer_getType","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_getType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer type — l_layer_getType","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_rectangle(p, x=0:1, y=0:1) l_layer_getType(p, l) l_layer_getType(p, 'model')  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":null,"dir":"Reference","previous_headings":"","what":"layer a group node — l_layer_group","title":"layer a group node — l_layer_group","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles. group layer can contain layers. group layer   invisible, children.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"layer a group node — l_layer_group","text":"","code":"l_layer_group(widget, label = \"group\", parent = \"root\", index = 0)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"layer a group node — l_layer_group","text":"widget widget path name string label label used layers inspector parent group layer index newly added layer parent group","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"layer a group node — l_layer_group","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"layer a group node — l_layer_group","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"layer a group node — l_layer_group","text":"","code":"if (interactive()){ p <- l_plot(x=c(1,10,1.5,7,4.3,9,5,2,8),              y=c(1,10,7,3,4,3.3,8,3,4),              title=\"Demo Layers\")  id.g <- l_layer_group(p, \"A Layer Group\") id.pts <- l_layer_points(p, x=c(3,6), y=c(4,7), color=\"red\", parent=id.g) l_scaleto_layer(p, id.pts) l_configure(id.pts, x=c(-5,5,12), y=c(-2,-5,18), color=\"lightgray\")  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Queries visibility status of decendants — l_layer_groupVisibility","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"Query whether , part none group layers descendants   visible.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"","code":"l_layer_groupVisibility(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"'', 'part' 'none' depending   visibility status descendants.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"Visibile layers rendered, invisible ones .   ancestor layer set invisible layer rendered   either. layer visibility flag can checked   l_layer_isVisible actual visibility (.e.   ancesters visibile ) can checked   l_layer_layerVisibility. Note layer visibility state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_groupVisibility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Queries visibility status of decendants — l_layer_groupVisibility","text":"","code":"if(interactive()){  p <- l_plot()  g <- l_layer_group(p) l1 <- l_layer_rectangle(p, x=0:1, y=0:1, parent=g) l2 <- l_layer_oval(p, x=0:1, y=0:1, parent=g)  l_layer_groupVisibility(p, g) l_layer_hide(p, l2) l_layer_groupVisibility(p, g) l_layer_hide(p, l1) l_layer_groupVisibility(p, g) l_layer_hide(p, g) l_layer_groupVisibility(p, g)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Heat Image — l_layer_heatImage","title":"Display a Heat Image — l_layer_heatImage","text":"function similar   image function. works every loon plot   based cartesian coordinate system.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Heat Image — l_layer_heatImage","text":"","code":"l_layer_heatImage(   widget,   x = seq(0, 1, length.out = nrow(z)),   y = seq(0, 1, length.out = ncol(z)),   z,   zlim = range(z[is.finite(z)]),   xlim = range(x),   ylim = range(y),   col = grDevices::heat.colors(12),   breaks,   oldstyle = FALSE,   useRaster,   index = \"end\",   parent = \"root\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Heat Image — l_layer_heatImage","text":"widget widget path string object handle x locations grid lines values z measured. must finite, non-missing (strictly) ascending order. default, equally spaced values 0 1 used. x list, components x$x x$y used x y, respectively. list component z used z. y see description x argument z numeric logical matrix containing values plotted     (NAs allowed).  Note x can used instead     z convenience. zlim minimum maximum z values colors     plotted, defaulting range finite values     z. given colors used color     equispaced interval range. midpoints     intervals cover range, values just outside range     plotted. xlim range plotted x values, defaulting range x ylim range plotted y values, defaulting range y col list colors generated     hcl.colors, gray.colors similar     functions. breaks set finite numeric breakpoints colours:     must one breakpoint colour increasing     order.  Unsorted vectors sorted, warning. oldstyle logical. true midpoints colour intervals     equally spaced, zlim[1] zlim[2] taken     midpoints.  default colour intervals equal     lengths limits. useRaster logical; TRUE bitmap raster used     plot image instead polygons. grid must regular     case, otherwise error raised.   behaviour     specified, see ‘Details’. index position among siblings. valid values 0, 1, 2, ..., 'end' parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . ... argumnets forwarded l_layer_line","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a Heat Image — l_layer_heatImage","text":"layer id group rectangles layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display a Heat Image — l_layer_heatImage","text":"information run: l_help(\"learn_R_layer.html#countourlines-heatimage-rasterimage\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_heatImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a Heat Image — l_layer_heatImage","text":"","code":"if(interactive()){  if (requireNamespace(\"MASS\", quietly = TRUE)) {   kest <- with(iris, MASS::kde2d(Sepal.Width,Sepal.Length))   image(kest)   contour(kest, add=TRUE)    p <- l_plot()   lcl <- l_layer_contourLines(p, kest, label='contour lines')   limg <- l_layer_heatImage(p, kest, label='heatmap')   l_scaleto_world(p) }  # from examples(image) x <- y <- seq(-4*pi, 4*pi, len = 27) r <- sqrt(outer(x^2, y^2, \"+\")) p1 <- l_plot() l_layer_heatImage(p1, z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32)) l_scaleto_world(p1)  image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide a Layer — l_layer_hide","title":"Hide a Layer — l_layer_hide","text":"hidden layer rendered. group layer set   hidden descendants rendered either.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide a Layer — l_layer_hide","text":"","code":"l_layer_hide(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hide a Layer — l_layer_hide","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide a Layer — l_layer_hide","text":"0 success otherwise function throws error","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hide a Layer — l_layer_hide","text":"Visibile layers rendered, invisible ones .   ancestor layer set invisible layer rendered   either. layer visibility flag can checked   l_layer_isVisible actual visibility (.e.   ancesters visibile ) can checked   l_layer_layerVisibility. Note layer visibility state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_hide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hide a Layer — l_layer_hide","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_rectangle(p, x=0:1, y=0:1, color=\"steelblue\") l_layer_hide(p, l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List ids of layers in Plot — l_layer_ids","title":"List ids of layers in Plot — l_layer_ids","text":"Every layer within display unique id. function   returns list layer ids widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List ids of layers in Plot — l_layer_ids","text":"","code":"l_layer_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List ids of layers in Plot — l_layer_ids","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List ids of layers in Plot — l_layer_ids","text":"vector layer ids rendering order. create layer handle   object use l_create_handle.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List ids of layers in Plot — l_layer_ids","text":"information run: l_help(\"learn_R_layer.html#add-move-delete-layers\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List ids of layers in Plot — l_layer_ids","text":"","code":"if (interactive()){ set.seed(500) x <- rnorm(30) y <- 4 + 3*x + rnorm(30) fit <- lm(y~x) xseq <- seq(min(x)-1, max(x)+1, length.out = 50) fit_line <- predict(fit, data.frame(x=range(xseq))) ci <- predict(fit, data.frame(x=xseq),               interval=\"confidence\", level=0.95) pi <- predict(fit, data.frame(x=xseq),               interval=\"prediction\", level=0.95)   p <- l_plot(y~x, color='black', showScales=TRUE, showGuides=TRUE) gLayer <- l_layer_group(     p, label=\"simple linear regression\",     parent=\"root\", index=\"end\" ) fitLayer <- l_layer_line(     p, x=range(xseq), y=fit_line, color=\"#04327F\",     linewidth=4, label=\"fit\", parent=gLayer ) ciLayer <- l_layer_polygon(     p,     x = c(xseq, rev(xseq)),     y = c(ci[,'lwr'], rev(ci[,'upr'])),     color = \"#96BDFF\", linecolor=\"\",     label = \"95 % confidence interval\",     parent = gLayer, index='end' ) piLayer <- l_layer_polygon(     p,     x = c(xseq, rev(xseq)),     y = c(pi[,'lwr'], rev(pi[,'upr'])),     color = \"#E2EDFF\", linecolor=\"\",     label = \"95 % prediction interval\",     parent = gLayer, index='end' )  l_info_states(piLayer)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the order index of a layer among its siblings — l_layer_index","title":"Get the order index of a layer among its siblings — l_layer_index","text":"index determines rendering order children layers   parent. layer index=0 rendered first.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the order index of a layer among its siblings — l_layer_index","text":"","code":"l_layer_index(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the order index of a layer among its siblings — l_layer_index","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the order index of a layer among its siblings — l_layer_index","text":"numeric value","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the order index of a layer among its siblings — l_layer_index","text":"Note index layers 0 based.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":null,"dir":"Reference","previous_headings":"","what":"Return visibility flag of layer — l_layer_isVisible","title":"Return visibility flag of layer — l_layer_isVisible","text":"Hidden invisible layers rendered. function   queries whether layer visible/rendered .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return visibility flag of layer — l_layer_isVisible","text":"","code":"l_layer_isVisible(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return visibility flag of layer — l_layer_isVisible","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return visibility flag of layer — l_layer_isVisible","text":"TRUE FALSE depending whether layer visible   .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return visibility flag of layer — l_layer_isVisible","text":"Visibile layers rendered, invisible ones .   ancestor layer set invisible layer rendered   either. layer visibility flag can checked   l_layer_isVisible actual visibility (.e.   ancesters visibile ) can checked   l_layer_layerVisibility. Note layer visibility state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_isVisible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return visibility flag of layer — l_layer_isVisible","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_rectangle(p, x=0:1, y=0:1) l_layer_isVisible(p, l) l_layer_hide(p, l) l_layer_isVisible(p, l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_layerVisibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","title":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","text":"Although visibility flag layer might set   TRUE rendered ancestor group layer set   invisible. l_layer_visibility returns TRUE   layer ancestor layers visibility flag set true   layer actually rendered.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_layerVisibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","text":"","code":"l_layer_layerVisibility(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_layerVisibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_layerVisibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","text":"TRUE layer ancestor layers   visibility flag set true layer actually rendered, otherwise   FALSE.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_layerVisibility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns logical value for whether layer is actually seen — l_layer_layerVisibility","text":"Visibile layers rendered, invisible ones .   ancestor layer set invisible layer rendered   either. layer visibility flag can checked   l_layer_isVisible actual visibility (.e.   ancesters visibile ) can checked   l_layer_layerVisibility. Note layer visibility state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a line — l_layer_line","title":"Layer a line — l_layer_line","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a line — l_layer_line","text":"","code":"l_layer_line(   widget,   x,   y = NULL,   color = \"black\",   linewidth = 1,   dash = \"\",   label = \"line\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a line — l_layer_line","text":"widget widget path name string x coordinates line. Alternatively, single plotting structure, function R object plot method can provided x y passed xy.coords y y coordinates line, optional x appropriate structure. color color line linewidth linewidth outline dash dash pattern line, see https://www.tcl-lang.org/man/tcl8.6/TkCmd/canvas.htm#M26 label label used layers inspector parent group layer index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a line — l_layer_line","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a line — l_layer_line","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a line — l_layer_line","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_line(p, x=c(1,2,3,4), y=c(1,3,2,4), color='red', linewidth=2) l_scaleto_world(p)  # object p <- l_plot() l <- l_layer_line(p, x=nhtemp) l_scaleto_layer(l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer lines — l_layer_lines","title":"Layer lines — l_layer_lines","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer lines — l_layer_lines","text":"","code":"l_layer_lines(   widget,   x,   y,   color = \"black\",   linewidth = 1,   label = \"lines\",   parent = \"root\",   index = 0,   group = NULL,   active = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer lines — l_layer_lines","text":"widget widget path name string x list vectors x coordinates y list vectors y coordinates color color lines linewidth vector line widths label label used layers inspector parent group layer index newly added layer parent group group separate x vector y vector list group. active logical determining whether objects appear (default TRUE ). ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer lines — l_layer_lines","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer lines — l_layer_lines","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer lines — l_layer_lines","text":"","code":"if(interactive()){  s <- Filter(function(df)nrow(df) > 1, split(UsAndThem, UsAndThem$Country)) sUaT <- Map(function(country){country[order(country$Year),]} , s) xcoords <- Map(function(x)x$Year, sUaT) ycoords <- Map(function(x)x$LifeExpectancy, sUaT) region <- sapply(sUaT, function(x)as.character(x$Geographic.Region[1]))  p <- l_plot(showItemLabels=TRUE) l <- l_layer_lines(p, xcoords, ycoords, itemLabel=names(sUaT), color=region) l_scaleto_layer(l)  # Set groups p <- l_plot(showItemLabels=TRUE) l <- l_layer_lines(p,                    x = c((0:4)/10, rep(.5, 5), (10:6)/10, rep(.5, 5)),                    y = c(rep(.5, 5), (10:6/10), rep(.5, 5), (0:4)/10),                    group = rep(1:5, 4),                    linewidth = 4,                    col = l_getColorList()[1:5]) l_scaleto_layer(l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch the layer place with its sibling to the right — l_layer_lower","title":"Switch the layer place with its sibling to the right — l_layer_lower","text":"Change layers position within parent layer group   increasing index layer one possible. means   raised layer rendered () sibling   layer right.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch the layer place with its sibling to the right — l_layer_lower","text":"","code":"l_layer_lower(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch the layer place with its sibling to the right — l_layer_lower","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch the layer place with its sibling to the right — l_layer_lower","text":"0 success otherwise function throws error","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_lower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch the layer place with its sibling to the right — l_layer_lower","text":"","code":"if(interactive()){  p <- l_plot()  l1 <- l_layer_rectangle(p, x=0:1, y=0:1) l2 <- l_layer_oval(p, x=0:1, y=0:1, color='thistle')  l_aspect(p) <- 1  l_layer_lower(p, l2)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_move.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a layer — l_layer_move","title":"Move a layer — l_layer_move","text":"postition layer layer tree determines   rendering order. , non-group layers rendered order   Depth-first traversal layer tree. toplevel group layer called   'root'.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a layer — l_layer_move","text":"","code":"l_layer_move(widget, layer, parent, index = \"0\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a layer — l_layer_move","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used parent parent layer specified set current parent layer layer index position among siblings. valid values 0, 1, 2, ..., 'end'","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_move.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a layer — l_layer_move","text":"0 success otherwise function throws error","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_move.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move a layer — l_layer_move","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_rectangle(p, x=0:1, y=0:1, color=\"steelblue\") g <- l_layer_group(p) l_layer_printTree(p)  l_layer_move(l, parent=g) l_layer_printTree(p)  l_layer_move(p, 'model', parent=g) l_layer_printTree(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a oval — l_layer_oval","title":"Layer a oval — l_layer_oval","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a oval — l_layer_oval","text":"","code":"l_layer_oval(   widget,   x,   y,   color = \"gray80\",   linecolor = \"black\",   linewidth = 1,   label = \"oval\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a oval — l_layer_oval","text":"widget widget path name string x x coordinates y y coordinates color fill color, empty string \"\", fill transparant linecolor outline color linewidth linewidth outline label label used layers inspector parent group layer index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a oval — l_layer_oval","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a oval — l_layer_oval","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_oval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a oval — l_layer_oval","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_oval(p, c(1,5), c(2,12), color='steelblue') l_configure(p, panX=0, panY=0, deltaX=20, deltaY=20)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer points — l_layer_points","title":"Layer points — l_layer_points","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles. Scatter points layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer points — l_layer_points","text":"","code":"l_layer_points(   widget,   x,   y = NULL,   color = \"gray60\",   size = 6,   label = \"points\",   parent = \"root\",   index = 0,   active = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer points — l_layer_points","text":"widget widget path name string x coordinates line. Alternatively, single plotting structure, function R object plot method can provided x y passed xy.coords y y coordinates line, optional x appropriate structure. color color points size size point, scatterplot model layer label label used layers inspector parent group layer index newly added layer parent group active logical determining whether objects appear (default TRUE ). ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer points — l_layer_points","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer points — l_layer_points","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a polygon — l_layer_polygon","title":"Layer a polygon — l_layer_polygon","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a polygon — l_layer_polygon","text":"","code":"l_layer_polygon(   widget,   x,   y,   color = \"gray80\",   linecolor = \"black\",   linewidth = 1,   label = \"polygon\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a polygon — l_layer_polygon","text":"widget widget path name string x x coordinates y y coordinates color fill color, empty string \"\", fill transparant linecolor outline color linewidth linewidth outline label label used layers inspector parent group layer index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a polygon — l_layer_polygon","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a polygon — l_layer_polygon","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a polygon — l_layer_polygon","text":"","code":"if (interactive()){ set.seed(500) x <- rnorm(30) y <- 4 + 3*x + rnorm(30) fit <- lm(y~x) xseq <- seq(min(x)-1, max(x)+1, length.out = 50) fit_line <- predict(fit, data.frame(x=range(xseq))) ci <- predict(fit, data.frame(x=xseq),               interval=\"confidence\", level=0.95) pi <- predict(fit, data.frame(x=xseq),               interval=\"prediction\", level=0.95)   p <- l_plot(y~x, color='black', showScales=TRUE, showGuides=TRUE) gLayer <- l_layer_group(     p, label=\"simple linear regression\",     parent=\"root\", index=\"end\" ) fitLayer <- l_layer_line(     p, x=range(xseq), y=fit_line, color=\"#04327F\",     linewidth=4, label=\"fit\", parent=gLayer ) ciLayer <- l_layer_polygon(     p,     x = c(xseq, rev(xseq)),     y = c(ci[,'lwr'], rev(ci[,'upr'])),     color = \"#96BDFF\", linecolor=\"\",     label = \"95 % confidence interval\",     parent = gLayer, index='end' ) piLayer <- l_layer_polygon(     p,     x = c(xseq, rev(xseq)),     y = c(pi[,'lwr'], rev(pi[,'upr'])),     color = \"#E2EDFF\", linecolor=\"\",     label = \"95 % prediction interval\",     parent = gLayer, index='end' )  l_info_states(piLayer)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer polygons — l_layer_polygons","title":"Layer polygons — l_layer_polygons","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer polygons — l_layer_polygons","text":"","code":"l_layer_polygons(   widget,   x,   y,   color = \"gray80\",   linecolor = \"black\",   linewidth = 1,   label = \"polygons\",   parent = \"root\",   index = 0,   group = NULL,   active = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer polygons — l_layer_polygons","text":"widget widget path name string x list vectors x coordinates y list vectors y coordinates color vector fill colors, empty string \"\", fill transparant linecolor vector outline colors linewidth vector line widths label label used layers inspector parent group layer index newly added layer parent group group separate x vector y vector list group. active logical determining whether objects appear (default TRUE ). ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer polygons — l_layer_polygons","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer polygons — l_layer_polygons","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer polygons — l_layer_polygons","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_polygons(      p,      x = list(c(1,2,1.5), c(3,4,6,5,2), c(1,3,5,3)),      y = list(c(1,1,2), c(1,1.5,1,4,2), c(3,5,6,4)),      color = c('red', 'green', 'blue'),      linecolor = \"\" ) l_scaleto_world(p)  l_info_states(l, \"color\")   # Set groups p <- l_plot() l_layer_polygons(p,                  x = c(1, 2, 1.5, 3, 4, 6, 5, 2, 1, 3, 5, 3),                  y = c(1, 1, 2, 1, 1.5, 1, 4, 2, 3, 5, 6, 4),                  group = c(rep(1,3), rep(2,5), rep(3, 4))) l_scaleto_world(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_printTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the layer tree — l_layer_printTree","title":"Print the layer tree — l_layer_printTree","text":"Prints layer tree (.e. layer ids) prompt. Group   layers prefixed '+'. 'root' layer   listed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_printTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the layer tree — l_layer_printTree","text":"","code":"l_layer_printTree(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_printTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the layer tree — l_layer_printTree","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_printTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the layer tree — l_layer_printTree","text":"empty string","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_printTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the layer tree — l_layer_printTree","text":"","code":"if(interactive()){  p <- l_plot() l_layer_rectangle(p, x=0:1, y=0:1) g <- l_layer_group(p) l_layer_oval(p, x=0:1, y=0:1, parent=g) l_layer_line(p, x=0:1, y=0:1, parent=g) l_layer_printTree(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_promote.html","id":null,"dir":"Reference","previous_headings":"","what":"Moves the layer up to be a left sibling of its parent — l_layer_promote","title":"Moves the layer up to be a left sibling of its parent — l_layer_promote","text":"Moves layer layer tree (towards root layer)   parent layer root layer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_promote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moves the layer up to be a left sibling of its parent — l_layer_promote","text":"","code":"l_layer_promote(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_promote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moves the layer up to be a left sibling of its parent — l_layer_promote","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_promote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moves the layer up to be a left sibling of its parent — l_layer_promote","text":"0 success otherwise function throws error","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_promote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moves the layer up to be a left sibling of its parent — l_layer_promote","text":"","code":"if(interactive()){  p <- l_plot()  g1 <- l_layer_group(p) g2 <- l_layer_group(p, parent=g1) l1 <- l_layer_oval(p, x=0:1, y=0:1, parent=g2)  l_layer_printTree(p) l_layer_promote(p, l1) l_layer_printTree(p) l_layer_promote(p, l1) l_layer_printTree(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_raise.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch the layer place with its sibling to the left — l_layer_raise","title":"Switch the layer place with its sibling to the left — l_layer_raise","text":"Change layers position within parent layer group   decreasing index layer one possible. means   raised layer rendered (top) sibling   layer left.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_raise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch the layer place with its sibling to the left — l_layer_raise","text":"","code":"l_layer_raise(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_raise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch the layer place with its sibling to the left — l_layer_raise","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_raise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch the layer place with its sibling to the left — l_layer_raise","text":"0 success otherwise function throws error","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_raise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch the layer place with its sibling to the left — l_layer_raise","text":"","code":"if(interactive()){  p <- l_plot()  l1 <- l_layer_rectangle(p, x=0:1, y=0:1) l2 <- l_layer_oval(p, x=0:1, y=0:1, color='thistle')  l_aspect(p) <- 1  l_layer_raise(p, l1)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a Raster Image — l_layer_rasterImage","title":"Layer a Raster Image — l_layer_rasterImage","text":"function similar   rasterImage function. works every loon plot   based cartesian coordinate system.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a Raster Image — l_layer_rasterImage","text":"","code":"l_layer_rasterImage(   widget,   image,   xleft,   ybottom,   xright,   ytop,   angle = 0,   interpolate = FALSE,   parent = \"root\",   index = \"end\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a Raster Image — l_layer_rasterImage","text":"widget widget path string object handle image raster object, object can     coerced one .raster. xleft vector (scalar) left x positions. ybottom vector (scalar) bottom y positions. xright vector (scalar) right x positions. ytop vector (scalar) top y positions. angle angle rotation (degrees, anti-clockwise     positive x-axis, bottom-left corner). interpolate logical vector (scalar) indicating     whether apply linear interpolation image drawing. parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . index position among siblings. valid values 0, 1, 2, ..., 'end' ... argumnets forwarded l_layer_line","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a Raster Image — l_layer_rasterImage","text":"layer id group rectangles layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a Raster Image — l_layer_rasterImage","text":"information run: l_help(\"learn_R_layer.html#countourlines-heatimage-rasterimage\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rasterImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a Raster Image — l_layer_rasterImage","text":"","code":"if(interactive()){  plot(1,1, xlim = c(0,1), ylim=c(0,1)) mat <- matrix(c(0,0,0,0, 1,1), ncol=2) rasterImage(mat, 0,0,1,1, interpolate = FALSE)  p <- l_plot() l_layer_rasterImage(p, mat, 0,0,1,1) l_scaleto_world(p)  image <- as.raster(matrix(0:1, ncol = 5, nrow = 3)) p <- l_plot(showScales=TRUE, background=\"thistle\", useLoonInspector=FALSE) l_layer_rasterImage(p, image, 100, 300, 150, 350, interpolate = FALSE) l_layer_rasterImage(p, image, 100, 400, 150, 450) l_layer_rasterImage(p, image, 200, 300, 200 + 10, 300 + 10,    interpolate = FALSE) l_scaleto_world(p)  # from examples(rasterImage)  # set up the plot region: op <- par(bg = \"thistle\") plot(c(100, 250), c(300, 450), type = \"n\", xlab = \"\", ylab = \"\") rasterImage(image, 100, 300, 150, 350, interpolate = FALSE) rasterImage(image, 100, 400, 150, 450) rasterImage(image, 200, 300, 200 + 10, 300 + 10,            interpolate = FALSE)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a rectangle — l_layer_rectangle","title":"Layer a rectangle — l_layer_rectangle","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a rectangle — l_layer_rectangle","text":"","code":"l_layer_rectangle(   widget,   x,   y,   color = \"gray80\",   linecolor = \"black\",   linewidth = 1,   label = \"rectangle\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a rectangle — l_layer_rectangle","text":"widget widget path name string x x coordinates y y coordinates color fill color, empty string \"\", fill transparant linecolor outline color linewidth linewidth outline label label used layers inspector parent group layer index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a rectangle — l_layer_rectangle","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a rectangle — l_layer_rectangle","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a rectangle — l_layer_rectangle","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_rectangle(p, x=c(2,3), y=c(1,10), color='steelblue') l_scaleto_layer(l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer rectangles — l_layer_rectangles","title":"Layer rectangles — l_layer_rectangles","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer rectangles — l_layer_rectangles","text":"","code":"l_layer_rectangles(   widget,   x,   y,   color = \"gray80\",   linecolor = \"black\",   linewidth = 1,   label = \"rectangles\",   parent = \"root\",   index = 0,   group = NULL,   active = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer rectangles — l_layer_rectangles","text":"widget widget path name string x list vectors x coordinates y list vectors y coordinates color vector fill colors, empty string \"\", fill transparant linecolor vector outline colors linewidth vector line widths label label used layers inspector parent group layer index newly added layer parent group group separate x vector y vector list group. active logical determining whether objects appear (default TRUE ). ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer rectangles — l_layer_rectangles","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer rectangles — l_layer_rectangles","text":"information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_rectangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer rectangles — l_layer_rectangles","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_rectangles(      p,      x = list(c(0,1), c(1,2), c(2,3), c(5,6)),      y = list(c(0,1), c(1,2), c(0,1), c(3,4)),      color = c('red', 'blue', 'green', 'orange'),      linecolor = \"black\" ) l_scaleto_world(p)  l_info_states(l)  # Set groups pp <- l_plot(x = c(0,1,1,2,2,3,5,6),              y = c(0,1,1,2,0,1,3,4)) # x and y are inherited from pp ll <- l_layer_rectangles(      pp,      group = rep(1:4, each = 2),      color = c('red', 'blue', 'green', 'orange'),      linecolor = \"black\" ) l_scaleto_world(pp)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Change layer label — l_layer_relabel","title":"Change layer label — l_layer_relabel","text":"Layer labels useful identify layer layer   inspector. layer label can initially set layer creation   label argument.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change layer label — l_layer_relabel","text":"","code":"l_layer_relabel(widget, layer, label)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change layer label — l_layer_relabel","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used label new label layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change layer label — l_layer_relabel","text":"0 success otherwise function throws error","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change layer label — l_layer_relabel","text":"Note layer label state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_relabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change layer label — l_layer_relabel","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_rectangle(p, x=0:1, y=0:1, label=\"A rectangle\") l_layer_getLabel(p, l)  l_layer_relabel(p, l, label=\"A relabelled rectangle\") l_layer_getLabel(p, l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show or unhide a Layer — l_layer_show","title":"Show or unhide a Layer — l_layer_show","text":"Hidden invisible layers rendered. function   unhides invisible layer rendered .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show or unhide a Layer — l_layer_show","text":"","code":"l_layer_show(widget, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show or unhide a Layer — l_layer_show","text":"widget widget path layer object class 'l_layer' layer layer id. widget argument class 'l_layer' layer argument used","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show or unhide a Layer — l_layer_show","text":"0 success otherwise function throws error","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show or unhide a Layer — l_layer_show","text":"Visibile layers rendered, invisible ones .   ancestor layer set invisible layer rendered   either. layer visibility flag can checked   l_layer_isVisible actual visibility (.e.   ancesters visibile ) can checked   l_layer_layerVisibility. Note layer visibility state layer ,   instead information part layer collection (.e.   parent widget).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show or unhide a Layer — l_layer_show","text":"","code":"if(interactive()){  p <- l_plot()  l <- l_layer_rectangle(p, x=0:1, y=0:1, color=\"steelblue\") l_layer_hide(p, l)  l_layer_show(p, l)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a smooth line for loon — l_layer_smooth","title":"Layer a smooth line for loon — l_layer_smooth","text":"Display smooth line layer","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a smooth line for loon — l_layer_smooth","text":"","code":"l_layer_smooth(   widget,   x = NULL,   y = NULL,   method = \"loess\",   group = \"\",   formula = y ~ x,   interval = c(\"none\", \"confidence\", \"prediction\"),   n = 80,   span = 0.75,   level = 0.95,   methodArgs = list(),   linecolor = \"steelblue\",   linewidth = 2,   linedash = \"\",   confidenceIntervalArgs = list(linecolor = \"gray80\", linewidth = 4, linedash = \"\"),   predictionIntervalArgs = list(linecolor = \"gray50\", linewidth = 3, linedash = 1),   label = \"smooth\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a smooth line for loon — l_layer_smooth","text":"widget widget path name string x x coordinates line. provided, x inherited widget y y coordinates line. provided, y inherited widget method Smoothing method (function) use, accepts either character vector, e.g. \"lm\", \"glm\", \"loess\" function, e.g. MASS::rlm mgcv::gam, stats::lm, stats::loess. group Data can grouped n dimensional aesthetics attributes, e.g. \"color\", \"size\". addition, length n vector data.frame accommodated. formula Formula use smoothing function, eg. y ~ x, y ~ poly(x, 2), y ~ log(x) interval type interval, \"none\", \"confidence\" \"prediction\" (glm) n Number points evaluate smoother. span Controls amount smoothing default loess smoother. Smaller numbers produce wigglier lines, larger numbers produce smoother lines. level Level confidence interval use (0.95 default). methodArgs List additional arguments passed modelling function defined method. linecolor fitted line color. linewidth fitted line width linedash fitted line dash confidenceIntervalArgs line color, width dash confidence interval predictionIntervalArgs line color, width dash prediction interval label label used layers inspector parent group layer index index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a smooth line for loon — l_layer_smooth","text":"","code":"if(interactive()) { # loess fit p <- l_plot(iris, color = iris$Species) l1 <- l_layer_smooth(p, interval = \"confidence\") l_layer_hide(l1)  # the fits are grouped by points color l2 <- l_layer_smooth(p, group = \"color\",                      method = \"lm\")  # so far, all intervals are hidden ls <- l_layer_getChildren(l2) intervals <- l_layer_getChildren(l_create_handle(c(p,ls[3]))) ci <- l_create_handle(c(p,intervals[3])) l_layer_show(ci) # show prediction interval pi <- l_create_handle(c(p,intervals[2])) l_layer_show(pi) # hide all l_layer_hide(l2)  # Draw a fitted line based on a new data set shortSepalLength <- (iris$Sepal.Length < 5) l3 <- l_layer_smooth(p,                      x = iris$Sepal.Length[shortSepalLength],                      y = iris$Sepal.Width[shortSepalLength],                      method = \"lm\",                      linecolor = \"firebrick\",                      interval = \"prediction\") l_layer_hide(l3)  if(require(mgcv)) {   # a full tensor product smooth   ## linecolor is the same with the points color   l4 <- l_layer_smooth(p,                        method = \"gam\",                        formula = y~te(x))   l_layer_hide(l4) }  # facets fp <- l_facet(p, by = iris$Species, inheritLayers = FALSE) l5 <- l_layer_smooth(fp, method = \"lm\")  # generalized linear model if(require(\"loon.data\")) {   data(\"SAheart\")   # logit regression   chd <- as.numeric(SAheart$chd) - 1   age <- SAheart$age   p1 <- l_plot(age, chd,                title = \"logit regression\")   gl1 <- l_layer_smooth(p1,                         method = \"glm\",                         methodArgs = list(family = binomial()),                         interval = \"conf\")    # log linear regression   counts <- c(18,17,15,20,10,20,25,13,12)   age <- c(40,35,53,46,20,33,48,25,23)   p2 <- l_plot(age, counts,                title = \"log-linear regression\")   gl2 <- l_layer_smooth(p2,                         method = \"glm\",                         methodArgs = list(family = poisson()),                         interval = \"conf\") } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a text — l_layer_text","title":"Layer a text — l_layer_text","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles. layer single character string","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a text — l_layer_text","text":"","code":"l_layer_text(   widget,   x,   y,   text,   color = \"gray60\",   size = 6,   angle = 0,   label = \"text\",   parent = \"root\",   index = 0,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a text — l_layer_text","text":"widget widget path name string x coordinate y coordinate text character string color color text size size font angle rotation text label label used layers inspector parent group layer index newly added layer parent group ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a text — l_layer_text","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer a text — l_layer_text","text":"side effect Tcl's text-based design, best   use l_layer_text one like layer single character   string (l_layer_texts n=1). information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer a text — l_layer_text","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_text(p, 0, 0, \"Hello World\")  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer texts — l_layer_texts","title":"Layer texts — l_layer_texts","text":"Loon's displays based Cartesian coordinates (.e.   scatterplot, histogram graph display) allow layering visual   information including polygons, text rectangles. Layer vector character strings.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer texts — l_layer_texts","text":"","code":"l_layer_texts(   widget,   x,   y,   text,   color = \"gray60\",   size = 6,   angle = 0,   anchor = \"center\",   justify = \"center\",   label = \"texts\",   parent = \"root\",   index = 0,   active = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer texts — l_layer_texts","text":"widget widget path name string x vector x coordinates y vector y coordinates text vector text strings color color text size font size angle text rotation anchor specifies information text displayed widget. Must one values c(\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\", \"center\"). example, \"nw\" means display information top-left corner top-left corner widget. justify multiple lines text displayed widget, option determines lines line . Must one c(\"left\", \"center\", \"right\"). \"Left\" means lines' left edges line , \"center\" means lines' centers aligned, \"right\" means lines' right edges line . label label used layers inspector parent group layer index newly added layer parent group active logical determining whether objects appear (default TRUE ). ... additional state initialization arguments, see l_info_states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer texts — l_layer_texts","text":"layer object handle, layer id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer texts — l_layer_texts","text":"side effect Tcl's text-based design, best   use l_layer_text one like layer single character   string (l_layer_texts n=1). information run: l_help(\"learn_R_layer\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layer_texts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer texts — l_layer_texts","text":"","code":"if(interactive()){  p <- l_plot() l <- l_layer_texts(p, x=1:3, y=3:1, text=c(\"This is\", \"a\", \"test\"), size=20) l_scaleto_world(p) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layers_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Layers Inspector — l_layers_inspector","title":"Create a Layers Inspector — l_layers_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layers_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Layers Inspector — l_layers_inspector","text":"","code":"l_layers_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_layers_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Layers Inspector — l_layers_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_layers_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Layers Inspector — l_layers_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_layers_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Layers Inspector — l_layers_inspector","text":"","code":"if(interactive()){  i <- l_layers_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_loonWidgets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all active top level loon plots. — l_loonWidgets","title":"Get all active top level loon plots. — l_loonWidgets","text":"Loon's plots constructed TCL identified path string appearing window containing plot. plots saved variable, function look loon plots displayed return values list whose elements may assigned R variables.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loonWidgets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all active top level loon plots. — l_loonWidgets","text":"","code":"l_loonWidgets(pathTypes, inspector = FALSE)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_loonWidgets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all active top level loon plots. — l_loonWidgets","text":"pathTypes optional argument identifying collection path types returned (displayed). inspector whether return loon inspector widget must subset union l_basePaths() l_compoundPaths(). missing, l_basePaths() l_compoundPaths() returned.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loonWidgets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all active top level loon plots. — l_loonWidgets","text":"list whose elements named , contain values , loon plot widgets.  list can nested loon plots (like l_pairs) compound consist one base loon plot.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_loonWidgets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all active top level loon plots. — l_loonWidgets","text":"","code":"if(interactive()){ l_plot(iris) l_hist(iris) l_hist(mtcars) l_pairs(iris) # The following will not be loonWidgets (neither is the inspector) tt <- tktoplevel() tkpack(l1 <- tklabel(tt, text = \"Heave\"), l2<- tklabel(tt, text = \"Ho\")) # # This will return loon widgets corresponding to plots loonPlots <- l_loonWidgets() names(loonPlots) firstPlot <- loonPlots[[1]] firstPlot[\"color\"] <- \"red\" histograms <- l_loonWidgets(\"hist\") lapply(histograms,        FUN  = function(hist) {                 hist[\"binwidth\"] <- hist[\"binwidth\"]/2                 l_scaleto_world(hist)              }              ) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a loon inspector — l_loon_inspector","title":"Create a loon inspector — l_loon_inspector","text":"loon inspector singleton widget provids   overview view modify active plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a loon inspector — l_loon_inspector","text":"","code":"l_loon_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a loon inspector — l_loon_inspector","text":"parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . ... state arguments, see l_info_states.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a loon inspector — l_loon_inspector","text":"loon widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a loon inspector — l_loon_inspector","text":"information run: l_help(\"learn_R_display_inspectors\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_loon_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a loon inspector — l_loon_inspector","text":"","code":"if(interactive()){ i <- l_loon_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_make_glyphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","title":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","text":"Loon's primitive glyph types limited terms compound   shapes. function can create point glyph png   re-import tk img object used point glyphs loon. See   examples.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_make_glyphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","text":"","code":"l_make_glyphs(data, draw_fun, width = 50, height = 50, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_make_glyphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","text":"data list element contains data object used draw_fun draw_fun function draws glyph using R base graphics grid (including ggplot2 lattice) engine width width glyph pixel height height glyph pixel ... additional arguments passed png function Note: type allowed list.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_make_glyphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","text":"vector tk img object references","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_make_glyphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make arbitrary glyphs with R graphic devices — l_make_glyphs","text":"","code":"if(interactive()){  if (FALSE) { # \\dontrun{ if (requireNamespace(\"maps\", quietly = TRUE)) {   data(minority)   p <- l_plot(minority$long, minority$lat)    canada <- maps::map(\"world\",  \"Canada\", fill=TRUE, plot=FALSE)   l_map <- l_layer(p, canada, asSingleLayer=TRUE)   l_scaleto_world(p)    img <- l_make_glyphs(lapply(1:nrow(minority), function(i)minority[i,]), function(m) {       par(mar=c(1,1,1,1)*.5)       mat <- as.matrix(m[1,1:10]/max(m[1:10]))       barplot(height = mat,               beside = FALSE,               ylim = c(0,1),               axes= FALSE,               axisnames=FALSE)   }, width=120, height=120)    l_imageviewer(img)    g <- l_glyph_add_image(p, img, \"barplot\")   p['glyph'] <- g  }  ## with grid if (requireNamespace(\"grid\", quietly = TRUE)) {    li <- l_make_glyphs(runif(6), function(x) {       if(any(x>1 | x<0))           stop(\"out of range\")       grid::pushViewport(grid::plotViewport(grid::unit(c(1,1,1,1)*0, \"points\")))       grid::grid.rect(gp=grid::gpar(fill=NA))       grid::grid.rect(0, 0, height = grid::unit(x, \"npc\"), just = c(\"left\", \"bottom\"),                 gp=grid::gpar(col=NA, fill=\"steelblue\"))   })    l_imageviewer(li)    p <- l_plot(1:6)   g <- l_glyph_add_image(p, li, \"bars\")   p['glyph'] <- g }  } # }  ##  A more familiar example? ##  The periodic table  data(\"elements\", package = \"loon.data\")  # A draw function for each element draw_element_box <- function(symbol,                              name, number,                              mass_number,                              mass, col) {    if (missing(col)) col <- \"white\"    oldPar <-  par(bg = col, mar = rep(1, 4))     plot(NA, xlim = c(0,1), ylim = c(0, 1), axes=FALSE, ann = FALSE)    text(0.5, 0.6, labels = symbol, cex = 18)    text(0.15, 1, labels = number, cex = 6, adj= c(0.5,1))    text(0.5, 0.25, labels = name, cex = 6)    text(0.5, 0.11, labels = mass_number, cex = 3)    text(0.5, 0.01, labels = mass, cex = 3)    box()     par(oldPar)    }  # Get the categories colIDs <- paste(elements$Category, elements$Subcategory) # Get a loon palette function colFn <- color_loon() # Get colors identified with categories tableCols <- colFn(colIDs) # # A function to an element box image for each element.  make_element_boxes <- function(elements, cols, width = 500, height = 500) {    if (missing(cols)) cols <- rep(\"white\", nrow(elements))    listOfElements <- lapply(1:nrow(elements),                             FUN = function(i) {                                 list(vals = elements[i,],                                      col = cols[i])                             })    # glyphs created here    l_make_glyphs(listOfElements,                  draw_fun = function(element){                      x <- element$vals                      col <- element$col                      draw_element_box(symbol = x$Symbol,                                       name = x$Name,                                       number = x$Number,                                       mass_number = x$Mass_number,                                       mass = x$Mass,                                       col = col)                  },                  width = width,                  height = height)    }  # Construct the glyphs boxGlyphs <- make_element_boxes(elements, cols = tableCols)  # Get a couple of plots periodicTable <- l_plot(x = elements$x, y = elements$y,                         xlabel = \"\", ylabel = \"\",                         title = \"Periodic Table of the Elements\",                         linkingGroup = \"elements\",                         color = tableCols)  # Add the images as possible glyphs  bg <- l_glyph_add_image(periodicTable,                         images = boxGlyphs,                         label = \"Symbol boxes\")  # Set this to be the glyph periodicTable['glyph'] <- bg # # Get a second plot that shows the periodicity # # First some itemlabels elementLabels <- with(elements,                       paste(\"   \", Number, Symbol, \"\\n\",                             \"   \", Name, \"\\n\",                             \"   \", Mass                             )                       )  periodicPlot  <- l_plot(x = elements$Mass, y = elements$Density,                         xlabel = \"Mass\", ylabel = \"Density\",                         itemLabel = elementLabels,                         showItemLabels = TRUE,                         linkingGroup = \"elements\",                         color = tableCols)  # Add the images as possible glyphs to this plot as well  bg2 <- l_glyph_add_image(periodicPlot,                          images = boxGlyphs,                          label = \"Symbol boxes\")  # Could set this to be the glyph periodicPlot['glyph'] <- bg2   }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Points or Nodes on a Grid — l_move_grid","title":"Arrange Points or Nodes on a Grid — l_move_grid","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Points or Nodes on a Grid — l_move_grid","text":"","code":"l_move_grid(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Points or Nodes on a Grid — l_move_grid","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arrange Points or Nodes on a Grid — l_move_grid","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_halign.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontally Align Points or Nodes — l_move_halign","title":"Horizontally Align Points or Nodes — l_move_halign","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_halign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontally Align Points or Nodes — l_move_halign","text":"","code":"l_move_halign(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_halign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontally Align Points or Nodes — l_move_halign","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_halign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Horizontally Align Points or Nodes — l_move_halign","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_hdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontally Distribute Points or Nodes — l_move_hdist","title":"Horizontally Distribute Points or Nodes — l_move_hdist","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_hdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontally Distribute Points or Nodes — l_move_hdist","text":"","code":"l_move_hdist(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_hdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontally Distribute Points or Nodes — l_move_hdist","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_hdist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Horizontally Distribute Points or Nodes — l_move_hdist","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter Points Or Nodes — l_move_jitter","title":"Jitter Points Or Nodes — l_move_jitter","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter Points Or Nodes — l_move_jitter","text":"","code":"l_move_jitter(widget, which = \"selected\", factor = 1, amount = \"\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter Points Or Nodes — l_move_jitter","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point. factor numeric. amount numeric; positive, used amount (see ),     otherwise, = 0 default factor * z/50. Default (NULL): factor * d/5 d     smallest difference x values.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_jitter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jitter Points Or Nodes — l_move_jitter","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Temporary Point or Node Locations to the x and y states — l_move_reset","title":"Reset Temporary Point or Node Locations to the x and y states — l_move_reset","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Temporary Point or Node Locations to the x and y states — l_move_reset","text":"","code":"l_move_reset(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Temporary Point or Node Locations to the x and y states — l_move_reset","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_reset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset Temporary Point or Node Locations to the x and y states — l_move_reset","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_valign.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertically Align Points or Nodes — l_move_valign","title":"Vertically Align Points or Nodes — l_move_valign","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_valign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertically Align Points or Nodes — l_move_valign","text":"","code":"l_move_valign(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_valign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertically Align Points or Nodes — l_move_valign","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_valign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vertically Align Points or Nodes — l_move_valign","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_vdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertically Distribute Points or Nodes — l_move_vdist","title":"Vertically Distribute Points or Nodes — l_move_vdist","text":"Scatterplot graph displays support interactive temporary   relocation single points (nodes graphs).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_vdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertically Distribute Points or Nodes — l_move_vdist","text":"","code":"l_move_vdist(widget, which = \"selected\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_vdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertically Distribute Points or Nodes — l_move_vdist","text":"widget plot graph widget handle widget path name either one 'selected', 'active', '', boolean vector value point.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_move_vdist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vertically Distribute Points or Nodes — l_move_vdist","text":"Moving points temporarily saves new point coordinates   states xTemp yTemp. dimension xTemp   yTemp either 0 n. xTemp   yTemp length 0 required   length n, scatterplot display coordinates instead   coordinates x y. Note points can also temporally relocated using mouse   keyboard gestures. , move single point node press   CTRL key wile dragging point. move selected points   press CTRL Shift keys dragging one   selected points. distributing points horizontally vertically, order remains   . distributing points horizontally vertically, order   remains . example, distribute point   horizontally vertically, resulting scatterplot plot   y ranks versus x ranks. correlation   plot Spearman's rho. arranging points grid,   spatial ordering preserved first determining grid size (.e.   x b b close numbers)   taking smallest values y direction   arrange x order first row, repeat   remaining points. Also note loon inspector also buttons temporary   points/nodes movements.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_nDimStateNames.html","id":null,"dir":"Reference","previous_headings":"","what":"N dimensional state names access — l_nDimStateNames","title":"N dimensional state names access — l_nDimStateNames","text":"Get n dimensional state names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_nDimStateNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"N dimensional state names access — l_nDimStateNames","text":"","code":"l_nDimStateNames(loon_plot)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_nDimStateNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"N dimensional state names access — l_nDimStateNames","text":"loon_plot loon widget class name loon plot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_nDimStateNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"N dimensional state names access — l_nDimStateNames","text":"","code":"if(interactive()){  p <- l_plot() l_nDimStateNames(p) l_nDimStateNames(\"l_plot\")  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"Creates navigation graph, graphswitch, navigator   geodesic2d context added, scatterplot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"","code":"l_navgraph(data, separator = \":\", graph = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"data data.frame numeric variables separator string separates variable names 2d graph nodes graph optional, graph loongraph object navigation graph. graph argument used 3d 4d transition graph complete transition graph added. ... arguments passed modify scatterplot plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"named list graph handle, plot handle,   graphswitch handle, navigator handle, context   handle.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"information run: l_help(\"learn_R_display_graph.html#l_navgraph\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navgraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore a dataset with the canonical 2d navigation graph setting — l_navgraph","text":"","code":"if(interactive()){  ng <- l_navgraph(oliveAcids, color=olive$Area) ng2 <- l_navgraph(oliveAcids, separator='-', color=olive$Area)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Navigator to a Graph — l_navigator_add","title":"Add a Navigator to a Graph — l_navigator_add","text":"turn graph navigation graph need add one   navigators. Navigator set states can queried   modified.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Navigator to a Graph — l_navigator_add","text":"","code":"l_navigator_add(   widget,   from = \"\",   to = \"\",   proportion = 0,   color = \"orange\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Navigator to a Graph — l_navigator_add","text":"widget graph widget position navigator graph defined states , proportion. states hold vectors node names graph. proportion state number including 0 1 defines far navigator last element first element . state can also empty string '' node go . Hence, concatenation define path graph. see descriptoin proportion see descriptoin color navigator ... named arguments passed modify navigator states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Navigator to a Graph — l_navigator_add","text":"navigator handle navigator id","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Navigator to a Graph — l_navigator_add","text":"information run: l_help(\"learn_R_display_graph.html#navigators\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Navigator — l_navigator_delete","title":"Delete a Navigator — l_navigator_delete","text":"Removes navigator graph widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Navigator — l_navigator_delete","text":"","code":"l_navigator_delete(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Navigator — l_navigator_delete","text":"widget graph widget id navigator handle navigator id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the Label of a Navigator — l_navigator_getLabel","title":"Query the Label of a Navigator — l_navigator_getLabel","text":"Returns label navigator","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the Label of a Navigator — l_navigator_getLabel","text":"","code":"l_navigator_getLabel(widget, id)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the Label of a Navigator — l_navigator_getLabel","text":"widget graph widget handle id navigator id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the sequence of nodes of a navigator's current path — l_navigator_getPath","title":"Get the sequence of nodes of a navigator's current path — l_navigator_getPath","text":"Determines returns current path navigator.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the sequence of nodes of a navigator's current path — l_navigator_getPath","text":"","code":"l_navigator_getPath(navigator)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the sequence of nodes of a navigator's current path — l_navigator_getPath","text":"navigator navigator handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_getPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the sequence of nodes of a navigator's current path — l_navigator_getPath","text":"vector node names current path navigator","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Navigators — l_navigator_ids","title":"List Navigators — l_navigator_ids","text":"Lists navigators belong graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Navigators — l_navigator_ids","text":"","code":"l_navigator_ids(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Navigators — l_navigator_ids","text":"widget graph widget","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the Label of a Navigator — l_navigator_relabel","title":"Modify the Label of a Navigator — l_navigator_relabel","text":"Change navigator label","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the Label of a Navigator — l_navigator_relabel","text":"","code":"l_navigator_relabel(widget, id, label)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the Label of a Navigator — l_navigator_relabel","text":"widget graph widget handle id navigator id label new label navigator","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_backward.html","id":null,"dir":"Reference","previous_headings":"","what":"Have the Navigator Walk Backward on the Current Path — l_navigator_walk_backward","title":"Have the Navigator Walk Backward on the Current Path — l_navigator_walk_backward","text":"Animate navigator walk path graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_backward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Have the Navigator Walk Backward on the Current Path — l_navigator_walk_backward","text":"","code":"l_navigator_walk_backward(navigator, to = \"\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_backward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Have the Navigator Walk Backward on the Current Path — l_navigator_walk_backward","text":"navigator navigator handle node name part active path backward navigator stop.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_backward.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Have the Navigator Walk Backward on the Current Path — l_navigator_walk_backward","text":"Note navigators states animationPause   animationProportionIncrement control animation speed.   , can stop animation clicking somewhere graph   display using mouse scroll wheel.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_forward.html","id":null,"dir":"Reference","previous_headings":"","what":"Have the Navigator Walk Forward on the Current Path — l_navigator_walk_forward","title":"Have the Navigator Walk Forward on the Current Path — l_navigator_walk_forward","text":"Animate navigator walk path graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_forward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Have the Navigator Walk Forward on the Current Path — l_navigator_walk_forward","text":"","code":"l_navigator_walk_forward(navigator, to = \"\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_forward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Have the Navigator Walk Forward on the Current Path — l_navigator_walk_forward","text":"navigator navigator handle node name part active path forward navigator stop.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_forward.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Have the Navigator Walk Forward on the Current Path — l_navigator_walk_forward","text":"Note navigators states animationPause   animationProportionIncrement control animation speed.   , can stop animation clicking somewhere graph   display using mouse scroll wheel.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Have the Navigator Walk a Path on the Graph — l_navigator_walk_path","title":"Have the Navigator Walk a Path on the Graph — l_navigator_walk_path","text":"Animate navigator walk path graph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Have the Navigator Walk a Path on the Graph — l_navigator_walk_path","text":"","code":"l_navigator_walk_path(navigator, path)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_navigator_walk_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Have the Navigator Walk a Path on the Graph — l_navigator_walk_path","text":"navigator navigator handle path vector node names host graph form valid path graph","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_nestedTclList2Rlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","title":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","text":"Helper function work R Tcl","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_nestedTclList2Rlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","text":"","code":"l_nestedTclList2Rlist(   tclobj,   transform = function(x) {      as.numeric(x)  } )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_nestedTclList2Rlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","text":"tclobj tcl object returned tcl .Tcl. transform function transfrom string output another data type","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_nestedTclList2Rlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","text":"nested R list","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_nestedTclList2Rlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Nested Tcl List to an R List — l_nestedTclList2Rlist","text":"","code":"tclobj <- .Tcl('set a {{1 2 3} {2 3 4 4} {3 5 3 3}}') l_nestedTclList2Rlist(tclobj) #> [[1]] #> [1] 1 2 3 #>  #> [[2]] #> [1] 2 3 4 4 #>  #> [[3]] #> [1] 3 5 3 3 #>"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"Measures object matrix data.frame measures   (columns) variable pairs (rows) rownames two variates   separated separator","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"","code":"# Default S3 method l_ng_plots(measures, data, separator = \":\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"measures matrix data.frame measures (columns) variable pairs (rows) rownames two variates separated separator data data frame scatterplot separator string separates variable pair string individual variables ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"information run: l_help(\"learn_R_display_graph.html#l_ng_plots\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select 2d spaces with variable associated measures displayed in scatterplot matrix — l_ng_plots.default","text":"","code":"if(interactive()){  if (FALSE) { # \\dontrun{ n <- 100 dat <- data.frame(    A = rnorm(n), B = rnorm(n), C = rnorm(n),    D = rnorm(n), E = rnorm(n) ) m2d <- data.frame(     cov = with(dat, c(cov(A,B), cov(A,C), cov(B,D), cov(D,E), cov(A,E))),     measure_1 = c(1, 3, 2, 1, 4),     row.names = c('A:B', 'A:C', 'B:D', 'D:E', 'A:E') )  # or m2d <- as.matrix(m2d)  nav <- l_ng_plots(measures=m2d, data=dat)  # only one measure m <- m2d[,1] names(m) <- row.names(m2d) nav <- l_ng_plots(measures=m, data=dat)  m2d[c(1,2),1]  # one d measures m1d <- data.frame(      mean = sapply(dat, mean),      median =  sapply(dat, median),      sd =  sapply(dat, sd),      q1 = sapply(dat, function(x)quantile(x, probs=0.25)),      q3 = sapply(dat, function(x)quantile(x, probs=0.75)),      row.names = names(dat) )  nav <- l_ng_plots(m1d, dat)  ## more involved q1 <- function(x)as.vector(quantile(x, probs=0.25))  # be careful that the vector names are correct nav <- l_ng_plots(sapply(oliveAcids, q1), oliveAcids) } # }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"2d navigation graph setup with with dynamic node fitering using a scatterplot matrix — l_ng_plots","title":"2d navigation graph setup with with dynamic node fitering using a scatterplot matrix — l_ng_plots","text":"Generic function create navigation graph environment   user can filter graph nodes selecting 2d spaces based 2d measures   displayed scatterplot matrix.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d navigation graph setup with with dynamic node fitering using a scatterplot matrix — l_ng_plots","text":"","code":"l_ng_plots(measures, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d navigation graph setup with with dynamic node fitering using a scatterplot matrix — l_ng_plots","text":"measures object measures stored ... argument passed methods","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2d navigation graph setup with with dynamic node fitering using a scatterplot matrix — l_ng_plots","text":"information run: l_help(\"learn_R_display_graph.html#l_ng_plots\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":null,"dir":"Reference","previous_headings":"","what":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"Measures object class measures. using measure objects   measures can dynamically re-calculated subset   data.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"","code":"# S3 method for class 'measures' l_ng_plots(measures, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"measures object class measures, see measures1d, measures2d. ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"Note provide scagnostics2d function   create measures object scagnostics measures. information run: l_help(\"learn_R_display_graph.html#l_ng_plots\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2d Navigation Graph Setup with dynamic node fitering using a scatterplot matrix — l_ng_plots.measures","text":"","code":"if(interactive()){  if (FALSE) { # \\dontrun{ # 2d measures scags <- scagnostics2d(oliveAcids, separator='**') scags() ng <- l_ng_plots(scags, color=olive$Area)  # 1d measures scale01 <- function(x){(x-min(x))/diff(range(x))} m1d <- measures1d(sapply(iris[,-5], scale01),      mean=mean, median=median, sd=sd,      q1=function(x)as.vector(quantile(x, probs=0.25)),      q3=function(x)as.vector(quantile(x, probs=0.75)))  m1d()  nav <- l_ng_plots(m1d, color=iris$Species)  # with only one measure nav <- l_ng_plots(measures1d(oliveAcids, sd))  # with two measures nav <- l_ng_plots(measures1d(oliveAcids, sd=sd, mean=mean)) } # }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.scagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","text":"method useful working objects   scagnostics function scagnostics R   package. order dynamically re-calcultate scagnostic measures   subset data use scagnostics2d measures creature   function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.scagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","text":"","code":"# S3 method for class 'scagnostics' l_ng_plots(measures, data, separator = \":\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.scagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","text":"measures objects scagnostics function scagnostics R package data data frame scatterplot separator string separates variable pair string individual variables ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.scagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_plots.scagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and by using a scatterplot matrix — l_ng_plots.scagnostics","text":"","code":"if(interactive()){  if (FALSE) { # \\dontrun{ library(scagnostics)   scags <- scagnostics::scagnostics(oliveAcids)   l_ng_plots(scags, oliveAcids, color=olive$Area) } # }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"Measures object matrix data.frame measures   (columns) variable pairs (rows) rownames two variates   separated separator","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"","code":"# Default S3 method l_ng_ranges(measures, data, separator = \":\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"measures matrix data.frame measures (columns) variable pairs (rows) rownames two variates separated separator data data frame scatterplot separator string separates variable pair string individual variables ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"information run: l_help(\"learn_R_display_graph.html#l_ng_ranges\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select 2d spaces with variable associated measures using a slider — l_ng_ranges.default","text":"","code":"if (interactive()){  # Simple example with generated data n <- 100 dat <- data.frame(    A = rnorm(n), B = rnorm(n), C = rnorm(n),    D = rnorm(n), E = rnorm(n) ) m2d <- data.frame(     cor = with(dat, c(cor(A,B), cor(A,C), cor(B,D), cor(D,E), cor(A,E))),     my_measure = c(1, 3, 2, 1, 4),     row.names = c('A:B', 'A:C', 'B:D', 'D:E', 'A:E') )  # or m2d <- as.matrix(m2d)  nav <- l_ng_ranges(measures=m2d, data=dat)  # With 1d measures m1d <- data.frame(      mean = sapply(dat, mean),      median =  sapply(dat, median),      sd =  sapply(dat, sd),      q1 = sapply(dat, function(x)quantile(x, probs=0.25)),      q3 = sapply(dat, function(x)quantile(x, probs=0.75)),      row.names = names(dat) )  nav <- l_ng_ranges(m1d, dat)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"2d navigation graph setup with with dynamic node fitering using a slider — l_ng_ranges","title":"2d navigation graph setup with with dynamic node fitering using a slider — l_ng_ranges","text":"Generic function create navigation graph environment   user can filter graph nodes using slider select 2d spaces based 2d   measures.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d navigation graph setup with with dynamic node fitering using a slider — l_ng_ranges","text":"","code":"l_ng_ranges(measures, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d navigation graph setup with with dynamic node fitering using a slider — l_ng_ranges","text":"measures object measures stored ... argument passed methods","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2d navigation graph setup with with dynamic node fitering using a slider — l_ng_ranges","text":"information run: l_help(\"learn_R_display_graph.html#l_ng_ranges\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":null,"dir":"Reference","previous_headings":"","what":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"Measures object class measures. using measure objects   measures can dynamically re-calculated subset   data.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"","code":"# S3 method for class 'measures' l_ng_ranges(measures, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"measures object class measures, see measures1d, measures2d. ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"Note provide scagnostics2d function   create measures object scagnostics measures. information run: l_help(\"learn_R_display_graph.html#l_ng_ranges\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2d Navigation Graph Setup with dynamic node fitering using a slider — l_ng_ranges.measures","text":"","code":"if (interactive()){  # 2d measures # s <- scagnostics2d(oliveAcids) # nav <- l_ng_ranges(s, color=olive$Area)  # 1d measures scale01 <- function(x){(x-min(x))/diff(range(x))} m1d <- measures1d(sapply(iris[,-5], scale01),      mean=mean, median=median, sd=sd,      q1=function(x)as.vector(quantile(x, probs=0.25)),      q3=function(x)as.vector(quantile(x, probs=0.75)))  m1d()  nav <- l_ng_ranges(m1d, color=iris$Species)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"method useful working objects   scagnostics function scagnostics R   package. order dynamically re-calcultate scagnostic measures   subset data use scagnostics2d measures creature   function.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"","code":"# S3 method for class 'scagnostics' l_ng_ranges(measures, data, separator = \":\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"measures objects scagnostics function scagnostics R package data data frame scatterplot separator string separates variable pair string individual variables ... arguments passed configure scatterplot","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"named list plots-, graph-, plot-, navigator-, context   handle. list also contains environment function call   env.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"information run: l_help(\"learn_R_display_graph.html#l_ng_ranges\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_ng_ranges.scagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2d Navigation Graph Setup with dynamic node fitering based on scagnostic measures and using a slider — l_ng_ranges.scagnostics","text":"","code":"if (FALSE) { # \\dontrun{ if (requireNamespace(\"scagnostics\", quietly = TRUE)) {   s <- scagnostics::scagnostics(oliveAcids)   ng <- l_ng_ranges(s, oliveAcids, color=olive$Area) } } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"An interactive scatterplot matrix — l_pairs","title":"An interactive scatterplot matrix — l_pairs","text":"Function creates scatterplot matrix using loon's scatterplot   widgets","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An interactive scatterplot matrix — l_pairs","text":"","code":"l_pairs(   data,   connectedScales = c(\"cross\", \"none\"),   linkingGroup,   linkingKey,   showItemLabels = TRUE,   itemLabel,   showHistograms = FALSE,   histLocation = c(\"edge\", \"diag\"),   histHeightProp = 1,   histArgs = list(),   showSerialAxes = FALSE,   serialAxesArgs = list(),   parent = NULL,   plotWidth = 100,   plotHeight = 100,   span = 10L,   showProgressBar = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An interactive scatterplot matrix — l_pairs","text":"data data.frame numerical data create scatterplot matrix connectedScales Determines scales panels connected. \"cross\": scales row column connected; \"none\": neither \"x\" \"y\" scales connected panels. linkingGroup string giving linkingGroup plots. missing, default linkingGroup determined deparsing data. linkingKey vector strings provide linking identity row data data.frame.  missing, default linkingKey 0:(nrows(data)-1). showItemLabels TRUE, logical indicating whether itemLabel pops point mouse hovers . itemLabel vector strings used pop information mouse hovers point.  missing, default itemLabel row.names(data). showHistograms logical (default FALSE) show histograms variable histLocation one \"edge\" \"diag\", showHistograms = TRUE histHeightProp positive number giving height histograms proportion height scatterplots histArgs additional arguments modify `l_hist` states showSerialAxes logical (default FALSE) indication whether show serial axes plot bottom left pairs plot () serialAxesArgs additional arguments modify `l_serialaxes` states parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . plotWidth default plot width (pixel) plotHeight default plot height (pixel) span many column/row occupies widget showProgressBar Logical; show progress bar ... named arguments modify `l_plot` states scatterplots","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An interactive scatterplot matrix — l_pairs","text":"`l_pairs` object (`l_compound` object), list named elements, representing separate interactive plot. names plots self explanatory list plots can accessed `l_pairs` object via `l_getPlots()`. plots linked default (name taken data set provided). Panning zooming constrained work together within scatterplot matrix (histograms).","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An interactive scatterplot matrix — l_pairs","text":"","code":"if(interactive()){  p <- l_pairs(iris[,-5], color=iris$Species, linkingGroup = \"iris\")  p <- l_pairs(iris[,-5], color=iris$Species, linkingGroup = \"iris\",              showHistograms = TRUE, showSerialAxes = TRUE) # plot names names(p)  # Each plot must be accessed to make changes not managed through # linking. # E.g. to change the glyph on all scatterplots to open circles for (plot in l_getPlots(p)) {       if (is(plot, \"l_plot\")) {           plot[\"glyph\"] <- \"ocircle\"} }  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive loon plot widget — l_plot","title":"Create an interactive loon plot widget — l_plot","text":"l_plot generic function creating interactive   visualization environments R objects.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive loon plot widget — l_plot","text":"","code":"l_plot(x, y, ...)  # Default S3 method l_plot(   x,   y = NULL,   by = NULL,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   connectedScales = c(\"cross\", \"row\", \"column\", \"both\", \"x\", \"y\", \"none\"),   color = l_getOption(\"color\"),   glyph = l_getOption(\"glyph\"),   size = l_getOption(\"size\"),   active = TRUE,   selected = FALSE,   xlabel,   ylabel,   title,   showLabels = TRUE,   showScales = FALSE,   showGuides = TRUE,   guidelines = l_getOption(\"guidelines\"),   guidesBackground = l_getOption(\"guidesBackground\"),   foreground = l_getOption(\"foreground\"),   background = l_getOption(\"background\"),   parent = NULL,   ... )  # S3 method for class 'decomposed.ts' l_plot(   x,   y = NULL,   xlabel = NULL,   ylabel = NULL,   title = NULL,   tk_title = NULL,   color = l_getOption(\"color\"),   size = l_getOption(\"size\"),   linecolor = l_getOption(\"color\"),   linewidth = l_getOption(\"linewidth\"),   linkingGroup,   showScales = TRUE,   showGuides = TRUE,   showLabels = TRUE,   ... )  # S3 method for class 'density' l_plot(   x,   y = NULL,   xlabel = NULL,   ylabel = NULL,   title = NULL,   linewidth = l_getOption(\"linewidth\"),   linecolor = l_getOption(\"color\"),   ... )  # S3 method for class 'map' l_plot(x, y = NULL, ...)  # S3 method for class 'stl' l_plot(   x,   y = NULL,   xlabel = NULL,   ylabel = NULL,   title = NULL,   tk_title = NULL,   color = l_getOption(\"color\"),   size = l_getOption(\"size\"),   linecolor = l_getOption(\"color\"),   linewidth = l_getOption(\"linewidth\"),   linkingGroup,   showScales = TRUE,   showGuides = TRUE,   showLabels = TRUE,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive loon plot widget — l_plot","text":"x coordinates points l_plot. Alternatively, single plotting structure (see function xy.coords details), formula, R object (e.g. density,stl, etc) accommodated. y y coordinates points l_plot, optional x appropriate structure. ... named arguments modify plot states. See l_info_states instantiated l_plot examples names values. loon plot can separated variables multiple panels. argument can take formula, n dimensional state names (see l_nDimStateNames) n-dimensional vector data.frame list lengths n input. x formula, optional data frame containing variables x . variables found data, taken environment, typically environment function called. layout layout facets 'grid', 'wrap' 'separate' connectedScales Determines scales facets connected depending layout used.  value layout, scales connected follows: layout = \"wrap\":  Across facets, connectedScales \"x\",  \"x\"  scales connected \"y\", \"y\" scales connected \"\",  \"x\" \"y\" scales connected \"none\",  neither \"x\" \"y\" scales connected.    value, \"y\" scale connected. layout = \"grid\":  Across facets, connectedScales \"cross\", scales row column connected \"row\", \"x\" \"y\" scales facets row connected \"column\", \"x\" \"y\" scales facets column connected \"x\", \"x\"  scales connected (regardless column) \"y\", \"y\" scales connected (regardless row) \"\",  \"x\" \"y\" scales connected facets \"none\",  neither \"x\" \"y\" scales connected facets. color colours points; colours repeated matching number points. Default found using l_getOption(\"color\"). glyph visual representation point. Argument values can string names primitive glyphs: circles: \"circle\", \"ccircle\", \"ocircle\"; squares boxes: \"square\", \"csquare\", \"osquare\"; triangles: \"triangle\", \"ctriangle\", \"otriangle\"; diamonds: \"diamond\", \"cdiamond\", \"odiamond\". string names constructed glyphs: text glyphs: see l_glyph_add_text() point ranges: see l_glyph_add_pointrange() polygons: see l_glyph_add_polygon() parallel coordinates: see l_glyph_add_serialaxes() star radial axes: see l_glyph_add_serialaxes() plot created using R: see l_make_glyphs() size size symbol (roughly terms area). Default found using l_getOption(\"size\"). active logical determining whether points appear (default TRUE points). logical vector given length equal number points, identifies points appear (TRUE) (FALSE). selected logical determining whether points appear selected first (default FALSE points). logical vector given length equal number points, identifies points (TRUE) (FALSE). xlabel Label horizontal (x) axis. missing, one inferred x possible. ylabel Label vertical (y) axis. missing, one inferred y (x) possible. title Title plot, default empty string. showLabels logical determine whether axes label (title) presented. showScales logical determine whether numerical scales presented axes. showGuides logical determine whether present background guidelines help determine locations. guidelines colour guidelines shown showGuides = TRUE. Default found using l_getOption(\"guidelines\"). guidesBackground colour background guidelines shown showGuides = TRUE. Default found using l_getOption(\"guidesBackground\"). foreground foreground colour used drawing. Default found using l_getOption(\"foreground\"). background background colour used plot. Default found using l_getOption(\"background\"). parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples . tk_title provides alternative window name Tk's wm title. NULL, stl used. linecolor line colour time series. Default given l_getOption(\"color\"). linewidth line width time series (incl. original decomposed components. Default given l_getOption(\"linewidth\"). linkingGroup string giving linkingGroup plots. missing, default linkingGroup determined deparsing input x.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive loon plot widget — l_plot","text":"input stl decomposed.ts object, structure class \"l_ts\" containing four loon plots representing part decomposition name: \"original\", \"trend\", \"seasonal\", \"remainder\" input vector, formula, data.frame, ... = NULL: loon widget returned NULL: l_facet object (list) returned element loon widget displaying subset interest.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an interactive loon plot widget — l_plot","text":"Like plot R, l_plot generic plotting function objects loon. default method l_plot.default produces interactive scatterplot loon. workhorse `loon` often key part many displays (e.g. l_pairs l_navgraph). example,  methods include l_plot.default (basic interactive scatterplot), l_plot.density (layers output density empty scatterplot),  l_plot.map (layers map empty scatterplot), l_plot.stl (compound display output stl). complete list methods(l_plot).  general direct manipulation interaction gestures   outlined following figures. Zooming Panning  Selecting Points/Objects  Moving Points Scatterplot Display  scatterplot displays number direct interactions mouse keyboard, include: zooming towards mouse cursor using mouse wheel, panning right-click dragging various selection methods using left mouse button sweeping, brushing individual point selection. See documentation l_plot details interaction gestures. arguments modify layouts can passed , e.g. \"separate\", \"ncol\", \"nrow\", etc. Check l_facet see arguments work.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive loon plot widget — l_plot","text":"","code":"if(interactive()) { ########################## l_plot.default ########################## # default use as scatterplot  p1 <- with(iris, l_plot(Sepal.Length, Sepal.Width, color=Species,                         title = \"First plot\"))  # The names of the info states that can be # accessed or set.  They can also be given values as # arguments to l_plot.default() names(p1) p1[\"size\"] <- 10  p2 <- with(iris, l_plot(Petal.Length ~ Petal.Width,                         linkingGroup=\"iris_data\",                         title = \"Second plot\",                         showGuides = FALSE)) p2[\"showScales\"] <- TRUE  # link first plot with the second plot requires # l_configure to coordinate the synchroniztion l_configure(p1, linkingGroup = \"iris_data\", sync = \"push\")  p1['selected'] <- iris$Species == \"versicolor\" p2[\"glyph\"][p1['selected']] <- \"cdiamond\"  gridExtra::grid.arrange(loonGrob(p1), loonGrob(p2), nrow = 1)  # Layout facets ### facet wrap p3 <- with(mtcars, l_plot(wt, mpg, by = cyl, layout = \"wrap\")) # it is equivalent to # p3 <- l_plot(mpg~wt, by = ~cyl, layout = \"wrap\", on = mtcars)  ### facet grid p4 <- l_plot(x = 1:6, y = 1:6,              by = size ~ color,              size = c(rep(50, 2), rep(25, 2), rep(50, 2)),              color = c(rep(\"red\", 3), rep(\"green\", 3)))  # Use with other tk widgets tt <- tktoplevel() tktitle(tt) <- \"Loon plots with custom layout\"  p1 <- l_plot(parent=tt, x=c(1,2,3), y=c(3,2,1)) p2 <- l_plot(parent=tt, x=c(4,3,1), y=c(6,8,4))  tkgrid(p1, row=0, column=0, sticky=\"nesw\") tkgrid(p2, row=0, column=1, sticky=\"nesw\")  tkgrid.columnconfigure(tt, 0, weight=1) tkgrid.columnconfigure(tt, 1, weight=1)  tkgrid.rowconfigure(tt, 0, weight=1) ########################## l_plot.decomposed.ts ########################## decompose <- decompose(co2) p <- l_plot(decompose, title = \"Atmospheric carbon dioxide over Mauna Loa\") # names of plots in the display names(p) # names of states associated with the seasonality plot names(p$seasonal) # which can be set p$seasonal['color'] <- \"steelblue\"  ########################## l_plot.stl ########################## co2_stl <- stl(co2, \"per\") p <- l_plot(co2_stl, title = \"Atmospheric carbon dioxide over Mauna Loa\") # names of plots in the display names(p) # names of states associated with the seasonality plot names(p$seasonal) # which can be set p$seasonal['color'] <- \"steelblue\" ########################## l_plot.density ########################## # plot a density estimate set.seed(314159) ds <- density(rnorm(1000)) p <- l_plot(ds,  title = \"density estimate\",             xlabel = \"x\", ylabel = \"density\",             showScales = TRUE)  ########################## l_plot.map ########################## if (requireNamespace(\"maps\", quietly = TRUE)) {    p <- l_plot(maps::map('world', fill=TRUE, plot=FALSE)) } }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive loon 3d plot widget — l_plot3D","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"l_plot3D generic function creating interactive   visualization environments R objects.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"","code":"l_plot3D(x, y, z, ...)  # Default S3 method l_plot3D(   x,   y = NULL,   z = NULL,   axisScaleFactor = 1,   by = NULL,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   connectedScales = c(\"cross\", \"row\", \"column\", \"both\", \"x\", \"y\", \"none\"),   color = l_getOption(\"color\"),   glyph = l_getOption(\"glyph\"),   size = l_getOption(\"size\"),   active = TRUE,   selected = FALSE,   xlabel,   ylabel,   zlabel,   title,   showLabels = TRUE,   showScales = FALSE,   showGuides = TRUE,   guidelines = l_getOption(\"guidelines\"),   guidesBackground = l_getOption(\"guidesBackground\"),   foreground = l_getOption(\"foreground\"),   background = l_getOption(\"background\"),   parent = NULL,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"x x, y z arguments provide x, y z coordinates plot.          reasonable way defining coordinates acceptable.          See function xyz.coords details. supplied separately, must length. y y coordinates points plot, optional x appropriate structure. z z coordinates points plot, optional x appropriate structure. ... named arguments modify plot states. axisScaleFactor amount scale axes centre rotation. Default 1.     numerical values acceptable (0 removes axes, < 0 inverts direction     axes.) loon plot can separated variables multiple panels. argument can take formula, n dimensional state names (see l_nDimStateNames) n-dimensional vector data.frame list lengths n input. x formula, optional data frame containing variables x . variables found data, taken environment, typically environment function called. layout layout facets 'grid', 'wrap' 'separate' connectedScales Determines scales facets connected depending layout used.  value layout, scales connected follows: layout = \"wrap\":  Across facets, connectedScales \"x\",  \"x\"  scales connected \"y\", \"y\" scales connected \"\",  \"x\" \"y\" scales connected \"none\",  neither \"x\" \"y\" scales connected.    value, \"y\" scale connected. layout = \"grid\":  Across facets, connectedScales \"cross\", scales row column connected \"row\", \"x\" \"y\" scales facets row connected \"column\", \"x\" \"y\" scales facets column connected \"x\", \"x\"  scales connected (regardless column) \"y\", \"y\" scales connected (regardless row) \"\",  \"x\" \"y\" scales connected facets \"none\",  neither \"x\" \"y\" scales connected facets. color colours points; colours repeated matching number points. Default found using l_getOption(\"color\"). glyph visual representation point. Argument values can string names primitive glyphs: circles: \"circle\", \"ccircle\", \"ocircle\"; squares boxes: \"square\", \"csquare\", \"osquare\"; triangles: \"triangle\", \"ctriangle\", \"otriangle\"; diamonds: \"diamond\", \"cdiamond\", \"odiamond\". string names constructed glyphs: text glyphs: see l_glyph_add_text() point ranges: see l_glyph_add_pointrange() polygons: see l_glyph_add_polygon() parallel coordinates: see l_glyph_add_serialaxes() star radial axes: see l_glyph_add_serialaxes() plot created using R: see l_make_glyphs() size size symbol (roughly terms area). Default found using l_getOption(\"size\"). active logical determining whether points appear (default TRUE points). logical vector given length equal number points, identifies points appear (TRUE) (FALSE). selected logical determining whether points appear selected first (default FALSE points). logical vector given length equal number points, identifies points (TRUE) (FALSE). xlabel Label horizontal (x) axis. missing, one inferred x possible. ylabel Label vertical (y) axis. missing, one inferred y (x) possible. zlabel Label third (perpendicular screen) (z) axis. missing, one inferred z (x) possible. title Title plot, default empty string. showLabels logical determine whether axes label (title) presented. showScales logical determine whether numerical scales presented axes. showGuides logical determine whether present background guidelines help determine locations. guidelines colour guidelines shown showGuides = TRUE. Default found using l_getOption(\"guidelines\"). guidesBackground colour background guidelines shown showGuides = TRUE. Default found using l_getOption(\"guidesBackground\"). foreground foreground colour used drawing. Default found using l_getOption(\"foreground\"). background background colour used plot. Default found using l_getOption(\"background\"). parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"argument set, loon widget returned; else l_facet object (list) returned element loon widget displaying subset interest.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"general direct manipulation interaction gestures   outlined following figures. Rotating Press 'R' toggle rotation mode.   rotation mode active, either use mouse gestures arrow keys rotate plot.  centre rotation can changed panning plot.   reset rotation, use tripod icon plot inspector. Zooming Panning  Selecting Points/Objects  Moving Points Scatterplot Display  NOTE: Although possible programmatically add layers l_plot3D,   appear part 3D plot's display. provision present incorporate   rotation 3D geometric objects point glyphs. scatterplot displays number direct interactions   mouse keyboard, include: rotating, zooming towards mouse cursor using   mouse wheel, panning right-click dragging various selection   methods using left mouse button sweeping, brushing   individual point selection. See documentation l_plot3D   details interaction gestures.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive loon 3d plot widget — l_plot3D","text":"","code":"if(interactive()){  with(quakes,      l_plot3D(long, lat, depth, linkingGroup = \"quakes\") )   with(l_scale3D(quakes),      l_plot3D(long, lat, depth, linkingGroup = \"quakes\") )  scaled_quakes <- l_scale3D(quakes) with(scaled_quakes,      l_plot3D(long, lat, depth, linkingGroup = \"quakes\") )  with(scaled_quakes,      l_plot3D(mag, stations, depth, linkingGroup = \"quakes\") )  # Or together: with(scaled_quakes,{      l_plot3D(long, lat, depth, linkingGroup = \"quakes\")      l_plot3D(mag, stations, depth, linkingGroup = \"quakes\")      } )  } if(interactive()){  # default use as scatterplot  p1 <- with(quakes,            l_plot3D(long, lat, depth)            )  p2 <- with(quakes,            l_plot3D(mag, stations, depth)            )  # link the two plots p1 and p2 l_configure(p1, linkingGroup = \"quakes\", sync = \"push\") l_configure(p2, linkingGroup = \"quakes\", sync = \"push\")  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Arguments common to l_plot functions — l_plot_arguments","title":"Arguments common to l_plot functions — l_plot_arguments","text":"Like plot R, l_plot generic plotting function objects loon. workhorse loon often key part many displays (e.g. l_pairs l_navgraph) plots loon interactive, functions create many arguments common.  value arguments become `infostates` plot instantiated.  can accessed set using usual R square bracket operators `[]`  `[]<-` using statename string.  state names can found instantiated loon plot either via l_info_states() , keeping R programming style, via names() (uses method names.loon() loon objects). state names can passed arguments values l_plot() call. arguments many common ones desribed .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arguments common to l_plot functions — l_plot_arguments","text":"interactive displays permit number direct interactions using     mouse keyboard, include: zooming towards mouse cursor using     mouse wheel, panning right-click dragging various selection     methods using left mouse button sweeping, brushing     individual point selection. See documentation l_plot     details interaction gestures.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arguments common to l_plot functions — l_plot_arguments","text":"x x y arguments provide x y coordinates plot.  reasonable way defining coordinates acceptable.  See function xy.coords details.  supplied separately, must length. y argument description x argument . loon plots can separated variables multiple panels. argument can take formula, n dimensional state names (see l_nDimStateNames) n-dimensional vector data.frame list lengths n input. x y formula, optional data frame containing variables x . variables found data, taken environment, typically environment function called. layout layout facets 'grid', 'wrap' 'separate' connectedScales Determines scales facets connected depending layout used. linkingGroup string naming group plots linked.     plots linkingGroup values     linked states (see l_getLinkedStates()     l_setLinkedStates()). linkingKey n-dimensional character vector unique entries.     entries identify points match points plots.     Default c(\"0\", \"1\", ..., \"n-1\") (numerical n). itemLabel n-dimensional character vector whose values     displayed pop-box point whenever mouse hovers     point (provided showItemLabels = TRUE). action commonly known providing \"tool tip\".     Note objects drawn layer plot (e.g. maps) itemLabel. showItemLabels logical (default FALSE) indicates     whether \"tool tip\" itemLabel displayed whenever     mouse hovers . color colours points (default \"grey60\"); colours repeated matching number points, glyph string names primitive glyphs: squares boxes \"square\", \"csquare\", \"osquare\", triangles \"triangle\", \"ctriangle\", \"otriangle\", diamonds \"diamond\", \"cdiamond\", \"odiamond\".  string names constructed glyphs text glyphs see l_glyph_add_text() point ranges see l_glyph_add_pointrange() polygons see l_glyph_add_polygon() parallel coordinates see l_glyph_add_serialaxes() star radial axes see l_glyph_add_serialaxes() plot created using R see l_make_glyphs()   size size symbol (roughly terms area) active logical determining whether points appear         (default TRUE points). logical vector given length         equal number points, identifies points appear (TRUE)         (FALSE). selected logical determining whether points appear selected first         (default FALSE points). logical vector given length         equal number points, identifies points (TRUE)         (FALSE). xlabel Label horizontal (x) axis. missing,         one inferred x possible. ylabel Label vertical (y) axis. missing,         one inferred y (x) possible. title Title plot, default empty string. minimumMargins minimal size (pixels) margins around plot (bottom, left, top, right) showLabels logical determine whether axes label (title)         presented. showScales logical determine whether numerical scales         presented axes. showGuides logical determine whether present background guidelines         help determine locations. guidelines colour guidelines shown showGuides = TRUE (default \"white\"). guidesBackground colour background guidelines shown         showGuides = TRUE (default \"grey92\"). foreground foreground colour used drawing (default \"black\"). background background colour used plot (default \"white\") parent valid Tk parent widget path. parent widget         specified (.e. NULL) plot widget needs placed using         geometry manager like tkpack tkplace         order displayed. See examples . ... named arguments modify plot states.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arguments common to l_plot functions — l_plot_arguments","text":"","code":"if (FALSE) { # \\dontrun{     # default use as scatterplot      p1 <- with(iris, l_plot(x = Sepal.Length,                             y = Sepal.Width,                             color=Species,                             title = \"Sepal sizes\"))      # The names of the info states that can be     # accessed or set.  They can also be given values as     # arguments to l_plot.default()     names(p1)     versicolor <- (iris$Species == \"versicolor\")     p1[\"size\"] <- 10     p1[\"glyph\"][versicolor]<- \"csquare\"     p1[\"minimumMargins\"][1] <- 100   } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Scatterplot Inspector — l_plot_inspector","title":"Create a Scatterplot Inspector — l_plot_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Scatterplot Inspector — l_plot_inspector","text":"","code":"l_plot_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Scatterplot Inspector — l_plot_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Scatterplot Inspector — l_plot_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Scatterplot Inspector — l_plot_inspector","text":"","code":"if(interactive()){  i <- l_plot_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","title":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","text":"","code":"l_plot_inspector_analysis(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_inspector_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Scatterplot Analysis Inspector — l_plot_inspector_analysis","text":"","code":"if(interactive()){  i <- l_plot_inspector_analysis() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a decomposed time series loon plot — l_plot_ts","title":"Draw a decomposed time series loon plot — l_plot_ts","text":"l_plot_ts generic function creating decomposed time series plot. mainly used l_plot.decomposed.ts l_plot.stl","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a decomposed time series loon plot — l_plot_ts","text":"","code":"l_plot_ts(   x,   color = l_getOption(\"color\"),   size = l_getOption(\"size\"),   linecolor = l_getOption(\"color\"),   linewidth = l_getOption(\"linewidth\"),   xlabel = NULL,   ylabel = NULL,   title = NULL,   tk_title = NULL,   linkingGroup,   showScales = TRUE,   showGuides = TRUE,   showLabels = TRUE,   call = match.call(),   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a decomposed time series loon plot — l_plot_ts","text":"x Either stl object decomposed.ts object. color points colour time series. Default given l_getOption(\"color\"). size points size time series. Default given l_getOption(\"size\"). linecolor line colour time series. Default given l_getOption(\"color\"). linewidth line width time series (incl. original decomposed components. Default given l_getOption(\"linewidth\"). xlabel labels x axes.  length four character vector one : original time series, trend component, seasonality component, remainder. length 1, label repeated; NULL, xlabel \"time\". ylabel labels vertical axes.  length four character vector one : original time series, trend component, seasonality component, remainder. NULL, default, ylabel c(\"data\", \"trend\", \"seasonality\", \"remainder\"); character vector length 1, label repeated four times. title overall title entire display. NULL (default), title \"Seasonal Trend Analysis\". tk_title provides alternative window name Tk's wm title.  NULL, stl used. linkingGroup name linking group. missing, one created data name class associated stlOrDecomposedTS. showScales logical whether display scales axes, default TRUE. showGuides logical whether display background guide lines plots, default TRUE. showLabels logical whether display axes labels plots, default TRUE. call call specified arguments specified full names ... keyword value pairs passed l_plot() constructs loon scatterplot component.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_plot_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a decomposed time series loon plot — l_plot_ts","text":"structure class \"l_ts\" containing four loon plots representing part decomposition name: \"original\", \"trend\", \"seasonal\", \"remainder\".","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Prediction — l_predict","title":"Model Prediction — l_predict","text":"entirely purpose plotting fits intervals scatterplot (histogram). generic function predict models loon smooth layer (wrap function predict). However, output unified.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Prediction — l_predict","text":"","code":"l_predict(model, ...)  # Default S3 method l_predict(model, ...)  # S3 method for class 'lm' l_predict(   model,   newdata = NULL,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   ... )  # S3 method for class 'nls' l_predict(   model,   newdata = NULL,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   ... )  # S3 method for class 'glm' l_predict(   model,   newdata = NULL,   interval = c(\"none\", \"confidence\"),   level = 0.95,   ... )  # S3 method for class 'loess' l_predict(   model,   newdata = NULL,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Prediction — l_predict","text":"model model object prediction desired ... arguments passed predict newdata optionally, data frame look variables predict. omitted, fitted linear predictors used. interval type interval, \"none\", \"confidence\" \"prediction\" (glm) level confidence level","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Prediction — l_predict","text":"data frame returned x (newdata given) y. interval none, two columns, lower (lower interval) upper (upper interval) returned.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Prediction — l_predict","text":"","code":"y <- rnorm(10) x <- rnorm(10) model1 <- lm(y ~ x) # formal output pre <- l_predict(model1, newdata = data.frame(x = sort(x)),                  interval = \"conf\") head(pre) #>             x            y      lower     upper #> 1 -1.47615111 -0.193835067 -1.7666154 1.3789453 #> 2 -1.26047622 -0.159577084 -1.5549521 1.2357979 #> 3 -0.82054972 -0.089698785 -1.1650372 0.9856396 #> 4 -0.22545194  0.004827053 -0.8269545 0.8366086 #> 5 -0.11465603  0.022425969 -0.8035391 0.8483910 #> 6 -0.08441358  0.027229706 -0.7996783 0.8541377  if(interactive()) { p <- with(cars, l_plot(speed, dist))  # Example taken from # https://stackoverflow.com/questions/23852505/how-to-get-confidence-interval-for-smooth-spline # l_predict.smooth.spline <- function(model, interval = c(\"confidence\", \"none\"),                                     level = 0.95, ...) { # confidence interval of `smooth.spline`   interval <- match.arg(interval)    res <- (model$yin - model$y)/(1 - model$lev)     # jackknife residuals   sigma <- sqrt(var(res))                          # estimate sd   std <- stats::qnorm(level / 2 + 0.5)   upper <- model$y + std * sigma * sqrt(model$lev) # upper 95% conf. band   lower <- model$y - std * sigma * sqrt(model$lev) # lower 95% conf. band    data.frame(y = model$yin, lower = lower, upper = upper) } l <- l_layer_smooth(p, method = \"smooth.spline\", interval = \"confidence\") }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_primitiveGlyphs.html","id":null,"dir":"Reference","previous_headings":"","what":"The primitive glyphs available to a scatterplot or graph display — l_primitiveGlyphs","title":"The primitive glyphs available to a scatterplot or graph display — l_primitiveGlyphs","text":"Returns vector available primitive glyphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_primitiveGlyphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The primitive glyphs available to a scatterplot or graph display — l_primitiveGlyphs","text":"","code":"l_primitiveGlyphs()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_primitiveGlyphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The primitive glyphs available to a scatterplot or graph display — l_primitiveGlyphs","text":"character vector names primitive glyphs loon.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_primitiveGlyphs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The primitive glyphs available to a scatterplot or graph display — l_primitiveGlyphs","text":"scatterplot graph displays n-dimensional state   'glyph' assigns data point graph node glyph (.e. visual representation). Loon distinguishes primitive non-primitive glyphs: primitive glyphs always available use whereas non-primitive glyphs need first specified added plot can used. primitive glyphs :  information run: l_help(\"learn_R_display_plot.html#glyphs\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_redraw.html","id":null,"dir":"Reference","previous_headings":"","what":"Force a Content Redraw of a Plot — l_redraw","title":"Force a Content Redraw of a Plot — l_redraw","text":"Force redraw plot make sure visual elements   placed correctly.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_redraw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force a Content Redraw of a Plot — l_redraw","text":"","code":"l_redraw(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_redraw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force a Content Redraw of a Plot — l_redraw","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_redraw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Force a Content Redraw of a Plot — l_redraw","text":"Note function intended debugging. find   display display data according plot states   please contact loon's package maintainer.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_redraw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Force a Content Redraw of a Plot — l_redraw","text":"","code":"if(interactive()){  p <- l_plot(iris) l_redraw(p)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize Plot Widget — l_resize","title":"Resize Plot Widget — l_resize","text":"Resizes toplevel widget specific size.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize Plot Widget — l_resize","text":"","code":"l_resize(widget, width, height)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize Plot Widget — l_resize","text":"widget widget path string object handle width width pixels height pixels","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_resize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize Plot Widget — l_resize","text":"","code":"if(interactive()){  p <- l_plot(iris)  l_resize(p, 300, 300) l_size(p) <- c(500, 500)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_saveStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the info states of a loon plot widget in a file — l_saveStates","title":"Save the info states of a loon plot widget in a file — l_saveStates","text":"l_saveStates uses saveRDS() save info states loon plot R object named file. helpful, example, using RMarkdown notebooking facility recreate earlier saved loon plot present document.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_saveStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the info states of a loon plot widget in a file — l_saveStates","text":"","code":"l_saveStates(   p,   states = c(\"color\", \"active\", \"selected\", \"linkingKey\", \"linkingGroup\"),   file = stop(\"missing name of file\"),   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_saveStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the info states of a loon plot widget in a file — l_saveStates","text":"p `l_plot` object whose info states saved. states either logical `TRUE` character vector info states saved. Default value `c(\"color\", \"active\", \"selected\", \"linkingKey\", \"linkingGroup\")` consists `n` dimensional states common many `l_plot`s important reconstruct plot's display summary. `states` logical `TRUE`, `names(p)` saved. file string giving file name saved information' written (custom suggests file name end suffix `.rds`. ... arguments passed saveRDS().","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_saveStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the info states of a loon plot widget in a file — l_saveStates","text":"list class `l_savedStates` containing states values. Also attribute `l_plot_class` contains class vector plot `p`","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_saveStates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the info states of a loon plot widget in a file — l_saveStates","text":"","code":"if(interactive()){ # # Suppose you have some plot that you created like p <- l_plot(iris, showGuides = TRUE) # # and coloured groups by hand (using the mouse and inspector) # so that you ended up with these colours: p[\"color\"] <- rep(c( \"lightgreen\", \"firebrick\",\"skyblue\"),                   each = 50) # # Having determined the colours you could save them (and other states) # in a file of your choice, here some tempfile: myFileName <- tempfile(\"myPlot\", fileext = \".rds\") # # Save the named states of p l_saveStates(p,              states = c(\"color\", \"active\", \"selected\"),              file = myFileName) # # These can later be retrieved and used on a new plot # (say in RMarkdown) to set the new plot's values to those # previously determined interactively. p_new <- l_plot(iris, showGuides = TRUE) p_saved_info <- l_getSavedStates(myFileName) # # We can tell what kind of plot was saved attr(p_saved_info, \"l_plot_class\") # # The result is a list of class \"l_savedStates\" which # contains the names of the p_new[\"color\"] <- p_saved_info$color # # The result is that p_new looks like p did # (after your interactive exploration) # and can now be plotted as part of the document plot(p_new) # # For compound plots, the info_states are saved for each plot pp <- l_pairs(iris) myPairsFile <- tempfile(\"myPairsPlot\", fileext = \".rds\") # # Save the names states of pp l_saveStates(pp,              states = c(\"color\", \"active\", \"selected\"),              file = myPairsFile) pairs_info <-  l_getSavedStates(myPairsFile) # # For compound plots, the info states for all constitutent # plots are saved.  The result is a list of class \"l_savedStates\" # whose elements are the named plots as \"l_savedStates\" # themselves. # # The names of the plots which were saved names(pairs_info) # # And the names of the info states whose values were saved for # the first plot names(pairs_info$x2y1) # # While it is generally recommended to access (or assign) saved # state values using the $ sign accessor, paying attention to the # nested list structure of an \"l_savedStates\" object (especially for # l_compound plots), R's square bracket notation [] has also been # specialized to allow a syntactically simpler (but less precise) # access to the contents of an l_savedStates object. # # For example, p_saved_info[\"color\"] # # returns the saved \"color\" as a vector of colours. # # In contrast, pairs_info[\"x2y1\"] # returns the l_savedStates object of the states of the plot named \"x2y1\", # but pairs_info[\"color\"] # returns a LIST of colour vectors, by plot as they were named in pairs_info # # As a consequence, the following two are equivalent, pairs_info[\"x2y1\"][\"color\"] # finds the value of \"color\" from an \"l_savedStates\" object # whereas pairs_info[\"color\"][[\"x2y1\"]] # finds the value of \"x2y1\" from a \"list\" object # # Also, setting a state of an \"l_savedStates\" is possible # (though not generally recommended; better to save the states again) # p_saved_info[\"color\"] <- rep(\"red\", 150) # changes the saved state \"color\" on p_saved_info # whereas pairs_info[\"color\"] <- rep(\"red\", 150) # will set the red color for any plot within pairs_info having \"color\" saved. # In this way the assignment function via [] is trying to be clever # for l_savedStates for compound plots and so may have unintentional # consequences if the user is not careful.  # Generally, one does not want/need to change the value of saved states. # Instead, the states would be saved again from the interactive plot # if change is necessary. # Alternatively, more nuanced and careful control is maintained using # the $ selectors for lists. }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scale3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale for 3d plotting — l_scale3D","title":"Scale for 3d plotting — l_scale3D","text":"l_scale3D scales argument variety ways used 3D visualization.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scale3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale for 3d plotting — l_scale3D","text":"","code":"l_scale3D(x, center = TRUE, method = c(\"box\", \"sphere\"))"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scale3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale for 3d plotting — l_scale3D","text":"x matrix data.frame whose columns scaled. NA entries preserved ignored calculations. x must exactly 3 columns method = \"sphere\". center either logical value numeric-alike vector length equal number columns x, ‘numeric-alike’ means .numeric(.) applied successfully .numeric(.) true. method scaling method use. method = \"box\" (default) columns scaled equal ranges , center = TRUE, centred average min max; method = \"sphere\" x must three dimensional. sphering, original 3 dimensions x first centred (mean centred center = TRUE) scaled equal standard deviation . V matrix singular value decomposition (svd) applied right resulting uncorrelated variables. Coordinates divided (non-zero tested !.equal(0, .)) singular values. x contains NAs, resulting coordinates simply U matrix svd.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scale3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale for 3d plotting — l_scale3D","text":"data.frame whose columns centred scaled according given arguments. method = \"sphere\"), three variable names x1,  x2,  x3.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_scale3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale for 3d plotting — l_scale3D","text":"","code":"##### Iris data # # All variables (including Species as a factor) result_box <- l_scale3D(iris) head(result_box, n = 3) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1   -0.2777778  0.12500000   -0.4322034  -0.4583333    -0.5 #> 2   -0.3333333 -0.08333333   -0.4322034  -0.4583333    -0.5 #> 3   -0.3888889  0.00000000   -0.4491525  -0.4583333    -0.5 apply(result_box, 2, FUN = range) #>      Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> [1,]         -0.5        -0.5         -0.5        -0.5    -0.5 #> [2,]          0.5         0.5          0.5         0.5     0.5 # Note mean is not zero. apply(result_box, 2, FUN = mean) #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species  #>  -0.07129630  -0.05944444  -0.03254237  -0.04194444   0.00000000    # Sphering only on 3D data. result_sphere <- l_scale3D(iris[, 1:3], method = \"sphere\") head(result_sphere, n = 3) #>            x1          x2           x3 #> 1 -0.10665359 -0.03635358 -0.039744517 #> 2 -0.09153699  0.06124692 -0.080344512 #> 3 -0.11208702  0.03517574 -0.009633385 apply(result_sphere, 2, FUN = range) #>              x1         x2         x3 #> [1,] -0.1423020 -0.2338372 -0.1627308 #> [2,]  0.1737036  0.2262592  0.2203348 # Note mean is numerically zero. apply(result_sphere, 2, FUN = mean) #>            x1            x2            x3  #> -1.854727e-17  3.437837e-18  1.035964e-16    #  With NAs x <- iris x[c(1, 3), 1] <- NA x[2, 3] <- NA  result_box <- l_scale3D(x) head(result_box, n = 5) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1           NA  0.12500000   -0.4322034  -0.4583333    -0.5 #> 2   -0.3333333 -0.08333333           NA  -0.4583333    -0.5 #> 3           NA  0.00000000   -0.4491525  -0.4583333    -0.5 #> 4   -0.4166667 -0.04166667   -0.4152542  -0.4583333    -0.5 #> 5   -0.3055556  0.16666667   -0.4322034  -0.4583333    -0.5 apply(result_box, 2, FUN = function(x) {range(x, na.rm = TRUE)}) #>      Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> [1,]         -0.5        -0.5         -0.5        -0.5    -0.5 #> [2,]          0.5         0.5          0.5         0.5     0.5  # Sphering only on 3D data. result_sphere <- l_scale3D(x[, 1:3], method = \"sphere\") # Rows having had any NA are all NA after sphering. head(result_sphere, n = 5) #>           x1          x2          x3 #> 1         NA          NA          NA #> 2         NA          NA          NA #> 3         NA          NA          NA #> 4 -0.1097604 -0.05847447 0.021141688 #> 5 -0.1188225  0.04803699 0.001622979 # Note with NAs mean is no longer numerically zero. # because centring was based on all non-NAs in each column apply(result_sphere, 2, FUN = function(x) {mean(x, na.rm = TRUE)}) #>            x1            x2            x3  #>  0.0012171739 -0.0002142758  0.0019700846"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Plot Region to Display All Active Data — l_scaleto_active","title":"Change Plot Region to Display All Active Data — l_scaleto_active","text":"function modifies zoomX, zoomY,   panX, panY active data points displayed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Plot Region to Display All Active Data — l_scaleto_active","text":"","code":"l_scaleto_active(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Plot Region to Display All Active Data — l_scaleto_active","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Plot Region to Display All Elements of a Particular Layer — l_scaleto_layer","title":"Change Plot Region to Display All Elements of a Particular Layer — l_scaleto_layer","text":"function modifies zoomX, zoomY,   panX, panY elements particular layer   displayed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Plot Region to Display All Elements of a Particular Layer — l_scaleto_layer","text":"","code":"l_scaleto_layer(target, layer)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Plot Region to Display All Elements of a Particular Layer — l_scaleto_layer","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. layer layer id","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Plot Region to Display the All Data of the Model Layer — l_scaleto_plot","title":"Change Plot Region to Display the All Data of the Model Layer — l_scaleto_plot","text":"function modifies zoomX, zoomY,   panX, panY elements model layer   plot displayed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Plot Region to Display the All Data of the Model Layer — l_scaleto_plot","text":"","code":"l_scaleto_plot(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Plot Region to Display the All Data of the Model Layer — l_scaleto_plot","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_selected.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Plot Region to Display All Selected Data — l_scaleto_selected","title":"Change Plot Region to Display All Selected Data — l_scaleto_selected","text":"function modifies zoomX, zoomY,   panX, panY selected data points   displayed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_selected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Plot Region to Display All Selected Data — l_scaleto_selected","text":"","code":"l_scaleto_selected(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_selected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Plot Region to Display All Selected Data — l_scaleto_selected","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Plot Region to Display All Plot Data — l_scaleto_world","title":"Change Plot Region to Display All Plot Data — l_scaleto_world","text":"function modifies zoomX, zoomY,   panX, panY elements plot   displayed.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Plot Region to Display All Plot Data — l_scaleto_world","text":"","code":"l_scaleto_world(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_scaleto_world.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Plot Region to Display All Plot Data — l_scaleto_world","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"l_serialaxes generic function displaying multivariate data either stacked star glyph plot, parallel coordinate plot.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"","code":"l_serialaxes(data, ...)  # Default S3 method l_serialaxes(   data,   sequence,   scaling = \"variable\",   axesLayout = \"radial\",   by = NULL,   on,   layout = c(\"grid\", \"wrap\", \"separate\"),   andrews = FALSE,   showAxes = TRUE,   color = l_getOption(\"color\"),   active = TRUE,   selected = FALSE,   linewidth = l_getOption(\"linewidth\"),   parent = NULL,   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"data data frame numerical data ... named arguments modify serialaxes states layouts, see details. sequence vector variable names defines axes sequence scaling one 'variable', 'data', 'observation' 'none' specify data scaled. See Details Examples information. axesLayout either \"radial\" \"parallel\" loon plot can separated variables multiple panels. argument can take formula, n dimensional state names (see l_nDimStateNames) n-dimensional vector data.frame list lengths n input. x formula, optional data frame containing variables x . variables found data, taken environment, typically environment function called. layout layout facets 'grid', 'wrap' 'separate' andrews Andrew's plot ('Fourier' transformation) showAxes boolean indicate whether axes shown color vector line colors. Default given l_getOption(\"color\"). active logical determining whether points appear (default TRUE points). logical vector given length equal number points, identifies points appear (TRUE) (FALSE). selected logical determining whether points appear selected first (default FALSE points). logical vector given length equal number points, identifies points (TRUE) (FALSE). linewidth vector line widths. Default given l_getOption(\"linewidth\"). parent valid Tk parent widget path. parent widget specified (.e. NULL) plot widget needs placed using geometry manager like tkpack tkplace order displayed. See examples .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"argument set, loon widget returned; else l_facet object (list) returned element loon widget displaying subset interest.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"information run: l_help(\"learn_R_display_hist\") scaling state defines data scaled. axes   display 0 one end 1 . following explanation   assume data nxp dimensional matrix. scaling options   arguments modify layouts can passed ,   e.g. \"separate\", \"byrow\", etc.   Check l_facet see arguments work.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive serialaxes (parallel axes or radial axes) plot — l_serialaxes","text":"","code":"if(interactive()){  ####### # # Effect of the choice of the argument \"scaling\" # # To illustrate we will look at the four measurements of # 150 iris flowers from the iris data of Edgar Anderson made # famous by R.A. Fisher. # # First separate the measurements irisFlowers <- iris[, 1:4] # from their species species <- iris[,5] # and get some identifiers for the individual flowers flowerIDs <- paste(species, 1:50) # # Now create parallel axes plots of the measurements # using different scaling values.  # # scaling = \"variable\" # # This is the standard scaling of most serial axes plots, # scaling each axis from the minimum to the maximum of that variable. # Hence it is the default scaling. # # More precisely, it maps the minimum value in each column (variable) to # zero and the maximum to one.  The result is every parallel # axis will have a point at 0 and a point at 1. # # This scaling highlights the relationships (e.g. correlations) # between the variables (removes the effect of the location and scale of # each variable). # # For the iris data, ignoring species we see for example that # Sepal.Length and Sepal.Width are negatively correlated (lots of # crossings) across species but more positively correlated (mostly # parallel lines) within each species (colour). # sa_var <- l_serialaxes(irisFlowers,                        scaling = \"variable\",    # scale within column                        axesLayout = \"parallel\",                        color = species,                        linewidth = 2,                        itemLabel = flowerIDs,                        showItemLabels = TRUE,                        title = \"scaling = variable (initially)\",                        linkingGroup = \"irisFlowers data\")  # # scaling = \"observation\" # # This maps the minimum value in each row (observation) to # zero and the maximum value in each row to one. # # The result is that every observation (curve in the parallel # coordinate plot) will touch 0 on at least one axis and touch # 1 on another. # # This scaling highlights the differences between observations (rows) # in terms of the relative measurements across the variables for each # observation. # # For example, for the iris data we can see that for every flower (row) # the Sepal.Length is the largest measurement and the Petal.Width # is the smallest.  Each curve gives some sense of the *shape* of each # flower without regard to its size.  Two species (versicolor and # virginica) have similar shaped flowers (relatively long but narrow # sepals and petals), whereas the third (setosa) has relatively large # sepals compared to small petals. # sa_obs <- l_serialaxes(irisFlowers,                        scaling = \"observation\", # scale within row                        axesLayout = \"parallel\",                        color = species,                        linewidth = 2,                        itemLabel = flowerIDs,                        showItemLabels = TRUE,                        title = \"scaling = observation (initially)\",                        linkingGroup = \"irisFlowers data\")  # # scaling = \"data\" # # This maps the minimum value in the whole dataset (over all elements) # to zero and the maximum value in the whole dataset to one. # # The result is that every measurement is on the same numeric (if not # measurement) scale.  Highlighting the relative magnitudes of all # numerical values in the data set, each curve shows the relative magnitudes # without rescaling by variable. # # This is most sensible data such as the iris flower where all four measurements # appear to have been taken on the same measuring scale. # # For example, for the iris data full data scaling preserves the size # and shape of each flower.  Again virginica is of roughly the same # shape as versicolor but has distinctly larger petals. # Setosa in contrast is quite differently shaped in both sepals and petals # but with sepals more similar in size to the two other flowers and # with significantly smaller petals. sa_dat <- l_serialaxes(irisFlowers,                        scaling = \"data\",        # scale using all data                        axesLayout = \"parallel\",                        color = species,                        linewidth = 2,                        itemLabel = flowerIDs,                        showItemLabels = TRUE,                        title = \"scaling = data (initially)\",                        linkingGroup = \"irisFlowers data\")  # #  scaling = \"none\" # #  Sometimes we might wish to choose a min and max to use #  for the whole data set; or perhaps a separate min and max #  for each variable.  #  This would be done outside of the construction of the plot #  and displayed by having scaling = \"none\" in the plot. # #  For example, for the iris data, we might choose scales so that #  the minimum and the maximum values within the data set do not #  appear at the end points 0 and 1 of the axes but instead inside. # #  Suppose we choose the following limits for all variables lower_lim <- -3 ; upper_lim <- max(irisFlowers) + 1  #  These are the limits we want to use to define the end points of #  the axes for all variables. #  We need only scale the data as irisFlowers_0_1 <- (irisFlowers - lower_lim)/(upper_lim - lower_lim) #  Or alternatively using the built-in scale function #  (which allows different scaling for each variable) irisFlowers_0_1 <- scale(irisFlowers,                          center = rep(lower_lim, 4),                          scale = rep((upper_lim - lower_lim), 4))  # Different scales for different # And instruct the plot to not scale the data but plot it on the 0-1 scale # for all axes.  (Note any rescaled date outside of [0,1] will not appear.) # sa_none <- l_serialaxes(irisFlowers_0_1,                         scaling = \"none\",        # do not scale                         axesLayout = \"parallel\",                         color = species,                         linewidth = 2,                         itemLabel = flowerIDs,                         showItemLabels = TRUE,                         title = \"scaling = none (initially)\",                         linkingGroup = \"irisFlowers data\")  # This is particularly useful for \"radial\" axes to keep the polygons away from # the centre of the display. # For example sa_none[\"axesLayout\"] <- \"radial\" # now displays each flower as a polygon where shapes and sizes are easily # compared. # #  NOTE: rescaling the data so that all values are within [0,1] is perhaps #        the best way to proceed (especially if there are natural lower and #        upper limits for each variable). #        Then scaling can always be changed via the inspector.  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes_inspector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Serialaxes Inspector — l_serialaxes_inspector","title":"Create a Serialaxes Inspector — l_serialaxes_inspector","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes_inspector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Serialaxes Inspector — l_serialaxes_inspector","text":"","code":"l_serialaxes_inspector(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes_inspector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Serialaxes Inspector — l_serialaxes_inspector","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes_inspector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Serialaxes Inspector — l_serialaxes_inspector","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_serialaxes_inspector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Serialaxes Inspector — l_serialaxes_inspector","text":"","code":"if(interactive()){  i <- l_serialaxes_inspector() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setAspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the aspect ratio of a plot — l_setAspect","title":"Set the aspect ratio of a plot — l_setAspect","text":"aspect ratio defined ratio number pixels   one data unit y axis number pixels one data unit   x axes.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setAspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the aspect ratio of a plot — l_setAspect","text":"","code":"l_setAspect(widget, aspect, x, y)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setAspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the aspect ratio of a plot — l_setAspect","text":"widget widget path string object handle aspect aspect ratio, optional, omitted x y arguments specified. x optional, aspect argument missing x y can specified aspect ratio calculted usding y/x. y see description x argument ","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setAspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the aspect ratio of a plot — l_setAspect","text":"","code":"if (FALSE) { # \\dontrun{ p <- with(iris, l_plot(Sepal.Length ~ Sepal.Width, color=Species))  l_aspect(p) l_setAspect(p, x = 1, y = 2) } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList.html","id":null,"dir":"Reference","previous_headings":"","what":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","title":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","text":"Modify loon's color mapping list set custom colors.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","text":"","code":"l_setColorList(colors)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","text":"colors vector valid color names hex-encoded colors","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","text":"two commonly used mapping schemes data values   colors: one scheme maps numeric values colors color gradient   maps nominal data colors can well differentiated   visually (e.g. highlight different groups). Presently, loon always   uses latter approach color mappings. can use specialized   color pallettes map continuous values color gradients shown   examples . assigning values display state type color loon maps   values using following rules  values already represent valid Tk colors (see   tkcolors) colors taken. number distinct values less number values   loon's color mapping list get mapped according color list,   see l_setColorList l_getColorList. distinct values colors loon's color   mapping list loon's color mapping algorithm used. See   loon_palette details algorithm   documentation. Loon's default color list composed first 11 colors   hcl color wheel (displayed html version   documentation). letters hcl stand hue, chroma luminance,   hcl wheel useful finding \"balanced colors\" chroma   (radius) luminance different hues (angles), see Ross Ihaka   (2003) \"Colour presentation graphics\", Proceedings DSC, p. 2   (https://www.stat.auckland.ac.nz/~ihaka/courses/787/color.pdf). colors loon's internal color list also default ones listed   \"modify color actions\" analysis inspectors. query   modify loon's color list use l_getColorList   l_setColorList. case unique data values colors loon's   color list colors mapping taken different   locations distributed hcl color wheel (see ). One advantages using hcl color wheel one can obtain   number \"balanced colors\" distinct hues. useful   encoding data colors large number groups; however,   noted groups closer colors sampled   wheel become , therefore, similar appearance. common way sample distinct \"balanced colors\" hcl wheel   choose evenly spaced hues distributed wheel (.e. angles   wheel). However, approach leads color sets colors change   sample size (.e. number sampled colors wheel)   increases one. loon, desirable first m   colors color sample size m+1 colors   color sample size m, positive natural numbers m.   Hence, prefer sequence colors. way, colors   inspectors stay relevant (.e. match colors data   points) creating plots encode color data variable   different number groups. implemented color sampling scheme (color sequence generator)   also makes sure neighboring colors sequence different   hues. can access color sequence generator   loon_palette. color wheels show color   generating sequence twice, 16 colors 32 colors.  Note, inspector: unique colors data points   inspectors possible add next five   colors sequence colors +5 button.   Alternatively, + button modify color part analysis   inspectors allows user pick additional color color menu.   Also, change color mapping list close re-open loon   inspector new colors show modify color list. color mappings data values required (e.g. numerical data   color gradient) functions scales   R package provide various mappings including mappings qualitative,   diverging sequential values.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use custom colors for mapping nominal values to distinct colors — l_setColorList","text":"","code":"if(interactive()){   l_plot(1:3, color=1:3) # loon's default mapping  cols <- l_getColorList() l_setColorList(c(\"red\", \"blue\", \"green\", \"orange\"))  ## close and reopen inspector  l_plot(1:3, color=1:3)   # use the new color mapping l_plot(1:10, color=1:10) # use loons default color mapping as color list is too small  # reset to default l_setColorList(cols) }  if (FALSE) { # \\dontrun{ # you can also perform the color mapping yourself, for example with # the col_numeric function provided in the scales package if (requireNamespace(\"scales\", quietly = TRUE)) {   p_custom <- with(olive, l_plot(stearic ~ oleic,        color = scales::col_numeric(\"Greens\", domain = NULL)(palmitic)))   } } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ColorBrewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","title":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","text":"Loon's color list used map nominal values colors. See   documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ColorBrewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","text":"","code":"l_setColorList_ColorBrewer(   palette = c(\"Set1\", \"Set2\", \"Set3\", \"Pastel1\", \"Pastel2\", \"Paired\", \"Dark2\", \"Accent\") )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ColorBrewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","text":"palette one following RColorBrewer palette name: Set1, Set2, Set3, Pastel1, Pastel2, Paired, Dark2, Accent","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ColorBrewer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","text":"following palettes ColorBrewer available: Set1,   Set2, Set3, Pastel1, Pastel2, Paired, Dark2, Accent. See examples   .","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ColorBrewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set loon's color mapping list to the colors from ColorBrewer — l_setColorList_ColorBrewer","text":"","code":"if (interactive()){  if (FALSE) { # \\dontrun{ if (requireNamespace(\"RColorBrewer\", quietly = TRUE)) {   RColorBrewer::display.brewer.all() } } # }  l_setColorList_ColorBrewer(\"Set1\") p <- l_plot(iris)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_baseR.html","id":null,"dir":"Reference","previous_headings":"","what":"Set loon's color mapping list to the colors from base R — l_setColorList_baseR","title":"Set loon's color mapping list to the colors from base R — l_setColorList_baseR","text":"Loon's color list used map nominal values colors. See   documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_baseR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set loon's color mapping list to the colors from base R — l_setColorList_baseR","text":"","code":"l_setColorList_baseR()"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Set loon's color mapping list to the colors from ggplot2 — l_setColorList_ggplot2","title":"Set loon's color mapping list to the colors from ggplot2 — l_setColorList_ggplot2","text":"Loon's color list used map nominal values colors. See   documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set loon's color mapping list to the colors from ggplot2 — l_setColorList_ggplot2","text":"","code":"l_setColorList_ggplot2()"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_hcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Set loon's color mapping list to the colors from hcl color wheen — l_setColorList_hcl","title":"Set loon's color mapping list to the colors from hcl color wheen — l_setColorList_hcl","text":"Loon's color list used map nominal values colors. See   documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_hcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set loon's color mapping list to the colors from hcl color wheen — l_setColorList_hcl","text":"","code":"l_setColorList_hcl(chroma = 56, luminance = 51, hue_start = 231)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_hcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set loon's color mapping list to the colors from hcl color wheen — l_setColorList_hcl","text":"chroma chroma color. upper bound chroma depends hue luminance. luminance value range [0,100] giving luminance colour. given combination hue chroma, subset range possible. hue_start start hue sampling. hue color specified angle range [0,360]. 0 yields red, 120 yields green 240 yields blue, etc.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_hcl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set loon's color mapping list to the colors from hcl color wheen — l_setColorList_hcl","text":"Samples equally distant colors hcl color wheel. See   documentation hcl information.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_loon.html","id":null,"dir":"Reference","previous_headings":"","what":"Set loon's color mapping list to the colors from loon defaults — l_setColorList_loon","title":"Set loon's color mapping list to the colors from loon defaults — l_setColorList_loon","text":"Loon's color list used map nominal values colors. See   documentation l_setColorList.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setColorList_loon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set loon's color mapping list to the colors from loon defaults — l_setColorList_loon","text":"","code":"l_setColorList_loon()"},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setLinkedStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify States of a Plot that are Linked in Loon's Standard Linking Model — l_setLinkedStates","title":"Modify States of a Plot that are Linked in Loon's Standard Linking Model — l_setLinkedStates","text":"Loon's standard linking model based three levels,   linkingGroup linkingKey states used   linkable states. See details .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setLinkedStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify States of a Plot that are Linked in Loon's Standard Linking Model — l_setLinkedStates","text":"","code":"l_setLinkedStates(widget, states)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setLinkedStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify States of a Plot that are Linked in Loon's Standard Linking Model — l_setLinkedStates","text":"widget widget path string object handle states used linkable state names, see details ","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setLinkedStates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify States of a Plot that are Linked in Loon's Standard Linking Model — l_setLinkedStates","text":"Loon's standard linking model based two states,   linkingGroup linkingKey. full capabilities   standard linking model described . However, setting   linkingGroup states two displays string   generally needed linking displays plot data   data frame. Changing linking group display also   linking-related action available analysis inspectors. first linking level follows: loon's displays linked   share string linkingGroup state. default   linking group 'none' keyword leaves display un-linked. second linking level follows. n-dimensional states can   linked displays. call states linkable. ,   linkable states name can linked displays. One   consequence shared state name rule ,   standard linking model, linewidth state serialaxes display   linked size state scatterplot display. Also,   display maintains list defines linkable states   used linking; call states used linkable   states. default used linkable states follows  two displays set linked (.e. share linking   group) intersection used linkable states   actually linked. third linking level follows. Every display   n-dimensional linkingKey state. Hence, every data point   associated linking key. Data points linked plots linked   share linking key.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setOption.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the value of a loon display option — l_setOption","title":"Set the value of a loon display option — l_setOption","text":"loon's displays access set common options. function assigns value named option.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setOption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the value of a loon display option — l_setOption","text":"","code":"l_setOption(option, value)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setOption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the value of a loon display option — l_setOption","text":"option name option set value value assigned option.  value == \"default\", option set loon's default value .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setOption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the value of a loon display option — l_setOption","text":"new value","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_setOption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the value of a loon display option — l_setOption","text":"","code":"l_setOption(\"select-color\", \"red\") #> [1] \"red\" l_setOption(\"select-color\", \"default\") #> [1] \"magenta\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setTitleFont.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the title font of all loon displays — l_setTitleFont","title":"Set the title font of all loon displays — l_setTitleFont","text":"loon's displays access set common options. function sets font title bar displays.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setTitleFont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the title font of all loon displays — l_setTitleFont","text":"","code":"l_setTitleFont(size = \"16\", weight = \"bold\", family = \"Helvetica\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_setTitleFont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the title font of all loon displays — l_setTitleFont","text":"size font size. weight font size. family font family.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_setTitleFont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the title font of all loon displays — l_setTitleFont","text":"value named option.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_size-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize Plot Widget — l_size<-","title":"Resize Plot Widget — l_size<-","text":"Resizes toplevel widget specific size. setter   function uses l_resize.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_size-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize Plot Widget — l_size<-","text":"","code":"l_size(widget) <- value"},{"path":"https://great-northern-diver.github.io/loon/reference/l_size-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize Plot Widget — l_size<-","text":"widget widget path string object handle value numeric vector length 2 width height pixels","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_size-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize Plot Widget — l_size<-","text":"","code":"if(interactive()){  p <- l_plot(iris)  l_resize(p, 300, 300) l_size(p) <- c(500, 500)  }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Size of a Plot Display — l_size","title":"Query Size of a Plot Display — l_size","text":"Get width height plot pixels","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Size of a Plot Display — l_size","text":"","code":"l_size(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Size of a Plot Display — l_size","text":"widget widget path string object handle","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Size of a Plot Display — l_size","text":"Vector width width height pixels","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_state_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get State Names of Loon Object — l_state_names","title":"Get State Names of Loon Object — l_state_names","text":"States loon objects can accessed `[` l_cget modified l_configure.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_state_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get State Names of Loon Object — l_state_names","text":"","code":"l_state_names(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_state_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get State Names of Loon Object — l_state_names","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_state_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get State Names of Loon Object — l_state_names","text":"state names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_state_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get State Names of Loon Object — l_state_names","text":"order access values states use l_info_states.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_subwin.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a child widget path — l_subwin","title":"Create a child widget path — l_subwin","text":"function similar .Tk.subwin except   environment \"tkwin\" object keep track numbering   subwidgets. Instead creates widget path (parent).looni,   smallest integer widget exists yet.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_subwin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a child widget path — l_subwin","text":"","code":"l_subwin(parent, name = \"w\")"},{"path":"https://great-northern-diver.github.io/loon/reference/l_subwin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a child widget path — l_subwin","text":"parent parent widget path name child name","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_subwin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a child widget path — l_subwin","text":"widget path name string","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_throwErrorIfNotLoonWidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Throw an error if string is not associated with a loon widget — l_throwErrorIfNotLoonWidget","title":"Throw an error if string is not associated with a loon widget — l_throwErrorIfNotLoonWidget","text":"Helper function ensure widget path associated loon widget.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_throwErrorIfNotLoonWidget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Throw an error if string is not associated with a loon widget — l_throwErrorIfNotLoonWidget","text":"","code":"l_throwErrorIfNotLoonWidget(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_throwErrorIfNotLoonWidget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Throw an error if string is not associated with a loon widget — l_throwErrorIfNotLoonWidget","text":"widget widget path name string","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_throwErrorIfNotLoonWidget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Throw an error if string is not associated with a loon widget — l_throwErrorIfNotLoonWidget","text":"TRUE string associated loon widget, otherwise error thrown.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toR.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Tcl Object to some other R object — l_toR","title":"Convert a Tcl Object to some other R object — l_toR","text":"Return values .Tcl tcl   class tclObj often need mapped different data   structure R. function helper class mapping.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Tcl Object to some other R object — l_toR","text":"","code":"l_toR(x, cast = as.character)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_toR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Tcl Object to some other R object — l_toR","text":"x tclObj object cast function conver object R object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Tcl Object to some other R object — l_toR","text":"object returned function specified   cast argument.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toplevel.html","id":null,"dir":"Reference","previous_headings":"","what":"loon tk top level — l_toplevel","title":"loon tk top level — l_toplevel","text":"Create loon tk top-level window","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toplevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loon tk top level — l_toplevel","text":"","code":"l_toplevel(path)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_toplevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loon tk top level — l_toplevel","text":"path valid path name (character); missing, valid path generated automatically","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toplevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"loon tk top level — l_toplevel","text":"tk top level widget","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_toplevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"loon tk top level — l_toplevel","text":"","code":"if(interactive()) {    tt <- l_toplevel(\".test\")   subwin <- l_subwin(tt, 'ts')   tktitle(tt) <- paste(\"path:\", subwin)   parent <- as.character(tcl('frame', subwin))    # a loon widget   p <- l_plot(rnorm(100), rnorm(100), parent = parent)   # pack a refresh button (generate new data set)   refresh_button <- as.character(      tcltk::tcl('button',                 as.character(l_subwin(parent, 'refresh button')),                 text = \"refresh\",                 bg = \"grey80\",                 fg = \"black\",                 borderwidth = 2,                 relief = \"raised\"))    # layout   tcltk::tkgrid(p,                 row = 0,                 column = 0,                 rowspan = 10,                 columnspan = 10,                 sticky=\"nesw\")    tcltk::tkgrid(refresh_button,                 row = 10,                 column = 0,                 rowspan = 1,                 columnspan = 1,                 sticky=\"nesw\")   for(i in 0:10) {      tcltk::tkgrid.rowconfigure(parent, i, weight=1)   }   for(i in 0:9) {     tcltk::tkgrid.columnconfigure(parent, i, weight=1)   }    update <- function(...) {     l_configure(p,                 x = rnorm(100),                 y = rnorm(100))     l_scaleto_world(p)   }    # configure button (callback function)   tcltk::tkconfigure(refresh_button,                      command = update)   # configure canvas size   tcltk::tkconfigure(paste(p,\".canvas\", sep=''), width=500, height=500)    # pack widgets   tkpack(parent, fill=\"both\", expand=TRUE) }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptionDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Get loon's system default value for the named display option. — l_userOptionDefault","title":"Get loon's system default value for the named display option. — l_userOptionDefault","text":"loon's displays access set common options. function accesses returns default value named option.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptionDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get loon's system default value for the named display option. — l_userOptionDefault","text":"","code":"l_userOptionDefault(option)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptionDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get loon's system default value for the named display option. — l_userOptionDefault","text":"option name user changeable loon display option whose default value determined.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptionDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get loon's system default value for the named display option. — l_userOptionDefault","text":"default value named option","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptionDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get loon's system default value for the named display option. — l_userOptionDefault","text":"","code":"l_userOptionDefault(\"background\") #> [1] \"white\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of all loon display options that can be set by the user. — l_userOptions","title":"Get the names of all loon display options that can be set by the user. — l_userOptions","text":"loon's displays access set common options. function accesses returns names subset loon options can changed user.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of all loon display options that can be set by the user. — l_userOptions","text":"","code":"l_userOptions()"},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of all loon display options that can be set by the user. — l_userOptions","text":"vector user settable option names.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_userOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of all loon display options that can be set by the user. — l_userOptions","text":"","code":"l_userOptions() #>  [1] \"select-color\"       \"background\"         \"foreground\"         #>  [4] \"guidesBackground\"   \"guidelines\"         \"brush_color\"        #>  [7] \"brush_color_handle\" \"glyph\"              \"color\"              #> [10] \"size\"               \"linewidth\""},{"path":"https://great-northern-diver.github.io/loon/reference/l_web.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a browser with loon's R documentation webpage — l_web","title":"Open a browser with loon's R documentation webpage — l_web","text":"l_web opens browser relevant page   official loon documentation website.  constructed joining together   information provided arguments site/package/directory/page. Default documentation found   https://great-northern-diver.github.io/loon/.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_web.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a browser with loon's R documentation webpage — l_web","text":"","code":"l_web(   page = \"index\",   directory = c(\"home\", \"reference\", \"articles\"),   package = c(\"loon\", \"loon.data\", \"loon.ggplot\", \"loon.tourr\", \"ggmulti\", \"zenplots\",     \"loon.shiny\", \"diveR\"),   site = \"https://great-northern-diver.github.io\",   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/l_web.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a browser with loon's R documentation webpage — l_web","text":"page relative path page (\".html\" part may omitted) directory \"home\" (default) page ignored browser open home page official documentation website.  page refers package   manual reference, directory must \"reference\"; page refers name   vignette file, directory \"articles\" package string identifying package name online documentation (default \"loon\"). site URL site (default \"https://great-northern-diver.github.io\") prefixing path requested documentation. ... arguments forwarded browseURL(), e.g. specify browser","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_web.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a browser with loon's R documentation webpage — l_web","text":"","code":"if (FALSE) { # \\dontrun{ l_web() # vignette(\"introduction\", package = \"loon\") # or l_web(page = \"introduction\", directory = \"articles\") # or l_web(package = \"loon.data\", directory = \"reference\") # help(l_hist) l_web(page = \"l_hist\", directory = \"reference\") } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy function to be used in the Roxygen documentation — l_widget","title":"Dummy function to be used in the Roxygen documentation — l_widget","text":"Dummy function used Roxygen documentation","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy function to be used in the Roxygen documentation — l_widget","text":"","code":"l_widget(widget)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy function to be used in the Roxygen documentation — l_widget","text":"widget widget path name string","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy function to be used in the Roxygen documentation — l_widget","text":"widget path name string","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_worldview.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Worldview Inspector — l_worldview","title":"Create a Worldview Inspector — l_worldview","text":"Inpectors provide graphical user interfaces oversee   modify plot states","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_worldview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Worldview Inspector — l_worldview","text":"","code":"l_worldview(parent = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_worldview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Worldview Inspector — l_worldview","text":"parent parent widget path ... state arguments","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_worldview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Worldview Inspector — l_worldview","text":"widget handle","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/l_worldview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Worldview Inspector — l_worldview","text":"","code":"if(interactive()){ i <- l_worldview() }"},{"path":"https://great-northern-diver.github.io/loon/reference/l_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom from and towards the center — l_zoom","title":"Zoom from and towards the center — l_zoom","text":"function changes plot states panX, panY,   zoomX, zoomY zoom towards away center   current view.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/l_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom from and towards the center — l_zoom","text":"","code":"l_zoom(widget, factor = 1.1)"},{"path":"https://great-northern-diver.github.io/loon/reference/l_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom from and towards the center — l_zoom","text":"widget widget path string object handle factor zoom factor","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a linegraph — linegraph","title":"Create a linegraph — linegraph","text":"line graph G, denoted L(G), graph whose nodes   correspond edges G whose edges correspond nodes G   nodes L(G) joined corresponding edges G   adjacent G.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a linegraph — linegraph","text":"","code":"linegraph(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a linegraph — linegraph","text":"x graph class graph loongraph ... arguments passed method","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a linegraph — linegraph","text":"graph object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a linegraph of a graph — linegraph.loongraph","title":"Create a linegraph of a graph — linegraph.loongraph","text":"Create lingraph loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a linegraph of a graph — linegraph.loongraph","text":"","code":"# S3 method for class 'loongraph' linegraph(x, separator = \":\", ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a linegraph of a graph — linegraph.loongraph","text":"x loongraph object separator one character - node names x get concatenated character ... additional arguments used methiod","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a linegraph of a graph — linegraph.loongraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a linegraph of a graph — linegraph.loongraph","text":"linegraph.loongraph needs code part directed graphs (.e.   isDirected=TRUE)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/linegraph.loongraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a linegraph of a graph — linegraph.loongraph","text":"","code":"g <- loongraph(letters[1:4], letters[1:3], letters[2:4], FALSE)  linegraph(g) #> $nodes #> [1] \"a:b\" \"b:c\" \"c:d\" #>  #> $from #> [1] \"a:b\" \"b:c\" #>  #> $to #> [1] \"b:c\" \"c:d\" #>  #> $isDirected #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"loongraph\" #> attr(,\"separator\") #> [1] \":\""},{"path":"https://great-northern-diver.github.io/loon/reference/loon.html","id":null,"dir":"Reference","previous_headings":"","what":"loon: A Toolkit for Interactive Data Visualization and Exploration — loon","title":"loon: A Toolkit for Interactive Data Visualization and Exploration — loon","text":"Loon toolkit highly interactive data visualization. Interactions plots provided mouse keyboard gestures well via command line control inspectors provide graphical user interfaces (GUIs) modifying overseeing plots.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"loon: A Toolkit for Interactive Data Visualization and Exploration — loon","text":"Currently, loon implements following statistical graphs: histogram, scatterplot, serialaxes plot (star glyphs, parallel coordinates) graph display creating navigation graphs. implemented scatterplot features, example, zooming, panning, selection moving points, dynamic linking plots, layering visual information maps regression lines, custom point glyphs (images, text, star glyphs), event bindings. Event bindings provide hooks evaluate custom code specific plot state changes mouse keyboard interactions. Hence, event bindings can used add modify default behavior plot widgets. Loon's capabilities useful statistical analysis tasks interactive exploratory data analysis, sensitivity analysis, animation, teaching, creating new graphical user interfaces. get started using loon read package vignettes visit loon website https://great-northern-diver.github.io/loon/.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"loon: A Toolkit for Interactive Data Visualization and Exploration — loon","text":"Maintainer: R. Wayne Oldford rwoldford@uwaterloo.ca [thesis advisor] Authors: Adrian Waddell adrian@waddell.ch contributors: Zehao Xu z267xu@uwaterloo.ca [contributor] Martin Gauch martin.gauch@student.kit.edu [contributor]","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonFacets.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function that produces facetted plots at the time of constructing a loon plot. — loonFacets","title":"A helper function that produces facetted plots at the time of constructing a loon plot. — loonFacets","text":"Facets across multiple panels can created existing loonplot via l_facet directly time original loon plot call (without constructing unfacetted loon plot ). loonFacets helper function called various loon plot creation function (e.g., l_plot, l_hist, etc.).  time creation produce facets. rarely called directly user. function makes use general loonPlotFactory interface tcl. detailed information common arguments, see arguments l_facet loon plot constructor (e.g., l_plot, etc.)","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonFacets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function that produces facetted plots at the time of constructing a loon plot. — loonFacets","text":"","code":"loonFacets(   type,   by,   args,   on,   bySubstitute,   layout = \"grid\",   connectedScales = \"both\",   byArgs,   linkingGroup,   sync,   parent,   factory_tclcmd,   factory_path,   factory_window_title,   xlabel = \"\",   ylabel = \"\",   title = \"\",   modifiedLinkedStates = character(0L),   ... )"},{"path":"https://great-northern-diver.github.io/loon/reference/loonFacets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function that produces facetted plots at the time of constructing a loon plot. — loonFacets","text":"type class name loon plot loon plot can separated variables mutiple panels. argument can take vector, list lengths data.frame input. args named list N-dimensional arguments (e.g., x, y, selected, etc.) formula, optional data frame containing variables . variables found data, variables taken environment(formula), typically environment function called. bySubstitute effectively call substitute() arguments used generate warnings errors. layout layout facets 'grid', 'wrap' 'separate' connectedScales Determines scales facets connected depending layout used.  value layout, scales connected follows: layout = \"wrap\":  Across facets, connectedScales \"x\",  \"x\"  scales connected \"y\", \"y\" scales connected \"\",  \"x\" \"y\" scales connected \"none\",  neither \"x\" \"y\" scales connected.    value, \"y\" scale connected. layout = \"grid\":  Across facets, connectedScales \"cross\", scales row column connected \"row\", \"x\" \"y\" scales facets row connected \"column\", \"x\" \"y\" scales facets column connected \"x\", \"x\"  scales connected (regardless column) \"y\", \"y\" scales connected (regardless row) \"\",  \"x\" \"y\" scales connected facets \"none\",  neither \"x\" \"y\" scales connected facets. byArgs arguments used determining used. linkingGroup string naming group plots linked facets. sync string identifying synchronize aesthetics linked plots (.e., \"push\" \"pull\", \"pull\" default). parent parent loon widget factory_tclcmd tcl command given loonPlotFactory.  example, loon histogram tcl command string '::loon::histogram' factory_path tcl path given loonPlotFactory identify widgets; example, string 'hist' prefix histograms. factory_window_title window title given loonPlotFactory better identify window user; example, string 'loon histogram'. xlabel string label x direction facets ylabel string label y direction facets title string providing title collection facets modifiedLinkedStates states plot synchronized plots linking group.  Used sync = \"push\". ... named arguments modify `loon` widget states","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loonGlyphGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grob glyph from a loon widget — loonGlyphGrob","title":"Create a grob glyph from a loon widget — loonGlyphGrob","text":"generic function used loonGrob specialized particular loon widgets. Used construct various point symbol types plot. Different S3 methods implemented various loon point glyphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGlyphGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grob glyph from a loon widget — loonGlyphGrob","text":"","code":"loonGlyphGrob(widget, x, glyph_info)"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGlyphGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grob glyph from a loon widget — loonGlyphGrob","text":"widget loon widget. x argument used dispatch method – empty structure class equal returned l_glyph_getType. glyph_info named list pertinent components glyph including x y locations plot well information relevant particular glyph.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGlyphGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grob glyph from a loon widget — loonGlyphGrob","text":"grob glyph.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grid grob from a loon widget handle — loonGrob","title":"Create a grid grob from a loon widget handle — loonGrob","text":"Grid grobs useful create publication quality graphics.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grid grob from a loon widget handle — loonGrob","text":"","code":"loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_compound' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_layer_graph' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_layer_histogram' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_layer_scatterplot' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_navgraph' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_navigator' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_serialaxes' loonGrob(target, name = NULL, gp = NULL, vp = NULL)  # S3 method for class 'l_ts' loonGrob(target, name = NULL, gp = NULL, vp = NULL)"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grid grob from a loon widget handle — loonGrob","text":"target either object class loon vector specifies widget, layer, glyph, navigator context completely. widget specified widget path name (e.g. '.l0.plot'), remaining objects ids. name character identifier grob, NULL. Used find grob display list /child another grob. gp gpar object, NULL, typically output call function gpar. basically list graphical parameter settings. vp grid viewport object (NULL).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grid grob from a loon widget handle — loonGrob","text":"grid grob","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a grid grob from a loon widget handle — loonGrob","text":"","code":"if (FALSE) { # \\dontrun{ widget <- with(iris, l_plot(Sepal.Length, Sepal.Width))  lgrob <- loonGrob(widget)  library(grid) grid.ls(lgrob, viewports=TRUE, fullNames=TRUE) grid.newpage(); grid.draw(lgrob)  p <- demo(\"l_layers\", ask = FALSE)$value  lgrob <- loonGrob(p) grid.newpage(); grid.draw(lgrob)  p <- demo(\"l_glyph_sizes\", ask = FALSE)$value  lgrob <- loonGrob(p) grid.newpage() grid.draw(lgrob) } # }   if (FALSE) { # \\dontrun{  library(grid) ## l_pairs (scatterplot matrix) examples  p <- l_pairs(iris[,-5], color=iris$Species)  lgrob <- loonGrob(p) grid.newpage() grid.draw(lgrob)  ## Time series decomposition examples  decompose <- decompose(co2) # or decompose <- stl(co2, \"per\") p <- l_plot(decompose, title = \"Atmospheric carbon dioxide over Mauna Loa\")  # To print directly use either plot(p) # or grid.loon(p) # or to save structure lgrob <- loonGrob(p) grid.newpage() grid.draw(lgrob) } # }   if (FALSE) { # \\dontrun{ ## graph examples  G <- completegraph(names(iris[,-5])) LG <- linegraph(G) g <- l_graph(LG)  nav0 <- l_navigator_add(g) l_configure(nav0, label = 0) con0 <- l_context_add_geodesic2d(navigator=nav0, data=iris[,-5])  nav1 <- l_navigator_add(g, from = \"Sepal.Length:Petal.Width\",   to = \"Petal.Length:Petal.Width\", proportion = 0.6) l_configure(nav1, label = 1) con1 <- l_context_add_geodesic2d(navigator=nav1, data=iris[,-5])  nav2 <- l_navigator_add(g, from = \"Sepal.Length:Petal.Length\",   to = \"Sepal.Width:Petal.Length\", proportion = 0.5) l_configure(nav2, label = 2) con2 <- l_context_add_geodesic2d(navigator=nav2, data=iris[,-5])  # To print directly use either plot(g) # or grid.loon(g) # or to save structure library(grid) lgrob <- loonGrob(g) grid.newpage(); grid.draw(lgrob) } # }   if (FALSE) { # \\dontrun{ ## histogram examples  h <- l_hist(iris$Sepal.Length, color=iris$Species)  g <- loonGrob(h)  library(grid) grid.newpage(); grid.draw(g)  h['showStackedColors'] <- TRUE  g <- loonGrob(h)  grid.newpage(); grid.draw(g)  h['colorStackingOrder'] <- c(\"selected\", unique(h['color']))  g <- loonGrob(h) grid.newpage(); grid.draw(g)  h['colorStackingOrder'] <- rev(h['colorStackingOrder'])  # To print directly use either plot(h) # or grid.loon(h) } # }  if(interactive()) {  ## l_plot scatterplot examples  p <- l_plot(x = c(0,1), y = c(0,1)) l_layer_rectangle(p, x = c(0,1), y = c(0,1))  g <- loonGrob(p)  library(grid) grid.newpage(); grid.draw(g)  p['glyph'] <- \"ctriangle\" p['color'] <- \"blue\" p['size'] <- c(10, 20) p['selected'] <- c(TRUE, FALSE) g <- loonGrob(p) grid.newpage(); grid.draw(g) }  if (FALSE) { # \\dontrun{ ## navgraph examples  ng <- l_navgraph(oliveAcids, separator='-', color=olive$Area)  # To print directly use either plot(ng) # or grid.loon(ng) # or to save structure lgrob <- loonGrob(ng) library(grid) grid.newpage() grid.draw(lgrob) } # }   ## Serial axes (radial and parallel coordinate) examples if(interactive()) {   s <- l_serialaxes(data=oliveAcids, color=olive$Area, title=\"olive data\")   sGrob_radial <- loonGrob(s)   library(grid)   grid.newpage(); grid.draw(sGrob_radial)   s['axesLayout'] <- 'parallel'   sGrob_parallel <- loonGrob(s)   grid.newpage(); grid.draw(sGrob_parallel) }   if (FALSE) { # \\dontrun{  ## Time series decomposition examples  decompose <- decompose(co2) # or decompose <- stl(co2, \"per\") p <- l_plot(decompose, title = \"Atmospheric carbon dioxide over Mauna Loa\")  # To print directly use either plot(p) # or grid.loon(p) # or to save structure lgrob <- loonGrob(p) grid.newpage() grid.draw(lgrob) } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrobInstantiation.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiate a Grob — loonGrobInstantiation","title":"Instantiate a Grob — loonGrobInstantiation","text":"Functions used instantiate grob descriptions appearing gTree produced loonGrob().","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrobInstantiation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiate a Grob — loonGrobInstantiation","text":"","code":"l_updateGrob(grobDesc, grobFun, ...)  l_instantiateGrob(loonGrob, gPath, grobFun, ...)  l_setGrobPlotView(loonGrob, margins)"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrobInstantiation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiate a Grob — loonGrobInstantiation","text":"grobDesc grob description. Generally, created function grob(). grobFun new grob function. missing, best guess (based gPath) tried. ... arguments used set new grob function loonGrob loonGrob (gTree object) gPath grob path object specifing descendant specified gTree margins plot view margins. missing, loon default margin used.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrobInstantiation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Instantiate a Grob — loonGrobInstantiation","text":"l_updateGrob: query arguments grob description assign arguments new grob function. l_instantiateGrob: query descendant loonGrob, update via new grob function, return new editted loonGrob","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrobInstantiation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instantiate a Grob — loonGrobInstantiation","text":"","code":"library(grid) grobDesc <- grob(label = \"loon\",                  gp = gpar(col = \"red\")) grid.newpage() # Nothing is displayed grid.draw(grobDesc)  textDesc <- l_updateGrob(grobDesc, grid::textGrob) grid.newpage() # label \"loon\" is shown grid.draw(textDesc)   if(interactive()) { # a loon plot with hidden labels p <- l_plot(iris, showLabels = FALSE) lg <- loonGrob(p) # x label and y label are invisible grid.newpage() grid.draw(lg)  # show x label lg <- l_instantiateGrob(lg, \"x label: textGrob arguments\") # show y label lg <- l_instantiateGrob(lg, \"y label: textGrob arguments\") # reset margins lg <- l_setGrobPlotView(lg) grid.newpage() grid.draw(lg)  # show axes if(packageVersion(\"loon\") < '1.3.8') {   lg <- l_instantiateGrob(lg, \"x axis: .xaxisGrob arguments\")   lg <- l_instantiateGrob(lg, \"y axis: .yaxisGrob arguments\") } else {   lg <- l_instantiateGrob(lg, \"x axis: xaxisGrob arguments\")   lg <- l_instantiateGrob(lg, \"y axis: yaxisGrob arguments\") }  lg <- l_setGrobPlotView(lg) grid.newpage() # the labels are too close to the plot grid.draw(lg)  # reset the labels' positions lg <- l_instantiateGrob(lg, \"x label: textGrob arguments\",                         y = unit(-3.5, \"lines\")) lg <- l_instantiateGrob(lg, \"y label: textGrob arguments\",                         x = unit(-6.5, \"lines\")) grid.newpage() grid.draw(lg) }"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob_layoutType.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic function used to distinguish whether only the locations of plots will be used to arrange them in a grob, or whether all arguments to `gridExtra::arrangeGrob()` will be used. — loonGrob_layoutType","title":"A generic function used to distinguish whether only the locations of plots will be used to arrange them in a grob, or whether all arguments to `gridExtra::arrangeGrob()` will be used. — loonGrob_layoutType","text":"generic function used distinguish whether locations plots used arrange grob, whether arguments `gridExtra::arrangeGrob()` used.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob_layoutType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic function used to distinguish whether only the locations of plots will be used to arrange them in a grob, or whether all arguments to `gridExtra::arrangeGrob()` will be used. — loonGrob_layoutType","text":"","code":"loonGrob_layoutType(target)"},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob_layoutType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generic function used to distinguish whether only the locations of plots will be used to arrange them in a grob, or whether all arguments to `gridExtra::arrangeGrob()` will be used. — loonGrob_layoutType","text":"target (compound) loon plot laid .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loonGrob_layoutType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic function used to distinguish whether only the locations of plots will be used to arrange them in a grob, or whether all arguments to `gridExtra::arrangeGrob()` will be used. — loonGrob_layoutType","text":"either string \"locations\" (default) string \"arrangeGrobArgs\". \"locations\", generic function `l_getLocations()` called location arguments `gridExtra::arrangeGrob()` used (.e. subset `c(\"ncol\", \"nrow\", \"layout_matrix\", \"heights\", \"widths\")`). grobs laid constructed using generic function `l_getPlots()`.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loon_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Loon's color generator for creating color palettes — loon_palette","title":"Loon's color generator for creating color palettes — loon_palette","text":"Loon color sequence generator implemented  creates color   palettes first m colors color palette size   m+1 colors color palette size m,   positive natural numbers m. See details   l_setColorList documentation.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loon_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loon's color generator for creating color palettes — loon_palette","text":"","code":"loon_palette(n)"},{"path":"https://great-northern-diver.github.io/loon/reference/loon_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loon's color generator for creating color palettes — loon_palette","text":"n number different colors palette","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loon_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loon's color generator for creating color palettes — loon_palette","text":"vector hex-encoded color values","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loon_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loon's color generator for creating color palettes — loon_palette","text":"","code":"loon_palette(12) #>  [1] \"#68B2ED\" \"#CDA64D\" \"#EF8AC9\" \"#1EC28B\" \"#C698EE\" \"#92B74D\" \"#EE938C\" #>  [8] \"#00C1C6\" \"#9FA5F3\" \"#B3AF40\" \"#F38CAC\" \"#00C3AA\""},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph object of class loongraph — loongraph","title":"Create a graph object of class loongraph — loongraph","text":"loongraph class provides simple alternative graph   class create common graphs useful use navigation graphs.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph object of class loongraph — loongraph","text":"","code":"loongraph(nodes, from = character(0), to = character(0), isDirected = FALSE)"},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph object of class loongraph — loongraph","text":"nodes character vector node names, element defines node hence elements need unique character vector node names, element defines edge character vector node names, element defines edge isDirected boolean scalar, defines whether define directed edges","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph object of class loongraph — loongraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a graph object of class loongraph — loongraph","text":"loongraph objects can converted graph objects (.e. objects class graph defined graph package) .graph function. information run: l_help(\"learn_R_display_graph.html.html#graph-utilities\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/loongraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graph object of class loongraph — loongraph","text":"","code":"g <- loongraph(   nodes = c(\"A\", \"B\", \"C\", \"D\"),   from = c(\"A\", \"A\", \"B\", \"B\", \"C\"),   to   = c(\"B\", \"C\", \"C\", \"D\", \"D\") )  if (FALSE) { # \\dontrun{ # create a loon graph plot p <- l_graph(g) } # }  lg <- linegraph(g)"},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Closure of One Dimensional Measures — measures1d","title":"Closure of One Dimensional Measures — measures1d","text":"Function creates 1d measures object can used   l_ng_plots l_ng_ranges.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closure of One Dimensional Measures — measures1d","text":"","code":"measures1d(data, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Closure of One Dimensional Measures — measures1d","text":"data data.frame data used calculate measures ... named arguments, name function name argument function calculate measure variable.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Closure of One Dimensional Measures — measures1d","text":"measures object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Closure of One Dimensional Measures — measures1d","text":"information run: l_help(\"learn_R_display_graph.html#measures\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/measures1d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Closure of One Dimensional Measures — measures1d","text":"","code":"m1 <- measures1d(oliveAcids, mean=mean, median=median,      sd=sd, q1=function(x)as.vector(quantile(x, probs=0.25)),      q3=function(x)as.vector(quantile(x, probs=0.75)))       m1 #> [1] \"1d measure closure with measures: mean, median, sd, q1, q3 \\n\" m1() #>                   mean median        sd      q1      q3 #> palmitic    1231.74126 1201.0 168.59226 1095.00 1360.00 #> palmitoleic  126.09441  110.0  52.49436   87.75  169.25 #> stearic      228.86538  223.0  36.74494  205.00  249.00 #> oleic       7311.74825 7302.5 405.81022 7000.00 7680.00 #> linoleic     980.52797 1030.0 242.79922  770.75 1180.75 #> linolenic     31.88811   33.0  12.96870   26.00   40.25 #> arachidic     58.09790   61.0  22.03025   50.00   70.00 #> eicosenoic    16.28147   17.0  14.08330    2.00   28.00 m1(olive$palmitoleic>100) #>                   mean median        sd      q1      q3 #> palmitic    1331.49693 1345.5 144.92782 1254.25 1419.00 #> palmitoleic  162.35890  163.0  39.13201  130.00  185.00 #> stearic      224.03374  220.0  33.35324  203.00  242.00 #> oleic       7058.02454 7025.0 282.79153 6883.00 7253.75 #> linoleic    1090.95399 1134.0 177.25662  950.00 1215.50 #> linolenic     33.86196   34.0  10.89852   29.00   40.75 #> arachidic     59.93252   61.0  17.65329   53.00   68.00 #> eicosenoic    21.59816   23.5  11.18355   16.00   29.00 m1('data') #>     palmitic palmitoleic stearic oleic linoleic linolenic arachidic eicosenoic #> 1       1075          75     226  7823      672        36        60         29 #> 2       1088          73     224  7709      781        31        61         29 #> 3        911          54     246  8113      549        31        63         29 #> 4        966          57     240  7952      619        50        78         35 #> 5       1051          67     259  7771      672        50        80         46 #> 6        911          49     268  7924      678        51        70         44 #> 7        922          66     264  7990      618        49        56         29 #> 8       1100          61     235  7728      734        39        64         35 #> 9       1082          60     239  7745      709        46        83         33 #> 10      1037          55     213  7944      633        26        52         30 #> 11      1051          35     219  7978      605        21        65         24 #> 12      1036          59     235  7868      661        30        62         44 #> 13      1074          70     214  7728      747        50        79         33 #> 14       875          52     243  8018      655        41        79         32 #> 15       952          49     254  7795      780        50        75         41 #> 16      1155          98     201  7606      816        32        60         29 #> 17       943          94     183  7840      788        42        75         31 #> 18      1278          69     205  7344      957        45        70         28 #> 19       961          70     195  7958      742        46        75         30 #> 20       952          77     258  7820      736        43        78         33 #> 21      1074          67     236  7692      716        56        83         45 #> 22       995          46     288  7806      679        56        86         40 #> 23      1056          53     247  7703      700        54        89         51 #> 24      1065          39     234  7876      703        42        74         26 #> 25      1065          45     245  7779      696        47        82         38 #> 26      1315         139     230  7299      832        42        60         32 #> 27      1321         136     217  7174      950        43        63         30 #> 28      1359         115     246  7234      874        45        63         18 #> 29      1378         111     272  7127      940        46        64         23 #> 30      1295         109     245  7253      903        43        62         38 #> 31      1275         121     215  7285      892        40        68         41 #> 32      1336         120     318  7083      915        50        70         38 #> 33      1309         122     241  7257      870        46        72         35 #> 34      1340         114     189  7337      820        48        72         21 #> 35      1299         116     253  7309      823        40        69         27 #> 36      1221         107     221  7441      798        54        70         28 #> 37      1245          72     283  7395      829        44        67         28 #> 38      1285         129     244  7323      819        57        65         36 #> 39      1248         107     313  7299      840        46        66         33 #> 40      1356         106     236  7209      866        48        75         36 #> 41      1260         102     228  7354      870        49        64         28 #> 42      1261         121     312  7238      877        47        65         25 #> 43      1304         124     279  7160      928        48        61         37 #> 44      1344         117     287  7129      897        51        65         41 #> 45      1323          96     300  7351      757        47        54         26 #> 46      1292         117     215  7351      839        48        61         32 #> 47      1254         118     244  7394      786        46        71         24 #> 48      1312         131     259  7167      939        41        69         20 #> 49      1213         109     301  7261      925        47        65         31 #> 50      1359          98     351  7262      780        41        56         16 #> 51      1266          97     263  7435      743        45        69         29 #> 52      1298          99     311  7311      787        45        67         23 #> 53      1272         116     279  7258      872        43        72         27 #> 54      1278          87     332  7379      771        44        53         24 #> 55      1184         112     311  7391      819        48        57         28 #> 56      1382         110     268  7241      828        39        60         30 #> 57      1183         146     292  7580      618        38        51         23 #> 58      1261         153     219  7355      818        52        70         26 #> 59      1198         136     239  7639      633        27        55         19 #> 60      1225         134     232  7658      616        36        49         26 #> 61      1339         166     208  7190      923        40        69         25 #> 62      1132         157     240  7641      638        45        60         31 #> 63      1381         183     245  7385      609        47        70         25 #> 64      1409         128     257  7257      759        43        57         16 #> 65      1306         127     250  7254      869        47        68         24 #> 66      1372         120     250  7355      702        44        68         28 #> 67      1336         113     242  7293      855        38        60         18 #> 68      1401         151     238  7164      857        45        72         36 #> 69      1390         119     234  7236      823        40        62         41 #> 70      1432         152     281  7029      949        39        55         25 #> 71      1412         124     298  7182      790        45        68         28 #> 72      1366         147     291  7197      783        51        70         34 #> 73      1383         118     273  7282      738        45        68         29 #> 74      1283         102     263  7400      763        54        65         28 #> 75      1296         136     260  7380      780        48        51         18 #> 76      1287         108     287  7343      826        44        44         23 #> 77      1351         159     296  7229      810        36        60         22 #> 78      1241          97     268  7499      709        52        69         36 #> 79      1267         101     300  7230      898        74        65         34 #> 80      1235         138     252  7322      861        54        66         36 #> 81      1255         103     223  7395      848        47        56         30 #> 82      1454         183     196  7057     1014        27        46         19 #> 83      1347         194     197  7277      895        25        46         15 #> 84      1364         204     225  6929     1084        21        50         14 #> 85      1410         199     216  7130      955        21        48         19 #> 86      1384         178     208  7105      999        29        67         26 #> 87      1412         185     217  6842     1203        34        72         32 #> 88      1410         232     280  6715     1233        32        60         24 #> 89      1509         209     257  6647     1240        42        62         30 #> 90      1317         197     256  7036     1067        40        60         22 #> 91      1286         192     203  7132     1053        38        65         28 #> 92      1273         191     202  6862     1303        43        70         28 #> 93      1463         183     183  6747     1307        36        60         24 #> 94      1399         187     191  6861     1233        38        60         17 #> 95      1413         193     208  6875     1202        30        60         18 #> 96      1369         206     203  6953     1168        35        50         16 #> 97      1488         172     170  6920     1144        37        54         14 #> 98      1323         160     205  6911     1298        24        50         17 #> 99      1311         166     170  6902     1312        41        69         28 #> 100     1286         163     183  7040     1230        29        57         12 #> 101     1380         173     188  7038     1139        31        44         14 #> 102     1394         164     223  7086     1042        24        43         23 #> 103     1324         174     198  6863     1289        36        70         21 #> 104     1290         157     192  7000     1263        26        51         19 #> 105     1361         163     196  6888     1273        37        58         24 #> 106     1387         182     242  6913     1101        44        68         30 #> 107     1369         180     181  7000     1130        39        45         24 #> 108     1303         165     175  7025     1243        31        41         16 #> 109     1346         160     169  7072     1151        39        48         15 #> 110     1369         171     184  6937     1246        30        48         15 #> 111     1305         172     169  7004     1260        28        50         11 #> 112     1351         179     186  6935     1243        36        50         19 #> 113     1283         151     182  7000     1271        40        52         21 #> 114     1449         175     198  6883     1162        40        70         22 #> 115     1310         180     183  7054     1202        26        32         12 #> 116     1360         163     176  6901     1280        28        65         27 #> 117     1300         187     196  6920     1253        41        76         25 #> 118     1368         171     218  7010     1057        41        54         26 #> 119     1207         151     156  7159     1234        27        51         14 #> 120     1348         154     183  6917     1277        48        56         16 #> 121     1334         186     229  7261      827        34        56         20 #> 122     1301         156     207  7003     1229        41        48         14 #> 123     1226         181     213  6961     1230        47        74         26 #> 124     1201         168     190  7100     1216        43        64         16 #> 125     1297         153     177  7004     1260        35        60         16 #> 126     1248         163     158  7103     1222        31        60         14 #> 127     1335         159     197  6974     1220        36        60         17 #> 128     1219         167     171  7087     1254        35        50         16 #> 129     1318         179     177  7030     1194        35        42         25 #> 130     1264         167     166  7130     1187        22        52         12 #> 131     1201         175     201  7129     1193        36        49         15 #> 132     1252         180     181  7055     1214        31        59         38 #> 133     1273         182     209  6965     1191        43        74         23 #> 134     1351         179     170  7034     1154        35        66         10 #> 135     1336         155     212  7103     1086        33        55         20 #> 136     1499         201     182  6803     1204        30        56         24 #> 137     1425         198     193  7032     1041        31        52         17 #> 138     1358         204     227  6962     1109        41        65         34 #> 139     1346         181     257  7147      933        40        60         36 #> 140     1392         186     256  6732     1278        53        64         29 #> 141     1311         166     222  7006     1147        41        80         27 #> 142     1314         171     229  6923     1198        47        76         42 #> 143     1409         200     207  6842     1224        31        60         27 #> 144     1342         174     221  6993     1147        36        64         23 #> 145     1387         182     206  7100     1020        34        54         17 #> 146     1413         202     205  6920     1165        36        46         13 #> 147     1430         209     225  6800     1200        32        59         27 #> 148     1336         185     223  6956     1155        56        73         16 #> 149     1372         200     200  6916     1189        33        50         22 #> 150     1330         157     228  7055     1108        42        55         25 #> 151     1412         207     208  6822     1239        36        51         28 #> 152     1321         209     217  6948     1178        42        62         23 #> 153     1401         200     217  6980     1073        40        68         21 #> 154     1401         214     217  6734     1293        44        69         27 #> 155     1457         168     242  6724     1266        54        59         30 #> 156     1451         199     221  6835     1177        37        51         29 #> 157     1438         206     248  6806     1183        34        57         28 #> 158     1462         204     237  6644     1309        42        54         28 #> 159     1529         215     203  6602     1310        45        69         27 #> 160     1510         189     245  6752     1188        36        52         28 #> 161     1437         222     184  6803     1240        43        56         16 #> 162     1327         129     247  7024     1157        38        56         22 #> 163     1438         172     252  6630     1380        40        64         24 #> 164     1447         176     189  6849     1180        42        64         26 #> 165     1355         144     214  6972     1198        33        60         24 #> 166     1369         156     241  6890     1209        42        63         30 #> 167     1471         188     276  6697     1269        34        51         16 #> 168     1456         179     240  6738     1267        41        65         14 #> 169     1314         140     207  7020     1220        28        59         12 #> 170     1408         176     192  6909     1195        45        50         25 #> 171     1397         172     191  7107     1018        36        50         29 #> 172     1413         191     186  6937     1180        31        46         13 #> 173     1539         194     213  6764     1178        38        58         16 #> 174     1304         159     234  7019     1174        38        53         19 #> 175     1341         160     231  7033     1069        40        67         33 #> 176     1508         208     249  6641     1311        25        43         20 #> 177     1515         226     257  6595     1287        41        63         16 #> 178     1262         165     235  7120     1113        32        51         21 #> 179     1307         197     238  7003     1144        37        50         24 #> 180     1294         159     253  7009     1190        30        52         13 #> 181     1460         187     215  6843     1172        35        56         32 #> 182     1476         187     203  6837     1197        36        48         22 #> 183     1482         178     197  6814     1201        40        64         24 #> 184     1388         176     185  7008     1111        48        53         31 #> 185     1367         172     235  7066     1054        35        45         26 #> 186     1272         207     205  7152     1098        37        52         22 #> 187     1323         157     234  7132     1022        38        58         31 #> 188     1206         218     242  7193     1002        37        54         25 #> 189     1383         157     217  7018     1090        40        60         37 #> 190     1521         190     238  6956      986        36        50         23 #> 191     1350         168     227  6986     1165        29        58         17 #> 192     1422         181     218  6813     1230        30        59         21 #> 193     1298         166     224  6986     1162        34        65         31 #> 194     1447         236     245  6607     1336        33        51         21 #> 195     1347         197     211  6795     1300        32        59         34 #> 196     1339         170     253  6989     1110        29        63         23 #> 197     1388         183     216  6867     1208        28        61         21 #> 198     1527         260     232  6488     1370        31        45         20 #> 199     1495         237     236  6571     1318        32        58         26 #> 200     1487         246     251  6504     1390        29        53         19 #> 201     1399         180     232  6855     1190        32        66         22 #> 202     1489         215     242  6777     1145        30        60         22 #> 203     1339         166     226  6928     1198        30        60         23 #> 204     1482         246     238  6444     1462        27        50         20 #> 205     1434         172     255  6646     1354        27        59         25 #> 206     1347         156     214  6850     1313        25        48         19 #> 207     1340         158     233  6848     1272        32        63         25 #> 208     1453         180     244  6752     1238        34        54         23 #> 209     1306         149     226  7082     1097        33        61         24 #> 210     1349         161     217  6997     1138        31        62         23 #> 211     1254         151     205  7319      947        28        54         23 #> 212     1168         144     220  7230     1109        31        52         28 #> 213     1346         167     224  6959     1111        30        49         23 #> 214     1390         184     212  6898     1189        29        44         19 #> 215     1283         149     224  7077     1104        30        57         32 #> 216     1214         137     232  7269     1005        32        55         23 #> 217     1491         227     205  6941      988        33        68         34 #> 218     1479         218     207  7039      887        36        65         36 #> 219     1445         174     228  6875     1123        29        69         31 #> 220     1439         183     218  6775     1226        32        66         29 #> 221     1387         154     204  6991     1090        34        74         32 #> 222     1426         169     192  7025     1043        31        64         27 #> 223     1451         200     208  6980     1006        30        62         31 #> 224     1493         204     188  6913     1044        32        61         35 #> 225     1419         192     207  6996     1014        36        70         36 #> 226     1342         177     199  7172      952        34        65         33 #> 227     1349         152     236  7145      949        35        75         29 #> 228     1440         196     208  6938     1070        32        61         26 #> 229     1460         215     197  6918     1081        28        55         23 #> 230     1249         133     205  7417      827        33        72         33 #> 231     1348         159     238  7017     1081        31        67         25 #> 232     1341         155     244  6958     1144        32        68         26 #> 233     1398         149     204  7182      907        29        76         30 #> 234     1454         200     199  6910     1090        30        62         25 #> 235     1334         153     219  6928     1214        33        66         24 #> 236     1438         204     189  7107      910        33        63         27 #> 237     1303         138     212  7170     1016        34        69         25 #> 238     1323         147     210  7108     1070        33        61         20 #> 239     1417         169     207  6875     1184        34        57         27 #> 240     1360         167     225  6883     1220        31        55         27 #> 241     1420         179     214  6923     1121        33        56         27 #> 242     1472         218     214  6724     1238        29        53         23 #> 243     1368         174     205  7042     1066        31        57         26 #> 244     1367         173     228  6948     1141        32        53         24 #> 245     1403         173     209  6843     1210        33        63         33 #> 246     1413         197     206  6737     1387        34        60         31 #> 247     1201         138     207  7011     1269        37        64         35 #> 248     1359         180     207  6895     1203        33        61         30 #> 249     1518         198     225  6681     1243        29        57         24 #> 250     1434         185     189  6771     1269        30        62         25 #> 251     1367         162     179  6772     1368        33        64         27 #> 252     1461         181     197  6783     1246        26        57         23 #> 253     1368         161     198  7030     1095        33        59         31 #> 254     1419         159     215  6862     1193        35        60         31 #> 255     1514         162     298  6725     1119        45        93         30 #> 256     1328         171     253  6987     1030        38        83         39 #> 257     1469         160     337  6675     1127        44        94         36 #> 258     1222         133     227  7425      824        36        69         35 #> 259     1639         172     331  6510     1124        46        91         32 #> 260     1345         133     272  6801     1194        48        83         37 #> 261     1339         170     275  6838     1060        46        88         43 #> 262     1194         135     263  7277      889        44        95         41 #> 263     1112          68     375  7770      448        52        69         45 #> 264     1222          70     329  7605      566        48        67         43 #> 265     1136          72     341  7616      661        49        65         32 #> 266      926          41     277  7815      784        45        65         25 #> 267     1105          69     373  7714      532        51        68         37 #> 268     1109          79     305  7576      763        45        64         36 #> 269     1284          93     265  7235      893        43        77         46 #> 270     1120          69     277  7416      946        42        59         36 #> 271      916          52     281  7870      694        42        64         58 #> 272      905          49     288  7747      812        49        71         56 #> 273     1206          55     287  7329      935        44        74         42 #> 274     1457         182     267  7020      863        41        84         37 #> 275     1327         140     193  7328      823        36        87         35 #> 276     1303         100     251  7045     1049        40        86         40 #> 277     1444         175     259  6876     1027        34        78         32 #> 278     1505         243     226  6962      858        30        72         27 #> 279     1429         162     223  6917     1041        37        77         40 #> 280     1491         162     211  6994      928        37        97         38 #> 281     1393         128     211  7189      870        38        93         40 #> 282     1404         134     210  7110      923        40       101         43 #> 283     1222         130     214  7374      856        38        89         45 #> 284     1153          74     316  7593      705        42        64         32 #> 285     1169          76     307  7553      728        43        69         32 #> 286     1369         104     237  7375      775        39        70         15 #> 287      993          58     267  7743      773        41        62         44 #> 288      980          53     254  7719      815        44        69         47 #> 289      967          55     273  7692      833        45        63         47 #> 290     1128          73     354  7527      728        44        76         38 #> 291     1188          85     273  7445      814        44        73         42 #> 292     1257          95     247  7405      812        43        70         35 #> 293     1262          88     301  7471      704        43        71         31 #> 294     1283         153     196  7107     1115        37        60         28 #> 295     1263         155     199  7140     1148        31        42         18 #> 296     1369         158     215  7160      958        38        69         32 #> 297     1353         172     175  6965     1212        28        75         19 #> 298     1187         139     185  7427      952        29        56         22 #> 299     1732         231     156  6437     1313        45        62         23 #> 300     1620         255     166  6628     1212        29        62         27 #> 301     1543         172     193  6740     1157        52        87         34 #> 302     1498         170     195  6804     1206        35        66         23 #> 303     1399         169     171  7011     1100        36        72         16 #> 304     1293         156     191  7101     1111        32        60         31 #> 305     1420         175     152  7004     1149        27        50         20 #> 306     1721         238     255  6300     1350        35        70         28 #> 307     1742         221     156  6415     1315        43        82         23 #> 308     1391         187     189  6975     1062        52        70         45 #> 309     1517         206     249  6680     1205        33        80         27 #> 310     1269         157     193  7140     1148        31        40         18 #> 311     1577         204     208  6732     1183        20        52         20 #> 312     1590         241     195  6705     1149        27        68         21 #> 313     1621         280     197  6608     1179        28        58         27 #> 314     1753         275     236  6367     1214        23        61         27 #> 315     1679         260     177  6568     1191        30        59         33 #> 316     1419         203     176  6973     1083        38        78         27 #> 317     1693         236     174  6499     1204        51       102         37 #> 318     1692         270     234  6499     1196        31        59         15 #> 319     1638         252     215  6570     1199        39        53         29 #> 320     1497         247     219  6621     1270        36        73         32 #> 321     1442         222     194  6677     1314        36        72         38 #> 322     1680         270     170  6440     1310        31        62         28 #> 323     1463         164     185  6909     1154        49        58         17 #> 324     1129         120     222  7272     1112        43        98          2 #> 325     1042         135     210  7376     1116        35        90          3 #> 326     1103          96     210  7380     1085        32        94          3 #> 327     1118          97     221  7279     1154        35        94          2 #> 328     1052          95     215  7388     1126        31        92          1 #> 329     1116         102     231  7290     1168        26        66          1 #> 330     1108         132     231  7319     1101        20        66          2 #> 331     1129         108     212  7386     1074        28        62          3 #> 332     1085          91     223  7384     1126        28        62          3 #> 333     1104         103     233  7322     1147        27        61          2 #> 334     1098          88     212  7338     1140        28        67          1 #> 335     1135          98     251  7120     1314        20        61          2 #> 336     1158         108     245  7065     1326        22        75          1 #> 337     1133         110     241  7080     1342        21        68          3 #> 338     1095         125     250  7120     1305        21        83          1 #> 339     1201          87     238  6990     1383        25        75          3 #> 340     1213         112     245  7007     1335        22        65          3 #> 341     1108          92     231  7367     1110        29        62          3 #> 342     1075         103     207  7413     1096        32        68          2 #> 343     1059          96     228  7386     1128        25        72          2 #> 344     1176          92     207  7347     1057        35        82          1 #> 345     1159          98     213  7320     1108        38        64          1 #> 346     1132          80     201  7398     1095        27        67          2 #> 347     1107          75     220  7399     1096        29        90          1 #> 348     1092         104     234  7355     1126        28        58          2 #> 349     1119          81     219  7409     1057        33        81          2 #> 350     1106          93     212  7381     1104        35        68          1 #> 351     1047         101     238  7385     1120        28        89          1 #> 352     1165          99     214  7331     1101        22        67          3 #> 353     1158          84     201  7327     1123        29        77          2 #> 354     1095          88     203  7415     1093        37        78          1 #> 355     1176          75     205  7396     1107        33        74          2 #> 356     1103         109     220  7335     1140        28        59          2 #> 357     1112          92     209  7356     1125        32        73          2 #> 358     1091          93     222  7377     1113        20        53          2 #> 359     1080          98     219  7371     1125        33        78          1 #> 360     1051         108     227  7403     1114        30        66          3 #> 361     1096          84     211  7415     1091        30        71          2 #> 362     1142          97     225  7341     1101        28        65          1 #> 363     1047          96     236  7399     1107        32        80          3 #> 364     1114          86     210  7359     1116        31        83          2 #> 365     1140          93     241  7324     1098        23        74          1 #> 366     1075          91     200  7410     1107        36        80          1 #> 367     1092         106     219  7427     1125        33        77          1 #> 368     1076          95     204  7408     1130        27        79          2 #> 369     1178          89     201  7381     1099        34        87          2 #> 370     1095         104     223  7367     1111        43        56          2 #> 371     1166          97     272  6971     1390        20        83          3 #> 372     1154         119     257  7130     1253        22        61          1 #> 373     1177         111     241  6882     1470        22        95          2 #> 374     1160          96     240  7043     1357        24        79          2 #> 375     1122         104     241  7145     1313        15        58          1 #> 376     1132          99     257  7065     1362        24        90          3 #> 377     1096         100     260  7162     1282        25        74          2 #> 378     1131          87     233  7144     1307        25        72          3 #> 379     1184         105     258  7020     1340        26        66          2 #> 380     1135          94     235  7123     1320        24        67          2 #> 381     1084          96     240  7164     1330        28        57          1 #> 382     1086         127     252  7159     1285        28        62          2 #> 383     1140          95     258  7085     1347        23        71          3 #> 384     1138         101     254  7103     1310        25        68          1 #> 385     1159         110     261  7068     1297        27        77          2 #> 386     1051          78     211  7421     1146        30        82          2 #> 387     1048          79     213  7439     1130        28        61          2 #> 388     1061          86     220  7421     1102        29        79          3 #> 389     1105          88     210  7353     1142        28        72          1 #> 390     1145          35     237  7208     1118        20        46          2 #> 391     1049          96     219  7303     1168        22        47          2 #> 392     1105         120     218  7302     1158        23        45          3 #> 393     1030          84     214  7403     1177        21        70          1 #> 394     1070          98     215  7280     1240        28        68          3 #> 395     1103          81     208  7310     1177        30        90          3 #> 396     1040         101     205  7368     1176        25        85          3 #> 397     1100          95     210  7320     1113        22        72          3 #> 398     1118          85     199  7415     1060        36        86          3 #> 399     1065          98     230  7345     1163        24        74          1 #> 400     1131          78     221  7358     1120        22        69          2 #> 401     1080         120     218  7296     1145        35       105          2 #> 402     1075          86     231  7403     1109        22        73          3 #> 403     1040         103     228  7364     1173        25        66          2 #> 404     1128          82     203  7320     1148        30        88          1 #> 405     1060         111     231  7363     1149        20        65          1 #> 406     1103          78     220  7365     1149        20        65          2 #> 407     1110          91     201  7318     1185        24        74          2 #> 408     1091         108     218  7383     1183        28        88          3 #> 409     1094          96     220  7341     1127        26        96          2 #> 410     1131          87     208  7170     1308        28        57          2 #> 411     1175         108     214  7076     1307        33        85          2 #> 412     1076          77     202  7243     1305        29        67          1 #> 413     1120          90     240  7068     1383        23        75          1 #> 414     1152         111     238  7080     1372        25        81          2 #> 415     1141          95     250  7035     1388        22        68          2 #> 416     1098         103     267  7135     1301        24        76          2 #> 417     1126         100     236  7062     1380        26        69          1 #> 418     1087          89     243  7200     1302        18        60          1 #> 419     1115          96     236  7085     1372        20        75          2 #> 420     1178          92     241  7006     1376        22        84          1 #> 421     1162         106     242  7025     1368        25        71          2 #> 422     1085          70     180  7955      605        20        50          1 #> 423     1085          70     185  7955      600        25        55          1 #> 424     1090          60     190  7950      600        28        47          2 #> 425     1080          65     189  7960      602        35        20          1 #> 426     1090          60     195  7955      600        28        42          2 #> 427     1105          55     200  7900      600        37        55          2 #> 428     1060          75     175  7975      610        20        55          2 #> 429     1050          70     170  7977      605        28        65          1 #> 430     1100          55     198  7905      600        35        50          3 #> 431     1065          65     178  7965      605        22        65          2 #> 432     1085          60     188  7955      602        30        50          2 #> 433     1080          65     180  7960      605        25        55          1 #> 434     1085          60     190  7955      602        30        53          1 #> 435     1075          68     195  7960      602        20        40          3 #> 436     1090          58     192  7950      600        35        40          3 #> 437     1095          60     198  7945      600        38        34          2 #> 438     1090          58     195  7950      600        30        42          2 #> 439     1095          58     198  7950      602        35        32          1 #> 440     1090          58     195  7940      600        35        42          2 #> 441     1095          58     198  7945      600        35        34          1 #> 442     1095          55     200  7940      600        35        45          3 #> 443     1080          70     188  7965      608        28        36          3 #> 444     1090          60     195  7950      600        32        38          2 #> 445     1105          55     200  7900      595        39        56          1 #> 446     1110          50     205  7900      595        40        52          1 #> 447     1075          70     198  7978      608        28        33          2 #> 448     1075          65     185  7980      608        35        42          3 #> 449     1065          75     180  7975      610        25        50          3 #> 450     1070          75     188  7980      602        22        45          2 #> 451     1070          75     188  7980      602        22        45          1 #> 452     1100          70     200  7910      610        39        44          1 #> 453     1075          70     185  7960      610        22        58          2 #> 454     1050          78     175  7990      610        18        59          3 #> 455     1090          60     198  7945      600        32        35          2 #> 456     1050          78     188  7990      608        28        23          3 #> 457     1075          70     190  7975      605        28        27          3 #> 458     1098          54     202  7945      595        42        32          2 #> 459     1105          15     198  8005      575        52        20          2 #> 460     1110          75     220  7915      510        55        65          2 #> 461     1058          50     178  7988      626        40        55          3 #> 462     1115          30     225  7955      600        55        15          2 #> 463     1105          30     198  7995      570        52        20          3 #> 464     1072          49     178  7980      615        48        48          2 #> 465     1110          15     210  7990      570        50        20          2 #> 466     1110          80     215  7910      525        50        60          1 #> 467     1055          60     175  7985      620        45        50          1 #> 468     1100          80     215  7930      535        45        60          2 #> 469     1105          55     205  7965      600        25        20          2 #> 470     1095          50     210  7948      600        25        35          2 #> 471     1110          50     220  7950      600        52        10          2 #> 472     1092          37     210  7955      600        40        40          3 #> 473     1290          60     260  7550      670        70       100          2 #> 474     1170          80     230  7690      720        40        70          1 #> 475     1100          90     250  7680      760        30        80          2 #> 476     1120          70     240  7720      730        40        80          2 #> 477     1160          70     250  7650      750        30        90          1 #> 478     1200          50     210  7770      690        20        50          3 #> 479     1140          50     200  7990      580        10        20          1 #> 480     1220          80     240  7610      760        30        60          2 #> 481     1180          90     250  7520      800        50       100          2 #> 482     1210          70     250  7560      780        40        90          2 #> 483     1220          80     220  7540      770        60       100          2 #> 484     1180         100     190  7520      820        50       100          1 #> 485     1160          90     220  7580      790        40        90          1 #> 486     1130         100     240  7620      780        30        90          1 #> 487     1080         100     260  7710      750        20        70          2 #> 488     1090          90     280  7730      720        50       100          1 #> 489     1020         100     270  7770      710        40        90          1 #> 490     1090          90     250  7680      760        60        80          1 #> 491     1120         100     260  7720      680        30        80          2 #> 492     1080          80     240  7830      670        30        70          2 #> 493     1160          70     230  7860      640        10        20          1 #> 494     1100          80     240  7820      670        20        70          2 #> 495     1050         100     250  7930      630        10        30          3 #> 496     1090          90     270  7780      690        30        50          3 #> 497     1120          80     260  7750      680        30        80          3 #> 498     1120         100     250  7680      730        40        70          2 #> 499     1190          90     230  7670      710        30        80          2 #> 500     1170         110     250  7620      740        20        90          1 #> 501     1120         100     230  7720      730        20        70          1 #> 502     1190          80     270  7690      720        10        40          2 #> 503     1400          90     270  7420      800         0        20          2 #> 504     1350          80     250  7520      760        10        30          1 #> 505     1090          60     220  7890      670        10        60          2 #> 506     1150          90     230  7790      650        30        60          1 #> 507     1240          90     220  7820      590        10        30          1 #> 508     1220         100     240  7890      530         0        10          2 #> 509     1180          80     250  7870      580        10        30          2 #> 510     1170         110     240  7730      630        30        90          1 #> 511     1170         100     280  7710      640        20        70          3 #> 512     1180          80     220  7790      680        10        40          1 #> 513     1200          90     240  7820      590        10        50          2 #> 514     1140          90     240  7880      570        20        60          3 #> 515     1160          70     210  7870      580        30        80          3 #> 516     1130          80     250  7780      650        40        60          3 #> 517     1150          80     240  7800      630        30        70          2 #> 518     1110          70     240  7820      670        20        70          3 #> 519     1150          70     220  7850      620        20        40          2 #> 520     1180          80     240  7760      670        20        50          2 #> 521     1020          80     250  7920      680        10        30          3 #> 522      610          80     230  8410      650         0        20          3 #> 523     1190         150     290  7340     1020         0        10          2 #> 524     1110         130     210  7550     1000         0         0          1 #> 525     1020         100     220  7530     1030         0         0          3 #> 526     1070         120     210  7600      990         0        10          3 #> 527     1010          90     350  7480     1050        10        10          1 #> 528     1060         140     240  7680      830        10        40          2 #> 529     1060         140     270  7620      880        10        20          1 #> 530     1030         100     230  7740      900         0         0          2 #> 531     1120         130     250  7530      970         0         0          3 #> 532     1030         110     220  7760      980         0         0          2 #> 533     1070         100     230  7600      990        10         0          1 #> 534     1140         180     220  7610      850        10        10          2 #> 535     1090         180     230  7590      860        10        40          2 #> 536      980         110     300  7720      910        10         0          3 #> 537      980          90     330  7540     1040         0         0          2 #> 538      960          90     200  7810      940         0         0          2 #> 539      990          90     210  7780      930         0         0          2 #> 540     1060         120     210  7600     1010         0         0          1 #> 541     1240         150     250  7610      730        10        10          1 #> 542     1060          90     310  7850      690         0         0          2 #> 543     1020         100     290  7620      960         0        10          2 #> 544      970          90     220  7700     1020         0         0          3 #> 545     1180         130     220  7450     1010         0        10          2 #> 546     1060         140     240  7690      850        10        10          1 #> 547      990         100     250  7630     1030         0         0          3 #> 548     1010          90     350  7630      940        10         0          3 #> 549     1040          90     250  7780      820        10        10          1 #> 550     1040          90     250  7810      810        10        10          2 #> 551     1020          90     350  7620      920        10         0          3 #> 552     1020          90     260  7620     1010         0         0          3 #> 553     1010          90     350  7610      930        10         0          3 #> 554      920         110     340  7720      910         0         0          3 #> 555     1030         100     250  7710      900         0        10          2 #> 556      960          90     300  7820      830         0         0          3 #> 557     1030         110     210  7810      840         0         0          1 #> 558     1010         100     240  7710      910        10        20          2 #> 559     1020          90     240  7800      850         0         0          2 #> 560     1120          90     300  7650      830         0        10          1 #> 561     1090          90     290  7710      800        10         0          2 #> 562     1100         120     280  7630      770        10        10          2 #> 563     1090          80     240  7820      760        10         0          2 #> 564     1150          90     250  7720      810         0        10          3 #> 565     1110          90     230  7810      750         0        10          2 #> 566     1010         110     210  7720      950         0         0          1 #> 567     1070         100     220  7730      870        10        10          2 #> 568     1280         110     290  7490      790        10        10          2 #> 569     1060         100     270  7740      810        10        10          3 #> 570     1010          90     210  7720      970         0         0          2 #> 571      990         120     250  7750      870        10        10          2 #> 572      960          80     240  7950      740        10        20          2 m1('measures') #> [1] \"mean\"   \"median\" \"sd\"     \"q1\"     \"q3\""},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Closure of Two Dimensional Measures — measures2d","title":"Closure of Two Dimensional Measures — measures2d","text":"Function creates 2d measures object can used   l_ng_plots l_ng_ranges.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closure of Two Dimensional Measures — measures2d","text":"","code":"measures2d(data, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Closure of Two Dimensional Measures — measures2d","text":"data data.frame data used calculate measures ... named arguments, name function name argument function calculate measure variable.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Closure of Two Dimensional Measures — measures2d","text":"measures object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Closure of Two Dimensional Measures — measures2d","text":"information run: l_help(\"learn_R_display_graph.html#measures\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/measures2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Closure of Two Dimensional Measures — measures2d","text":"","code":"m <- measures2d(oliveAcids, separator='*', cov=cov, cor=cor) m #> 2d measure closure with measures: cov, cor  m() #>                                  cov         cor #> palmitic*palmitoleic     7395.224119  0.83560497 #> palmitic*stearic        -1055.562037 -0.17039178 #> palmitic*oleic         -57287.524096 -0.83733535 #> palmitic*linoleic       18857.690262  0.46068446 #> palmitic*linolenic        698.182908  0.31932669 #> palmitic*arachidic        847.932556  0.22829912 #> palmitic*eicosenoic      1191.801501  0.50195179 #> palmitoleic*stearic      -428.573959 -0.22218545 #> palmitoleic*oleic      -18159.280920 -0.85243835 #> palmitoleic*linoleic     7922.999106  0.62162666 #> palmitoleic*linolenic      63.388865  0.09311163 #> palmitoleic*arachidic      98.855890  0.08548117 #> palmitoleic*eicosenoic    307.805255  0.41635048 #> stearic*oleic            1693.924020  0.11359873 #> stearic*linoleic        -1764.851745 -0.19781693 #> stearic*linolenic           9.014684  0.01891719 #> stearic*arachidic         -33.172437 -0.04097892 #> stearic*eicosenoic         72.643911  0.14037748 #> oleic*linoleic         -83782.213611 -0.85031837 #> oleic*linolenic         -1148.198094 -0.21817123 #> oleic*arachidic         -2860.495450 -0.31996234 #> oleic*eicosenoic        -2424.055111 -0.42414586 #> linoleic*linolenic       -180.862014 -0.05743858 #> linoleic*arachidic       1128.477117  0.21097260 #> linoleic*eicosenoic       304.481605  0.08904499 #> linolenic*arachidic       177.203618  0.62023577 #> linolenic*eicosenoic      105.625243  0.57831851 #> arachidic*eicosenoic      101.970644  0.32866349 m(keep=olive$palmitic>1360) #>                                 cov         cor #> palmitic*palmitoleic     1975.76196  0.64958597 #> palmitic*stearic         -241.34237 -0.08521612 #> palmitic*oleic         -13774.18135 -0.73093470 #> palmitic*linoleic        4761.02058  0.34501728 #> palmitic*linolenic        -22.57707 -0.03493272 #> palmitic*arachidic        205.75926  0.19437962 #> palmitic*eicosenoic        16.62401  0.02747476 #> palmitoleic*stearic      -304.56498 -0.26254549 #> palmitoleic*oleic       -5783.43692 -0.74926458 #> palmitoleic*linoleic     3206.22945  0.56724648 #> palmitoleic*linolenic     -57.82659 -0.21843835 #> palmitoleic*arachidic     -45.45330 -0.10483183 #> palmitoleic*eicosenoic    -20.65618 -0.08334593 #> stearic*oleic             263.06768  0.03660183 #> stearic*linoleic        -1179.22795 -0.22405835 #> stearic*linolenic          36.76326  0.14914252 #> stearic*arachidic          57.43522  0.14226308 #> stearic*eicosenoic         18.93907  0.08206901 #> oleic*linoleic         -29898.57327 -0.85376517 #> oleic*linolenic            46.31955  0.02824076 #> oleic*arachidic          -164.69673 -0.06130890 #> oleic*eicosenoic           41.56957  0.02707203 #> linoleic*linolenic       -137.40795 -0.11440683 #> linoleic*arachidic       -381.98252 -0.19418246 #> linoleic*eicosenoic      -222.03097 -0.19746347 #> linolenic*arachidic        44.88053  0.48713418 #> linolenic*eicosenoic       21.37029  0.40579602 #> arachidic*eicosenoic       53.79682  0.62370668 m('data') #>     palmitic palmitoleic stearic oleic linoleic linolenic arachidic eicosenoic #> 1       1075          75     226  7823      672        36        60         29 #> 2       1088          73     224  7709      781        31        61         29 #> 3        911          54     246  8113      549        31        63         29 #> 4        966          57     240  7952      619        50        78         35 #> 5       1051          67     259  7771      672        50        80         46 #> 6        911          49     268  7924      678        51        70         44 #> 7        922          66     264  7990      618        49        56         29 #> 8       1100          61     235  7728      734        39        64         35 #> 9       1082          60     239  7745      709        46        83         33 #> 10      1037          55     213  7944      633        26        52         30 #> 11      1051          35     219  7978      605        21        65         24 #> 12      1036          59     235  7868      661        30        62         44 #> 13      1074          70     214  7728      747        50        79         33 #> 14       875          52     243  8018      655        41        79         32 #> 15       952          49     254  7795      780        50        75         41 #> 16      1155          98     201  7606      816        32        60         29 #> 17       943          94     183  7840      788        42        75         31 #> 18      1278          69     205  7344      957        45        70         28 #> 19       961          70     195  7958      742        46        75         30 #> 20       952          77     258  7820      736        43        78         33 #> 21      1074          67     236  7692      716        56        83         45 #> 22       995          46     288  7806      679        56        86         40 #> 23      1056          53     247  7703      700        54        89         51 #> 24      1065          39     234  7876      703        42        74         26 #> 25      1065          45     245  7779      696        47        82         38 #> 26      1315         139     230  7299      832        42        60         32 #> 27      1321         136     217  7174      950        43        63         30 #> 28      1359         115     246  7234      874        45        63         18 #> 29      1378         111     272  7127      940        46        64         23 #> 30      1295         109     245  7253      903        43        62         38 #> 31      1275         121     215  7285      892        40        68         41 #> 32      1336         120     318  7083      915        50        70         38 #> 33      1309         122     241  7257      870        46        72         35 #> 34      1340         114     189  7337      820        48        72         21 #> 35      1299         116     253  7309      823        40        69         27 #> 36      1221         107     221  7441      798        54        70         28 #> 37      1245          72     283  7395      829        44        67         28 #> 38      1285         129     244  7323      819        57        65         36 #> 39      1248         107     313  7299      840        46        66         33 #> 40      1356         106     236  7209      866        48        75         36 #> 41      1260         102     228  7354      870        49        64         28 #> 42      1261         121     312  7238      877        47        65         25 #> 43      1304         124     279  7160      928        48        61         37 #> 44      1344         117     287  7129      897        51        65         41 #> 45      1323          96     300  7351      757        47        54         26 #> 46      1292         117     215  7351      839        48        61         32 #> 47      1254         118     244  7394      786        46        71         24 #> 48      1312         131     259  7167      939        41        69         20 #> 49      1213         109     301  7261      925        47        65         31 #> 50      1359          98     351  7262      780        41        56         16 #> 51      1266          97     263  7435      743        45        69         29 #> 52      1298          99     311  7311      787        45        67         23 #> 53      1272         116     279  7258      872        43        72         27 #> 54      1278          87     332  7379      771        44        53         24 #> 55      1184         112     311  7391      819        48        57         28 #> 56      1382         110     268  7241      828        39        60         30 #> 57      1183         146     292  7580      618        38        51         23 #> 58      1261         153     219  7355      818        52        70         26 #> 59      1198         136     239  7639      633        27        55         19 #> 60      1225         134     232  7658      616        36        49         26 #> 61      1339         166     208  7190      923        40        69         25 #> 62      1132         157     240  7641      638        45        60         31 #> 63      1381         183     245  7385      609        47        70         25 #> 64      1409         128     257  7257      759        43        57         16 #> 65      1306         127     250  7254      869        47        68         24 #> 66      1372         120     250  7355      702        44        68         28 #> 67      1336         113     242  7293      855        38        60         18 #> 68      1401         151     238  7164      857        45        72         36 #> 69      1390         119     234  7236      823        40        62         41 #> 70      1432         152     281  7029      949        39        55         25 #> 71      1412         124     298  7182      790        45        68         28 #> 72      1366         147     291  7197      783        51        70         34 #> 73      1383         118     273  7282      738        45        68         29 #> 74      1283         102     263  7400      763        54        65         28 #> 75      1296         136     260  7380      780        48        51         18 #> 76      1287         108     287  7343      826        44        44         23 #> 77      1351         159     296  7229      810        36        60         22 #> 78      1241          97     268  7499      709        52        69         36 #> 79      1267         101     300  7230      898        74        65         34 #> 80      1235         138     252  7322      861        54        66         36 #> 81      1255         103     223  7395      848        47        56         30 #> 82      1454         183     196  7057     1014        27        46         19 #> 83      1347         194     197  7277      895        25        46         15 #> 84      1364         204     225  6929     1084        21        50         14 #> 85      1410         199     216  7130      955        21        48         19 #> 86      1384         178     208  7105      999        29        67         26 #> 87      1412         185     217  6842     1203        34        72         32 #> 88      1410         232     280  6715     1233        32        60         24 #> 89      1509         209     257  6647     1240        42        62         30 #> 90      1317         197     256  7036     1067        40        60         22 #> 91      1286         192     203  7132     1053        38        65         28 #> 92      1273         191     202  6862     1303        43        70         28 #> 93      1463         183     183  6747     1307        36        60         24 #> 94      1399         187     191  6861     1233        38        60         17 #> 95      1413         193     208  6875     1202        30        60         18 #> 96      1369         206     203  6953     1168        35        50         16 #> 97      1488         172     170  6920     1144        37        54         14 #> 98      1323         160     205  6911     1298        24        50         17 #> 99      1311         166     170  6902     1312        41        69         28 #> 100     1286         163     183  7040     1230        29        57         12 #> 101     1380         173     188  7038     1139        31        44         14 #> 102     1394         164     223  7086     1042        24        43         23 #> 103     1324         174     198  6863     1289        36        70         21 #> 104     1290         157     192  7000     1263        26        51         19 #> 105     1361         163     196  6888     1273        37        58         24 #> 106     1387         182     242  6913     1101        44        68         30 #> 107     1369         180     181  7000     1130        39        45         24 #> 108     1303         165     175  7025     1243        31        41         16 #> 109     1346         160     169  7072     1151        39        48         15 #> 110     1369         171     184  6937     1246        30        48         15 #> 111     1305         172     169  7004     1260        28        50         11 #> 112     1351         179     186  6935     1243        36        50         19 #> 113     1283         151     182  7000     1271        40        52         21 #> 114     1449         175     198  6883     1162        40        70         22 #> 115     1310         180     183  7054     1202        26        32         12 #> 116     1360         163     176  6901     1280        28        65         27 #> 117     1300         187     196  6920     1253        41        76         25 #> 118     1368         171     218  7010     1057        41        54         26 #> 119     1207         151     156  7159     1234        27        51         14 #> 120     1348         154     183  6917     1277        48        56         16 #> 121     1334         186     229  7261      827        34        56         20 #> 122     1301         156     207  7003     1229        41        48         14 #> 123     1226         181     213  6961     1230        47        74         26 #> 124     1201         168     190  7100     1216        43        64         16 #> 125     1297         153     177  7004     1260        35        60         16 #> 126     1248         163     158  7103     1222        31        60         14 #> 127     1335         159     197  6974     1220        36        60         17 #> 128     1219         167     171  7087     1254        35        50         16 #> 129     1318         179     177  7030     1194        35        42         25 #> 130     1264         167     166  7130     1187        22        52         12 #> 131     1201         175     201  7129     1193        36        49         15 #> 132     1252         180     181  7055     1214        31        59         38 #> 133     1273         182     209  6965     1191        43        74         23 #> 134     1351         179     170  7034     1154        35        66         10 #> 135     1336         155     212  7103     1086        33        55         20 #> 136     1499         201     182  6803     1204        30        56         24 #> 137     1425         198     193  7032     1041        31        52         17 #> 138     1358         204     227  6962     1109        41        65         34 #> 139     1346         181     257  7147      933        40        60         36 #> 140     1392         186     256  6732     1278        53        64         29 #> 141     1311         166     222  7006     1147        41        80         27 #> 142     1314         171     229  6923     1198        47        76         42 #> 143     1409         200     207  6842     1224        31        60         27 #> 144     1342         174     221  6993     1147        36        64         23 #> 145     1387         182     206  7100     1020        34        54         17 #> 146     1413         202     205  6920     1165        36        46         13 #> 147     1430         209     225  6800     1200        32        59         27 #> 148     1336         185     223  6956     1155        56        73         16 #> 149     1372         200     200  6916     1189        33        50         22 #> 150     1330         157     228  7055     1108        42        55         25 #> 151     1412         207     208  6822     1239        36        51         28 #> 152     1321         209     217  6948     1178        42        62         23 #> 153     1401         200     217  6980     1073        40        68         21 #> 154     1401         214     217  6734     1293        44        69         27 #> 155     1457         168     242  6724     1266        54        59         30 #> 156     1451         199     221  6835     1177        37        51         29 #> 157     1438         206     248  6806     1183        34        57         28 #> 158     1462         204     237  6644     1309        42        54         28 #> 159     1529         215     203  6602     1310        45        69         27 #> 160     1510         189     245  6752     1188        36        52         28 #> 161     1437         222     184  6803     1240        43        56         16 #> 162     1327         129     247  7024     1157        38        56         22 #> 163     1438         172     252  6630     1380        40        64         24 #> 164     1447         176     189  6849     1180        42        64         26 #> 165     1355         144     214  6972     1198        33        60         24 #> 166     1369         156     241  6890     1209        42        63         30 #> 167     1471         188     276  6697     1269        34        51         16 #> 168     1456         179     240  6738     1267        41        65         14 #> 169     1314         140     207  7020     1220        28        59         12 #> 170     1408         176     192  6909     1195        45        50         25 #> 171     1397         172     191  7107     1018        36        50         29 #> 172     1413         191     186  6937     1180        31        46         13 #> 173     1539         194     213  6764     1178        38        58         16 #> 174     1304         159     234  7019     1174        38        53         19 #> 175     1341         160     231  7033     1069        40        67         33 #> 176     1508         208     249  6641     1311        25        43         20 #> 177     1515         226     257  6595     1287        41        63         16 #> 178     1262         165     235  7120     1113        32        51         21 #> 179     1307         197     238  7003     1144        37        50         24 #> 180     1294         159     253  7009     1190        30        52         13 #> 181     1460         187     215  6843     1172        35        56         32 #> 182     1476         187     203  6837     1197        36        48         22 #> 183     1482         178     197  6814     1201        40        64         24 #> 184     1388         176     185  7008     1111        48        53         31 #> 185     1367         172     235  7066     1054        35        45         26 #> 186     1272         207     205  7152     1098        37        52         22 #> 187     1323         157     234  7132     1022        38        58         31 #> 188     1206         218     242  7193     1002        37        54         25 #> 189     1383         157     217  7018     1090        40        60         37 #> 190     1521         190     238  6956      986        36        50         23 #> 191     1350         168     227  6986     1165        29        58         17 #> 192     1422         181     218  6813     1230        30        59         21 #> 193     1298         166     224  6986     1162        34        65         31 #> 194     1447         236     245  6607     1336        33        51         21 #> 195     1347         197     211  6795     1300        32        59         34 #> 196     1339         170     253  6989     1110        29        63         23 #> 197     1388         183     216  6867     1208        28        61         21 #> 198     1527         260     232  6488     1370        31        45         20 #> 199     1495         237     236  6571     1318        32        58         26 #> 200     1487         246     251  6504     1390        29        53         19 #> 201     1399         180     232  6855     1190        32        66         22 #> 202     1489         215     242  6777     1145        30        60         22 #> 203     1339         166     226  6928     1198        30        60         23 #> 204     1482         246     238  6444     1462        27        50         20 #> 205     1434         172     255  6646     1354        27        59         25 #> 206     1347         156     214  6850     1313        25        48         19 #> 207     1340         158     233  6848     1272        32        63         25 #> 208     1453         180     244  6752     1238        34        54         23 #> 209     1306         149     226  7082     1097        33        61         24 #> 210     1349         161     217  6997     1138        31        62         23 #> 211     1254         151     205  7319      947        28        54         23 #> 212     1168         144     220  7230     1109        31        52         28 #> 213     1346         167     224  6959     1111        30        49         23 #> 214     1390         184     212  6898     1189        29        44         19 #> 215     1283         149     224  7077     1104        30        57         32 #> 216     1214         137     232  7269     1005        32        55         23 #> 217     1491         227     205  6941      988        33        68         34 #> 218     1479         218     207  7039      887        36        65         36 #> 219     1445         174     228  6875     1123        29        69         31 #> 220     1439         183     218  6775     1226        32        66         29 #> 221     1387         154     204  6991     1090        34        74         32 #> 222     1426         169     192  7025     1043        31        64         27 #> 223     1451         200     208  6980     1006        30        62         31 #> 224     1493         204     188  6913     1044        32        61         35 #> 225     1419         192     207  6996     1014        36        70         36 #> 226     1342         177     199  7172      952        34        65         33 #> 227     1349         152     236  7145      949        35        75         29 #> 228     1440         196     208  6938     1070        32        61         26 #> 229     1460         215     197  6918     1081        28        55         23 #> 230     1249         133     205  7417      827        33        72         33 #> 231     1348         159     238  7017     1081        31        67         25 #> 232     1341         155     244  6958     1144        32        68         26 #> 233     1398         149     204  7182      907        29        76         30 #> 234     1454         200     199  6910     1090        30        62         25 #> 235     1334         153     219  6928     1214        33        66         24 #> 236     1438         204     189  7107      910        33        63         27 #> 237     1303         138     212  7170     1016        34        69         25 #> 238     1323         147     210  7108     1070        33        61         20 #> 239     1417         169     207  6875     1184        34        57         27 #> 240     1360         167     225  6883     1220        31        55         27 #> 241     1420         179     214  6923     1121        33        56         27 #> 242     1472         218     214  6724     1238        29        53         23 #> 243     1368         174     205  7042     1066        31        57         26 #> 244     1367         173     228  6948     1141        32        53         24 #> 245     1403         173     209  6843     1210        33        63         33 #> 246     1413         197     206  6737     1387        34        60         31 #> 247     1201         138     207  7011     1269        37        64         35 #> 248     1359         180     207  6895     1203        33        61         30 #> 249     1518         198     225  6681     1243        29        57         24 #> 250     1434         185     189  6771     1269        30        62         25 #> 251     1367         162     179  6772     1368        33        64         27 #> 252     1461         181     197  6783     1246        26        57         23 #> 253     1368         161     198  7030     1095        33        59         31 #> 254     1419         159     215  6862     1193        35        60         31 #> 255     1514         162     298  6725     1119        45        93         30 #> 256     1328         171     253  6987     1030        38        83         39 #> 257     1469         160     337  6675     1127        44        94         36 #> 258     1222         133     227  7425      824        36        69         35 #> 259     1639         172     331  6510     1124        46        91         32 #> 260     1345         133     272  6801     1194        48        83         37 #> 261     1339         170     275  6838     1060        46        88         43 #> 262     1194         135     263  7277      889        44        95         41 #> 263     1112          68     375  7770      448        52        69         45 #> 264     1222          70     329  7605      566        48        67         43 #> 265     1136          72     341  7616      661        49        65         32 #> 266      926          41     277  7815      784        45        65         25 #> 267     1105          69     373  7714      532        51        68         37 #> 268     1109          79     305  7576      763        45        64         36 #> 269     1284          93     265  7235      893        43        77         46 #> 270     1120          69     277  7416      946        42        59         36 #> 271      916          52     281  7870      694        42        64         58 #> 272      905          49     288  7747      812        49        71         56 #> 273     1206          55     287  7329      935        44        74         42 #> 274     1457         182     267  7020      863        41        84         37 #> 275     1327         140     193  7328      823        36        87         35 #> 276     1303         100     251  7045     1049        40        86         40 #> 277     1444         175     259  6876     1027        34        78         32 #> 278     1505         243     226  6962      858        30        72         27 #> 279     1429         162     223  6917     1041        37        77         40 #> 280     1491         162     211  6994      928        37        97         38 #> 281     1393         128     211  7189      870        38        93         40 #> 282     1404         134     210  7110      923        40       101         43 #> 283     1222         130     214  7374      856        38        89         45 #> 284     1153          74     316  7593      705        42        64         32 #> 285     1169          76     307  7553      728        43        69         32 #> 286     1369         104     237  7375      775        39        70         15 #> 287      993          58     267  7743      773        41        62         44 #> 288      980          53     254  7719      815        44        69         47 #> 289      967          55     273  7692      833        45        63         47 #> 290     1128          73     354  7527      728        44        76         38 #> 291     1188          85     273  7445      814        44        73         42 #> 292     1257          95     247  7405      812        43        70         35 #> 293     1262          88     301  7471      704        43        71         31 #> 294     1283         153     196  7107     1115        37        60         28 #> 295     1263         155     199  7140     1148        31        42         18 #> 296     1369         158     215  7160      958        38        69         32 #> 297     1353         172     175  6965     1212        28        75         19 #> 298     1187         139     185  7427      952        29        56         22 #> 299     1732         231     156  6437     1313        45        62         23 #> 300     1620         255     166  6628     1212        29        62         27 #> 301     1543         172     193  6740     1157        52        87         34 #> 302     1498         170     195  6804     1206        35        66         23 #> 303     1399         169     171  7011     1100        36        72         16 #> 304     1293         156     191  7101     1111        32        60         31 #> 305     1420         175     152  7004     1149        27        50         20 #> 306     1721         238     255  6300     1350        35        70         28 #> 307     1742         221     156  6415     1315        43        82         23 #> 308     1391         187     189  6975     1062        52        70         45 #> 309     1517         206     249  6680     1205        33        80         27 #> 310     1269         157     193  7140     1148        31        40         18 #> 311     1577         204     208  6732     1183        20        52         20 #> 312     1590         241     195  6705     1149        27        68         21 #> 313     1621         280     197  6608     1179        28        58         27 #> 314     1753         275     236  6367     1214        23        61         27 #> 315     1679         260     177  6568     1191        30        59         33 #> 316     1419         203     176  6973     1083        38        78         27 #> 317     1693         236     174  6499     1204        51       102         37 #> 318     1692         270     234  6499     1196        31        59         15 #> 319     1638         252     215  6570     1199        39        53         29 #> 320     1497         247     219  6621     1270        36        73         32 #> 321     1442         222     194  6677     1314        36        72         38 #> 322     1680         270     170  6440     1310        31        62         28 #> 323     1463         164     185  6909     1154        49        58         17 #> 324     1129         120     222  7272     1112        43        98          2 #> 325     1042         135     210  7376     1116        35        90          3 #> 326     1103          96     210  7380     1085        32        94          3 #> 327     1118          97     221  7279     1154        35        94          2 #> 328     1052          95     215  7388     1126        31        92          1 #> 329     1116         102     231  7290     1168        26        66          1 #> 330     1108         132     231  7319     1101        20        66          2 #> 331     1129         108     212  7386     1074        28        62          3 #> 332     1085          91     223  7384     1126        28        62          3 #> 333     1104         103     233  7322     1147        27        61          2 #> 334     1098          88     212  7338     1140        28        67          1 #> 335     1135          98     251  7120     1314        20        61          2 #> 336     1158         108     245  7065     1326        22        75          1 #> 337     1133         110     241  7080     1342        21        68          3 #> 338     1095         125     250  7120     1305        21        83          1 #> 339     1201          87     238  6990     1383        25        75          3 #> 340     1213         112     245  7007     1335        22        65          3 #> 341     1108          92     231  7367     1110        29        62          3 #> 342     1075         103     207  7413     1096        32        68          2 #> 343     1059          96     228  7386     1128        25        72          2 #> 344     1176          92     207  7347     1057        35        82          1 #> 345     1159          98     213  7320     1108        38        64          1 #> 346     1132          80     201  7398     1095        27        67          2 #> 347     1107          75     220  7399     1096        29        90          1 #> 348     1092         104     234  7355     1126        28        58          2 #> 349     1119          81     219  7409     1057        33        81          2 #> 350     1106          93     212  7381     1104        35        68          1 #> 351     1047         101     238  7385     1120        28        89          1 #> 352     1165          99     214  7331     1101        22        67          3 #> 353     1158          84     201  7327     1123        29        77          2 #> 354     1095          88     203  7415     1093        37        78          1 #> 355     1176          75     205  7396     1107        33        74          2 #> 356     1103         109     220  7335     1140        28        59          2 #> 357     1112          92     209  7356     1125        32        73          2 #> 358     1091          93     222  7377     1113        20        53          2 #> 359     1080          98     219  7371     1125        33        78          1 #> 360     1051         108     227  7403     1114        30        66          3 #> 361     1096          84     211  7415     1091        30        71          2 #> 362     1142          97     225  7341     1101        28        65          1 #> 363     1047          96     236  7399     1107        32        80          3 #> 364     1114          86     210  7359     1116        31        83          2 #> 365     1140          93     241  7324     1098        23        74          1 #> 366     1075          91     200  7410     1107        36        80          1 #> 367     1092         106     219  7427     1125        33        77          1 #> 368     1076          95     204  7408     1130        27        79          2 #> 369     1178          89     201  7381     1099        34        87          2 #> 370     1095         104     223  7367     1111        43        56          2 #> 371     1166          97     272  6971     1390        20        83          3 #> 372     1154         119     257  7130     1253        22        61          1 #> 373     1177         111     241  6882     1470        22        95          2 #> 374     1160          96     240  7043     1357        24        79          2 #> 375     1122         104     241  7145     1313        15        58          1 #> 376     1132          99     257  7065     1362        24        90          3 #> 377     1096         100     260  7162     1282        25        74          2 #> 378     1131          87     233  7144     1307        25        72          3 #> 379     1184         105     258  7020     1340        26        66          2 #> 380     1135          94     235  7123     1320        24        67          2 #> 381     1084          96     240  7164     1330        28        57          1 #> 382     1086         127     252  7159     1285        28        62          2 #> 383     1140          95     258  7085     1347        23        71          3 #> 384     1138         101     254  7103     1310        25        68          1 #> 385     1159         110     261  7068     1297        27        77          2 #> 386     1051          78     211  7421     1146        30        82          2 #> 387     1048          79     213  7439     1130        28        61          2 #> 388     1061          86     220  7421     1102        29        79          3 #> 389     1105          88     210  7353     1142        28        72          1 #> 390     1145          35     237  7208     1118        20        46          2 #> 391     1049          96     219  7303     1168        22        47          2 #> 392     1105         120     218  7302     1158        23        45          3 #> 393     1030          84     214  7403     1177        21        70          1 #> 394     1070          98     215  7280     1240        28        68          3 #> 395     1103          81     208  7310     1177        30        90          3 #> 396     1040         101     205  7368     1176        25        85          3 #> 397     1100          95     210  7320     1113        22        72          3 #> 398     1118          85     199  7415     1060        36        86          3 #> 399     1065          98     230  7345     1163        24        74          1 #> 400     1131          78     221  7358     1120        22        69          2 #> 401     1080         120     218  7296     1145        35       105          2 #> 402     1075          86     231  7403     1109        22        73          3 #> 403     1040         103     228  7364     1173        25        66          2 #> 404     1128          82     203  7320     1148        30        88          1 #> 405     1060         111     231  7363     1149        20        65          1 #> 406     1103          78     220  7365     1149        20        65          2 #> 407     1110          91     201  7318     1185        24        74          2 #> 408     1091         108     218  7383     1183        28        88          3 #> 409     1094          96     220  7341     1127        26        96          2 #> 410     1131          87     208  7170     1308        28        57          2 #> 411     1175         108     214  7076     1307        33        85          2 #> 412     1076          77     202  7243     1305        29        67          1 #> 413     1120          90     240  7068     1383        23        75          1 #> 414     1152         111     238  7080     1372        25        81          2 #> 415     1141          95     250  7035     1388        22        68          2 #> 416     1098         103     267  7135     1301        24        76          2 #> 417     1126         100     236  7062     1380        26        69          1 #> 418     1087          89     243  7200     1302        18        60          1 #> 419     1115          96     236  7085     1372        20        75          2 #> 420     1178          92     241  7006     1376        22        84          1 #> 421     1162         106     242  7025     1368        25        71          2 #> 422     1085          70     180  7955      605        20        50          1 #> 423     1085          70     185  7955      600        25        55          1 #> 424     1090          60     190  7950      600        28        47          2 #> 425     1080          65     189  7960      602        35        20          1 #> 426     1090          60     195  7955      600        28        42          2 #> 427     1105          55     200  7900      600        37        55          2 #> 428     1060          75     175  7975      610        20        55          2 #> 429     1050          70     170  7977      605        28        65          1 #> 430     1100          55     198  7905      600        35        50          3 #> 431     1065          65     178  7965      605        22        65          2 #> 432     1085          60     188  7955      602        30        50          2 #> 433     1080          65     180  7960      605        25        55          1 #> 434     1085          60     190  7955      602        30        53          1 #> 435     1075          68     195  7960      602        20        40          3 #> 436     1090          58     192  7950      600        35        40          3 #> 437     1095          60     198  7945      600        38        34          2 #> 438     1090          58     195  7950      600        30        42          2 #> 439     1095          58     198  7950      602        35        32          1 #> 440     1090          58     195  7940      600        35        42          2 #> 441     1095          58     198  7945      600        35        34          1 #> 442     1095          55     200  7940      600        35        45          3 #> 443     1080          70     188  7965      608        28        36          3 #> 444     1090          60     195  7950      600        32        38          2 #> 445     1105          55     200  7900      595        39        56          1 #> 446     1110          50     205  7900      595        40        52          1 #> 447     1075          70     198  7978      608        28        33          2 #> 448     1075          65     185  7980      608        35        42          3 #> 449     1065          75     180  7975      610        25        50          3 #> 450     1070          75     188  7980      602        22        45          2 #> 451     1070          75     188  7980      602        22        45          1 #> 452     1100          70     200  7910      610        39        44          1 #> 453     1075          70     185  7960      610        22        58          2 #> 454     1050          78     175  7990      610        18        59          3 #> 455     1090          60     198  7945      600        32        35          2 #> 456     1050          78     188  7990      608        28        23          3 #> 457     1075          70     190  7975      605        28        27          3 #> 458     1098          54     202  7945      595        42        32          2 #> 459     1105          15     198  8005      575        52        20          2 #> 460     1110          75     220  7915      510        55        65          2 #> 461     1058          50     178  7988      626        40        55          3 #> 462     1115          30     225  7955      600        55        15          2 #> 463     1105          30     198  7995      570        52        20          3 #> 464     1072          49     178  7980      615        48        48          2 #> 465     1110          15     210  7990      570        50        20          2 #> 466     1110          80     215  7910      525        50        60          1 #> 467     1055          60     175  7985      620        45        50          1 #> 468     1100          80     215  7930      535        45        60          2 #> 469     1105          55     205  7965      600        25        20          2 #> 470     1095          50     210  7948      600        25        35          2 #> 471     1110          50     220  7950      600        52        10          2 #> 472     1092          37     210  7955      600        40        40          3 #> 473     1290          60     260  7550      670        70       100          2 #> 474     1170          80     230  7690      720        40        70          1 #> 475     1100          90     250  7680      760        30        80          2 #> 476     1120          70     240  7720      730        40        80          2 #> 477     1160          70     250  7650      750        30        90          1 #> 478     1200          50     210  7770      690        20        50          3 #> 479     1140          50     200  7990      580        10        20          1 #> 480     1220          80     240  7610      760        30        60          2 #> 481     1180          90     250  7520      800        50       100          2 #> 482     1210          70     250  7560      780        40        90          2 #> 483     1220          80     220  7540      770        60       100          2 #> 484     1180         100     190  7520      820        50       100          1 #> 485     1160          90     220  7580      790        40        90          1 #> 486     1130         100     240  7620      780        30        90          1 #> 487     1080         100     260  7710      750        20        70          2 #> 488     1090          90     280  7730      720        50       100          1 #> 489     1020         100     270  7770      710        40        90          1 #> 490     1090          90     250  7680      760        60        80          1 #> 491     1120         100     260  7720      680        30        80          2 #> 492     1080          80     240  7830      670        30        70          2 #> 493     1160          70     230  7860      640        10        20          1 #> 494     1100          80     240  7820      670        20        70          2 #> 495     1050         100     250  7930      630        10        30          3 #> 496     1090          90     270  7780      690        30        50          3 #> 497     1120          80     260  7750      680        30        80          3 #> 498     1120         100     250  7680      730        40        70          2 #> 499     1190          90     230  7670      710        30        80          2 #> 500     1170         110     250  7620      740        20        90          1 #> 501     1120         100     230  7720      730        20        70          1 #> 502     1190          80     270  7690      720        10        40          2 #> 503     1400          90     270  7420      800         0        20          2 #> 504     1350          80     250  7520      760        10        30          1 #> 505     1090          60     220  7890      670        10        60          2 #> 506     1150          90     230  7790      650        30        60          1 #> 507     1240          90     220  7820      590        10        30          1 #> 508     1220         100     240  7890      530         0        10          2 #> 509     1180          80     250  7870      580        10        30          2 #> 510     1170         110     240  7730      630        30        90          1 #> 511     1170         100     280  7710      640        20        70          3 #> 512     1180          80     220  7790      680        10        40          1 #> 513     1200          90     240  7820      590        10        50          2 #> 514     1140          90     240  7880      570        20        60          3 #> 515     1160          70     210  7870      580        30        80          3 #> 516     1130          80     250  7780      650        40        60          3 #> 517     1150          80     240  7800      630        30        70          2 #> 518     1110          70     240  7820      670        20        70          3 #> 519     1150          70     220  7850      620        20        40          2 #> 520     1180          80     240  7760      670        20        50          2 #> 521     1020          80     250  7920      680        10        30          3 #> 522      610          80     230  8410      650         0        20          3 #> 523     1190         150     290  7340     1020         0        10          2 #> 524     1110         130     210  7550     1000         0         0          1 #> 525     1020         100     220  7530     1030         0         0          3 #> 526     1070         120     210  7600      990         0        10          3 #> 527     1010          90     350  7480     1050        10        10          1 #> 528     1060         140     240  7680      830        10        40          2 #> 529     1060         140     270  7620      880        10        20          1 #> 530     1030         100     230  7740      900         0         0          2 #> 531     1120         130     250  7530      970         0         0          3 #> 532     1030         110     220  7760      980         0         0          2 #> 533     1070         100     230  7600      990        10         0          1 #> 534     1140         180     220  7610      850        10        10          2 #> 535     1090         180     230  7590      860        10        40          2 #> 536      980         110     300  7720      910        10         0          3 #> 537      980          90     330  7540     1040         0         0          2 #> 538      960          90     200  7810      940         0         0          2 #> 539      990          90     210  7780      930         0         0          2 #> 540     1060         120     210  7600     1010         0         0          1 #> 541     1240         150     250  7610      730        10        10          1 #> 542     1060          90     310  7850      690         0         0          2 #> 543     1020         100     290  7620      960         0        10          2 #> 544      970          90     220  7700     1020         0         0          3 #> 545     1180         130     220  7450     1010         0        10          2 #> 546     1060         140     240  7690      850        10        10          1 #> 547      990         100     250  7630     1030         0         0          3 #> 548     1010          90     350  7630      940        10         0          3 #> 549     1040          90     250  7780      820        10        10          1 #> 550     1040          90     250  7810      810        10        10          2 #> 551     1020          90     350  7620      920        10         0          3 #> 552     1020          90     260  7620     1010         0         0          3 #> 553     1010          90     350  7610      930        10         0          3 #> 554      920         110     340  7720      910         0         0          3 #> 555     1030         100     250  7710      900         0        10          2 #> 556      960          90     300  7820      830         0         0          3 #> 557     1030         110     210  7810      840         0         0          1 #> 558     1010         100     240  7710      910        10        20          2 #> 559     1020          90     240  7800      850         0         0          2 #> 560     1120          90     300  7650      830         0        10          1 #> 561     1090          90     290  7710      800        10         0          2 #> 562     1100         120     280  7630      770        10        10          2 #> 563     1090          80     240  7820      760        10         0          2 #> 564     1150          90     250  7720      810         0        10          3 #> 565     1110          90     230  7810      750         0        10          2 #> 566     1010         110     210  7720      950         0         0          1 #> 567     1070         100     220  7730      870        10        10          2 #> 568     1280         110     290  7490      790        10        10          2 #> 569     1060         100     270  7740      810        10        10          3 #> 570     1010          90     210  7720      970         0         0          2 #> 571      990         120     250  7750      870        10        10          2 #> 572      960          80     240  7950      740        10        20          2 m('grid') #>                        x y #> palmitic*palmitoleic   1 2 #> palmitic*stearic       1 3 #> palmitic*oleic         1 4 #> palmitic*linoleic      1 5 #> palmitic*linolenic     1 6 #> palmitic*arachidic     1 7 #> palmitic*eicosenoic    1 8 #> palmitoleic*stearic    2 3 #> palmitoleic*oleic      2 4 #> palmitoleic*linoleic   2 5 #> palmitoleic*linolenic  2 6 #> palmitoleic*arachidic  2 7 #> palmitoleic*eicosenoic 2 8 #> stearic*oleic          3 4 #> stearic*linoleic       3 5 #> stearic*linolenic      3 6 #> stearic*arachidic      3 7 #> stearic*eicosenoic     3 8 #> oleic*linoleic         4 5 #> oleic*linolenic        4 6 #> oleic*arachidic        4 7 #> oleic*eicosenoic       4 8 #> linoleic*linolenic     5 6 #> linoleic*arachidic     5 7 #> linoleic*eicosenoic    5 8 #> linolenic*arachidic    6 7 #> linolenic*eicosenoic   6 8 #> arachidic*eicosenoic   7 8 m('measures') #> [1] \"cov\" \"cor\""},{"path":"https://great-northern-diver.github.io/loon/reference/minority.html","id":null,"dir":"Reference","previous_headings":"","what":"Canadian Visible Minority Data 2006 — minority","title":"Canadian Visible Minority Data 2006 — minority","text":"Population census count various named   visible minority groups 33 major census metropolitan   areas Canada 2006. data 2006 Canadian census, publicly available   Statistics Canada.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/minority.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canadian Visible Minority Data 2006 — minority","text":"","code":"minority"},{"path":"https://great-northern-diver.github.io/loon/reference/minority.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Canadian Visible Minority Data 2006 — minority","text":"data frame 33 rows 18 variates Arab Number identifying `Arab`. Black Number identifying `Black`. Chinese Number identifying `Chinese`. Filipino Number identifying `Filipino`. Japanese Number identifying `Japanese`. Korean Number identifying `Korean`. Latin.American Number identifying `Latin American`. Multiple.visible.minority Number identifying member  one visible minority. South.Asian Number identifying `South Asian`. Southeast.Asian Number identifying `Southeast Asian`. Total.population Total population metropolitan census area. Visible.minority..included.elsewhere Number identifying  member visible minority included elsewhere. Visible.minority.population Total number identifying  member visible minority. West.Asian Number identifying `West Asian`. lat, long Latitude longitude (degrees) metropolitan census area. googleLat, googleLong Latitude longitude degrees determined  using Google Maps Geocoding API. rownames(minority) names metropolitan areas cities.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/minority.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Canadian Visible Minority Data 2006 — minority","text":"Statistics Canada","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/names.loon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get State Names of Loon Object — names.loon","title":"Get State Names of Loon Object — names.loon","text":"States loon objects can accessed `[` l_cget modified l_configure.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/names.loon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get State Names of Loon Object — names.loon","text":"","code":"# S3 method for class 'loon' names(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/names.loon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get State Names of Loon Object — names.loon","text":"x loon object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/names.loon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get State Names of Loon Object — names.loon","text":"state names","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a n-d transition graph — ndtransitiongraph","title":"Create a n-d transition graph — ndtransitiongraph","text":"n-d transition graph k-d nodes edges connect   two nodes n-d subspace","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a n-d transition graph — ndtransitiongraph","text":"","code":"ndtransitiongraph(nodes, n, separator = \":\")"},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a n-d transition graph — ndtransitiongraph","text":"nodes node names graph n integer, dimension edge represent separator character separates spaces node names","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a n-d transition graph — ndtransitiongraph","text":"graph object class loongraph","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a n-d transition graph — ndtransitiongraph","text":"information run: l_help(\"learn_R_display_graph.html.html#graph-utilities\")","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/ndtransitiongraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a n-d transition graph — ndtransitiongraph","text":"","code":"g <- ndtransitiongraph(nodes=c('A:B', 'A:F', 'B:C', 'B:F'), n=3, separator=':')"},{"path":"https://great-northern-diver.github.io/loon/reference/olive.html","id":null,"dir":"Reference","previous_headings":"","what":"Fatty Acid Composition of Italian Olive Oils — olive","title":"Fatty Acid Composition of Italian Olive Oils — olive","text":"data set records percentage composition 8 fatty   acids found lipid fraction 572 Italian olive   oils. oils samples taken three Italian regions varying number   areas within region.  regions areas recorded   shown following table:","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/olive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fatty Acid Composition of Italian Olive Oils — olive","text":"","code":"olive"},{"path":"https://great-northern-diver.github.io/loon/reference/olive.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fatty Acid Composition of Italian Olive Oils — olive","text":"data frame containing 572 cases 10 variates. Region Italian olive oil general growing region: North, South, Sardinia Area \"Administrative Regions\" Italy (e.g. Sicily, Umbria), parts region like  \"Coastal-Sardinia\" \"Inland-Sardinia\" \"North-Apulia\" \"South-Apulia\". Administrative regions larger  , contain, Italian provinces. palmitic Percentage (hundredths percent) Palmitic acid, hexadecanoic acid olive oil.  common saturated fatty acid found animals, plants micro-organisms. palmitoleic Percentage (hundredths percent) Palmitoleic acid, omega-7 monounsaturated fatty acid. stearic Percentage (hundredths percent) Stearic acid, saturated fatty acid. waxy solid  name comes Greek word tallow. Like palmitic acid,  one common saturated fatty acids found nature. oleic Percentage (hundredths percent) Oleic acid, common fatty acid occurring nature found  various animal vegetable fats oils. linoleic Percentage (hundredths percent) Linoleic acid, polyunsaturated omega-6 fatty acid.  one two essential fatty acids humans. linolenic Percentage (hundredths percent) Linolenic acid, type fatty acid. can refer one  two types fatty acids mixture .  One omega-3 essential fatty acid; omega-6. arachidic Percentage (hundredths percent) Arachidic acid, also known eicosanoic acid, saturated fatty acid  used production detergents, photographic materials lubricants. eicosenoic Percentage (hundredths percent) Eicosenoic acid, may refer one three closely related  fatty acids: gadoleic acid (omega-11), gondoic acid (omega-9), paullinic acid (omega-7). Note percentages (hundredths percent) sum approximately 10,000 oil (row).","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/olive.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fatty Acid Composition of Italian Olive Oils — olive","text":"Forina, M., Armanino, C., Lanteri, S., Tiscornia, E. (1983)   \"Classification Olive Oils Fatty Acid Composition\", Food   Research Data Analysis (Martens, H., Russwurm, H., eds.), p. 189,   Applied Science Publ., Barking.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/oliveAcids.html","id":null,"dir":"Reference","previous_headings":"","what":"Just the Fatty Acid Composition of Italian Olive Oils — oliveAcids","title":"Just the Fatty Acid Composition of Italian Olive Oils — oliveAcids","text":"olive data set minus Region   Area variables.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/oliveAcids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Just the Fatty Acid Composition of Italian Olive Oils — oliveAcids","text":"","code":"oliveAcids"},{"path":"https://great-northern-diver.github.io/loon/reference/oliveAcids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Just the Fatty Acid Composition of Italian Olive Oils — oliveAcids","text":"data frame containing 572 cases 8 variates.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/oliveLocations.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic location of each Italian olive growing area named in the olive data. — oliveLocations","title":"Geographic location of each Italian olive growing area named in the olive data. — oliveLocations","text":"longitude latitude Area  named olive data set.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/oliveLocations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic location of each Italian olive growing area named in the olive data. — oliveLocations","text":"","code":"oliveLocations"},{"path":"https://great-northern-diver.github.io/loon/reference/oliveLocations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geographic location of each Italian olive growing area named in the olive data. — oliveLocations","text":"data frame containing 9 cases 3 variates. Area name Italian growing area olive oil. lat, long latitude longitude degrees approximate  centre named growing area","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/oliveLocations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geographic location of each Italian olive growing area named in the olive data. — oliveLocations","text":"https://www.latlong.net","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loon.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the current view of any loon plot in the current device. — plot.loon","title":"Plot the current view of any loon plot in the current device. — plot.loon","text":"wrapper grid.loon() simplify plotting loon plots device.  Frequent users recommended use grid.loon() control.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the current view of any loon plot in the current device. — plot.loon","text":"","code":"# S3 method for class 'loon' plot(x, y = NULL, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the current view of any loon plot in the current device. — plot.loon","text":"x loon plot plotted current device y NULL, ignored. ... parameters passed loonGrob","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the current view of any loon plot in the current device. — plot.loon","text":"invisible()","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the current view of any loon plot in the current device. — plot.loon","text":"","code":"if(interactive()) {   loonPlot <- with(iris, l_plot(Sepal.Length, Sepal.Width))   loonPlot['color'] <- iris$Species   loonPlot['selected'] <- iris$Species == \"versicolor\"   l_scaleto_selected(loonPlot)   loonPlot['showGuides'] <- TRUE   plot(loonPlot) }"},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loongraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a loon graph object with base R graphics — plot.loongraph","title":"Plot a loon graph object with base R graphics — plot.loongraph","text":"function converts loongraph object one class   graph plots respective plot method.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loongraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a loon graph object with base R graphics — plot.loongraph","text":"","code":"# S3 method for class 'loongraph' plot(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loongraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a loon graph object with base R graphics — plot.loongraph","text":"x object class loongraph ... arguments forwarded method","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/plot.loongraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a loon graph object with base R graphics — plot.loongraph","text":"","code":"g <- loongraph(letters[1:4], letters[1:3], letters[2:4], FALSE)"},{"path":"https://great-northern-diver.github.io/loon/reference/print.l_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a summary of a loon layer object — print.l_layer","title":"Print a summary of a loon layer object — print.l_layer","text":"Prints layer label layer type","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/print.l_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a summary of a loon layer object — print.l_layer","text":"","code":"# S3 method for class 'l_layer' print(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/print.l_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a summary of a loon layer object — print.l_layer","text":"x l_layer object ... additional arguments used methiod","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function names from measure1d object — print.measures1d","title":"Print function names from measure1d object — print.measures1d","text":"Prints function names measure1d object using   print.default.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function names from measure1d object — print.measures1d","text":"","code":"# S3 method for class 'measures1d' print(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function names from measure1d object — print.measures1d","text":"x measures1d object ... arguments passed print.default","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function names from measure2d object — print.measures2d","title":"Print function names from measure2d object — print.measures2d","text":"Prints function names measure2d object using   print.default.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function names from measure2d object — print.measures2d","text":"","code":"# S3 method for class 'measures2d' print(x, ...)"},{"path":"https://great-northern-diver.github.io/loon/reference/print.measures2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function names from measure2d object — print.measures2d","text":"x measures2d object ... arguments passed print.default","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"Function creates 2d measures object can used   l_ng_plots l_ng_ranges.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"","code":"scagnostics2d(   data,   scagnostics = c(\"Clumpy\", \"Monotonic\", \"Convex\", \"Stringy\", \"Skinny\", \"Outlying\",     \"Sparse\", \"Striated\", \"Skewed\"),   separator = \":\" )"},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"data data.frame data used calculate measures scagnostics vector valid scanostics meausure names, .e \"Clumpy\", \"Monotonic\", \"Convex\", \"Stringy\", \"Skinny\", \"Outlying\", \"Sparse\", \"Striated\", \"Skewed\". Also prefix \"\" can added measure equals 1-measure. separator string separates variable names 2d graph nodes","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"measures object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"information run: l_help(\"learn_R_display_graph.html#measures\")","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/scagnostics2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Closure of Two Dimensional Scagnostic Measures — scagnostics2d","text":"","code":"if (FALSE) { # \\dontrun{ m <- scagnostics2d(oliveAcids, separator='**') m m() m(olive$palmitoleic > 80) m('data') m('grid') m('measures') } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/spAsList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","title":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","text":"spAsList helper function rarely called directly user. S3 generic function takes spatial data object returns components (polygons, lines, et cetera) list. element list. Different S3 methods implemented various spatial data types.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/spAsList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","text":"","code":"spAsList(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/spAsList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","text":"x sp spatial data object.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/spAsList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","text":"list relevant components spatial data object.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/spAsList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of polygons or lines from a spatial data object from the sp package. — spAsList","text":"","code":"if (FALSE) { # \\dontrun{ library(sp) library(rworldmap) world <- getMap(resolution = \"coarse\") class(world) isS4(world) xy <- spAsList(world)  names(xy) # because tree has same depth for every leaf unlist is ok # This is not true otherwise. uxy <- spunlist(xy) unlist(xy, recursive=FALSE) names(uxy)  # here, unlist would be wrong. } # }"},{"path":"https://great-northern-diver.github.io/loon/reference/spunlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","title":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","text":"spunlist simple helper function taking output spAsList. helper function rarely called directly user. base unlist.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/spunlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","text":"","code":"spunlist(x)"},{"path":"https://great-northern-diver.github.io/loon/reference/spunlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","text":"x list spatial data object.","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/spunlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","text":"appropriately flattened list relevant components spatial data object.","code":""},{"path":[]},{"path":"https://great-northern-diver.github.io/loon/reference/spunlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a flat list of polygon specifications from the list of sp components returned by spAsList — spunlist","text":"","code":"a <- list(list(x=1:2, y=1:2),           list(list(x=1:3, y=1:3),                list(x=1:4, y=1:4))) spunlist(a) #> [[1]] #> [[1]]$x #> [1] 1 2 #>  #> [[1]]$y #> [1] 1 2 #>  #>  #> [[2]] #> [[2]]$x #> [1] 1 2 3 #>  #> [[2]]$y #> [1] 1 2 3 #>  #>  #> [[3]] #> [[3]]$x #> [1] 1 2 3 4 #>  #> [[3]]$y #> [1] 1 2 3 4 #>  #>   # Compare to unlist(a, recursive=TRUE) #> x1 x2 y1 y2 x1 x2 x3 y1 y2 y3 x1 x2 x3 x4 y1 y2 y3 y4  #>  1  2  1  2  1  2  3  1  2  3  1  2  3  4  1  2  3  4  # or to unlist(a, recursive=FALSE) #> $x #> [1] 1 2 #>  #> $y #> [1] 1 2 #>  #> [[3]] #> [[3]]$x #> [1] 1 2 3 #>  #> [[3]]$y #> [1] 1 2 3 #>  #>  #> [[4]] #> [[4]]$x #> [1] 1 2 3 4 #>  #> [[4]]$y #> [1] 1 2 3 4 #>  #>"},{"path":"https://great-northern-diver.github.io/loon/reference/tcl_img_2_r_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"A tk Image Object to a Raster Object — tcl_img_2_r_raster","title":"A tk Image Object to a Raster Object — tcl_img_2_r_raster","text":"Turn tk image object R raster object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/tcl_img_2_r_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tk Image Object to a Raster Object — tcl_img_2_r_raster","text":"","code":"tcl_img_2_r_raster(img)"},{"path":"https://great-northern-diver.github.io/loon/reference/tcl_img_2_r_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A tk Image Object to a Raster Object — tcl_img_2_r_raster","text":"img tk image object","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/tcl_img_2_r_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tk Image Object to a Raster Object — tcl_img_2_r_raster","text":"","code":"if(requireNamespace(\"grid\")) { puglia <- list.files(file.path(find.package(package = 'loon'), \"images\"),                      full.names = TRUE)[1L] # `img` is a tk image object img <- setNames(l_image_import_files(puglia),                 tools::file_path_sans_ext(basename(puglia))) raster <- tcl_img_2_r_raster(img) grid::grid.newpage() grid::grid.raster(raster) }"},{"path":"https://great-northern-diver.github.io/loon/reference/tkcolors.html","id":null,"dir":"Reference","previous_headings":"","what":"List the valid Tk color names — tkcolors","title":"List the valid Tk color names — tkcolors","text":"core Loon implemented Tcl Tk. Hence,   defining colors using color names, Loon uses Tcl color representation   R. colors taken Tk sources:   doc/colors.n. want make sure color names represented exactly   R can convert color names hexencoded color   strings, see examples .","code":""},{"path":"https://great-northern-diver.github.io/loon/reference/tkcolors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the valid Tk color names — tkcolors","text":"","code":"tkcolors()"},{"path":"https://great-northern-diver.github.io/loon/reference/tkcolors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the valid Tk color names — tkcolors","text":"","code":"# check if R colors names and TK color names are the same setdiff(tolower(colors()), tolower(tkcolors())) #> character(0) setdiff(tolower(tkcolors()), tolower(colors())) #>  [1] \"alice\"      \"antique\"    \"blanched\"   \"almond\"     \"cadet\"      #>  [6] \"cornflower\" \"dark\"       \"olive\"      \"sea\"        \"slate\"      #> [11] \"deep\"       \"sky\"        \"dim\"        \"dodger\"     \"floral\"     #> [16] \"forest\"     \"ghost\"      \"hot\"        \"indian\"     \"blush\"      #> [21] \"lawn\"       \"lemon\"      \"chiffon\"    \"light\"      \"steel\"      #> [26] \"lime\"       \"medium\"     \"spring\"     \"midnight\"   \"mint\"       #> [31] \"cream\"      \"misty\"      \"rose\"       \"navajo\"     \"old\"        #> [36] \"lace\"       \"drab\"       \"pale\"       \"papaya\"     \"whip\"       #> [41] \"peach\"      \"puff\"       \"powder\"     \"rosy\"       \"royal\"      #> [46] \"saddle\"     \"sandy\"      \"smoke\"       # hence there are currently more valid color names in Tk # than there are in R  # Let's compare the colors of the R color names in R and Tk tohex <- function(x) {     sapply(x, function(xi) {         crgb <- as.vector(col2rgb(xi))         rgb(crgb[1], crgb[2], crgb[3], maxColorValue = 255)     }) }  df <- data.frame(     R_col = tohex(colors()),     Tcl_col = hex12tohex6(l_hexcolor(colors())),     row.names = colors(),     stringsAsFactors = FALSE )  df_diff <- df[df$R_col != df$Tcl_col,]  if (requireNamespace(\"grid\", quietly = TRUE)) {   grid::grid.newpage()   grid::pushViewport(grid::plotViewport())    x_col <- grid::unit(0, \"npc\")   x_R <- grid::unit(6, \"lines\")   x_Tcl <- grid::unit(10, \"lines\")    grid::grid.text('color', x=x_col, y=grid::unit(1, \"npc\"),                   just='left', gp=grid::gpar(fontface='bold'))   grid::grid.text('R', x=x_R, y=grid::unit(1, \"npc\"), just='center',                    gp=grid::gpar(fontface='bold'))   grid::grid.text('Tcl', x=x_Tcl, y=grid::unit(1, \"npc\"), just='center',                    gp=grid::gpar(fontface='bold'))   for (i in 1:nrow(df_diff)) {       y <- grid::unit(1, \"npc\") - grid::unit(i*1.2, \"lines\")       grid::grid.text(rownames(df_diff)[i], x=x_col, y=y, just='left')       grid::grid.rect(x=x_R, y=y, width=grid::unit(3, \"line\"),                 height=grid::unit(1, \"line\"), gp=grid::gpar(fill=df_diff[i,1]))       grid::grid.rect(x=x_Tcl, y=y, width=grid::unit(3, \"line\"),                 height=grid::unit(1, \"line\"), gp=grid::gpar(fill=df_diff[i,2]))   } }"},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-142","dir":"Changelog","previous_headings":"","what":"loon 1.4.2","title":"loon 1.4.2","text":"Addresses minor documentation issues: Added system requirement Tcl/Tk = 8.6 (current version packaged R 8.6.x) Added documentation (internal) functions now exported.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-141","dir":"Changelog","previous_headings":"","what":"loon 1.4.1","title":"loon 1.4.1","text":"CRAN release: 2023-06-15 Addresses minor issue: Issue: Despite setting connectedScales parameter “none”, every loon plot continued share identical scales. Cause: due connectedScales parameter passed function, leading failure logical check.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-140","dir":"Changelog","previous_headings":"","what":"loon 1.4.0","title":"loon 1.4.0","text":"CRAN release: 2022-03-12 Minor changes additions Added \"loon.shiny\" l_web() now appears part diveR package Added arguments l_hist() character vectors factors. Now factors ALWAYS created placed layer. Factor layer simply hidden showFactors = FALSE flexibility given user terms factor text size, angle rotation, colour Changed default y positions 0 labels disappear switch yshows = \"density\".","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-139","dir":"Changelog","previous_headings":"","what":"loon 1.3.9","title":"loon 1.3.9","text":"CRAN release: 2022-02-07 minor changes facets: facet_wrap, number facet variables increase, layout pattern consistent (e.g., one variable: layout row; one variables: layout column). fix typos: “extent” –> “extend”","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-138","dir":"Changelog","previous_headings":"","what":"loon 1.3.8","title":"loon 1.3.8","text":"CRAN release: 2021-09-27 Removed vignette “Example analysis” minority data make room new vignette “Publishing loon plots” New helper functions changing grobs produced loonGrob() l_instantiateGrob, l_setGrobPlotView, l_updateGrob Export useful helper functions: glyph_to_pch: turn loon point glyph R graphics plotting “character”. get_display_color: return displayed color. as_hex6color: return 6 hexidecimal digit color representations. get_font_info_from_tk: return font information. get_layer_states: get layer states get_model_display_order: get order displayed elements, e.g., points scatterplot lines serialaxes. tcl_img_2_r_raster: turn tk image object R raster object. char2num.data.frame: character data frame numerical data frame.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-137","dir":"Changelog","previous_headings":"","what":"loon 1.3.7","title":"loon 1.3.7","text":"CRAN release: 2021-06-14 new function l_colorName exported returns build-color names based 12 6 hex code. loonGrob, remove lines base tick marks","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-136","dir":"Changelog","previous_headings":"","what":"loon 1.3.6","title":"loon 1.3.6","text":"CRAN release: 2021-05-10 fixed printing bug just introduced change facets.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-135","dir":"Changelog","previous_headings":"","what":"loon 1.3.5","title":"loon 1.3.5","text":"CRAN release: 2021-05-06 l_web() now expanded provide access loon related package documentation great-northern-diver github organization’s set repositories (anticipation putting diveR CRAN) Improved look compound displays. (lot result changes loon.ggplot package). Includes new arguments plotWidth plotHeight l_facet() l_pairs() look labels (identifying facetted rows columns) facetted displays now loon consistent default argument look ; .e. now standardized via l_getOption() (e.g. bg = l_getOption(\"canvas_bg_guides\")) meaningful names given grobs facets. (loonGrob()) initial tk window sizes now larger (500 x 500 instead 200 x 200)","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-134","dir":"Changelog","previous_headings":"","what":"loon 1.3.4","title":"loon 1.3.4","text":"CRAN release: 2021-03-16 new vignette “Logical queries interactive graphics” Explains use loon’s interactive plots inspector construct logical queries displayed data. enriched version mtcars used illustration. plot’s linkingKey (Loon’s linking model) can used access correct elements logical operation also described. minor bug fixes improvements Three minor bug fixes facets formula loon n-dimensional states, need provide additional data, formula able converted data frame given states info. missing values, treated n-dimensional states: drop NAs, leave warnings (one removed) Removed unnecessary warnings. l_pairs() progress bar constructing, linking, connecting scales plots. now new argument showProgressBar allows suppressed (e.g. RMarkdown files) histograms factors character vectors: default setting arg showFactors previously: TRUE whenever number factor levels (equivalent unique strings) < 10 now: TRUE whenever < 25 accomodate common factors like month 24 hours day. updated documentation l_layer() testing examples wrapped (interactive), check interactive examples ensure work well hexadecimal colours seem get slightly (generally ignorable) different hexadecimal values colours tcltk Solaris (see 1.3.3 comments). caused problems testing exact colours Solaris. sorted , testing colour hex values test suite commented prevent loon unnecessarily archived CRAN. (colours correct, previous solution generated warnings, may cause problems CRAN acceptance.) Likely, future, suppress warning l_hexcolor() testing. iris dataset tests, drop observation species, number observations different.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-133","dir":"Changelog","previous_headings":"","what":"loon 1.3.3","title":"loon 1.3.3","text":"CRAN release: 2021-02-25 extremely minor update test functions changed accommodate possibly inconsistent hex colours Solaris OS. example, Solaris , hex12 color “red” appears “#FFFF00000000” “#FF0000000000”. can lead failures testing equality hex12 strings (though appeared creating hex12 version R’s “red” TCL, l_hexcolor(\"red\")) hex 12 representations convert hex 6 “#FF0000”. , hex12tohex6(\"#FFFF00000000\") hex12tohex6(\"#FF0000000000\") return \"#FF0000\" except second also generates warning. also took opportunity give meaningful names grobs loonGrob() called l_compound update documentation summary l_plot_arguments include arguments , , layout, connectedScales related facetting plots creation. wrap examples Bin_cut (interactive()) {}","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-132","dir":"Changelog","previous_headings":"","what":"loon 1.3.2","title":"loon 1.3.2","text":"CRAN release: 2021-02-23 Updated linking natural Problem: plot p1 say already exists participates linking group, say “mylinkingGroup”, creating new plot linking group via command line console (using inspector) decisions syncing new plot’s linked states need made. end, new plot can make decisions via argument sync p2 <- l_plot(x, linkingGroup = \"myLinkingGroup\", sync = \"pull\", ...) p2 <- l_plot(x, linkingGroup = \"myLinkingGroup\", sync = \"push\", ...) value sync given, default sync = \"pull\", idea user intends pull linkable state values indicated p2 join group time creation. considered happens , remaining ... arguments, user simultaneously includes values linkable states color = \"red\". solution tries infer intention user, can, warn . Solution: Suppose p1 exists plot linkingGroup = \"myLinkingGroup\" user now creating new plot, say p2, argument linkingGroup = \"myLinkingGroup\" given call create p2. argument sync = \"push\" given call, linkable states explicitly given part call: explicitly given values pushed members group; explicitly given explicitly pushed. linkable states explicitly given part call: linkable states default values pushed group warning given. argument sync = \"pull\" (either default explicitly given \"pull\") values explicitly specified linkable states, ignored, different values states shared group, warning given. loon histogram, input list, histogram split multiple panels. x facet corresponds element list new feature added l_serialaxes(..., andrews = TRUE) produce Andrews’s Fourier functional curves data. new statistical layer l_layer_smooth generate smooth active points add layer Minor bugs fixed/improvements made allowing single point plot drawn polygon glyph pairs pan zoom work histograms shown diagonal progress bars added pairs (l_compounds) lot plots constructed. compound plots (e.g. pairs plots) now accept parent can later packed part complex user defined plot","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-131","dir":"Changelog","previous_headings":"","what":"loon 1.3.1","title":"loon 1.3.1","text":"CRAN release: 2020-06-17 Added new functions l_loonWidgets() returns widgets displayed loon plots. Related functions include l_basePaths() l_compoundPaths l_getFromPath() Fixed bug l_make_glyphs() works Mac OS Catalina (Thanks Brian Ripley Simon Urbanek) Cool new example produces Periodic Table Elements scatterplot (data “elements” loon.data package). Actually see periodicity brushing. minor bug fix respect facet label layout “color”, “size”, “linewidth”, “glyph”, added ‘l_userOptions()’ default “color”, “size”, “linewidth”, “glyph”, etc. now set look default ‘l_getOption(“linewidth”)’ etc. allows user change default look plots simply using ‘l_setOption(“color”, “black”)’ example.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-130","dir":"Changelog","previous_headings":"","what":"loon 1.3.0","title":"loon 1.3.0","text":"CRAN release: 2020-05-24 NAs now accommodated histograms recognize factors produce barplots l_plot() l_hist() now accept arguments facet new vignettes better organized reference manual via l_web() seems problem tcltk function tkimage.create() tkimage.create() function works older .png files seemingly newer ones l_make_glyphs() calls l_image_import_files() although still create necessary png files, may fail read back . problem observed (unreliably) work png processed outside R. demo(“l_make_glyphs”) removed","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-1239000","dir":"Changelog","previous_headings":"","what":"loon 1.2.3.9000","title":"loon 1.2.3.9000","text":"replaced l_saveStates reasoning name change name used Python release functionality introduced l_getSavedStates() read states (instead readRDS reason ). Fixed reading labels retrieve raw characters braces etc. can appear labels updated l_hist.factor layer factor level labels appear corresponding bar","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-123","dir":"Changelog","previous_headings":"","what":"loon 1.2.3","title":"loon 1.2.3","text":"CRAN release: 2019-10-16 saves named states disk later retrieval (e.g. Rmarkdown) copies info_state values source target. basic states excluded can overridden.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-122","dir":"Changelog","previous_headings":"","what":"loon 1.2.2","title":"loon 1.2.2","text":"CRAN release: 2019-03-23 added l_plot3D contributed Martin Gauch (rwo) l_pairs linking issues arguments histograms serialaxes display fixed added new vignette “loon RMarkdown” tidied others new demo(l_make_glyphs) illustrate statistical glyphs tiny new data set oliveLocations lat long olive data growing areas (used demo) tidied couple demos (superficially)","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-121","dir":"Changelog","previous_headings":"","what":"loon 1.2.1","title":"loon 1.2.1","text":"CRAN release: 2018-12-10 provide meaningful grobs (including better descriptions informative “empty” grobs). added condGrob() effect conditional construction either desired grob (visible loon plot) empty grob placeholder containing relevant arguments introduced method plot.loon() plot(p) loon plot p now draw corresponding grid object current device","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-120","dir":"Changelog","previous_headings":"","what":"loon 1.2.0","title":"loon 1.2.0","text":"CRAN release: 2018-09-30 added loonGrob() grid.loon() functionality loon plot can now converted saved grid graphics object permits printing/exporting snapshots loon plots documentation S3 class structure extended loon plots l_compound classes introduced ease user creation complex layouts includes simple programming interface extend loonGrob() user-defined converted current compound layouts new l_compound model (e.g. l_pairs, l_stl) l_getPlots returns list loon plots display (works simple loon plots ) l_getLocations returns matrix showing location loon plots (order) (works simple loon plots ) implemented simple loon plots (perhaps ) loonGrob_layoutType returns string indicating whether \"location\" \"arrangeGrobArgs” used creating grid version l_compound. (default \"locations\", possibility \"arrangeGrobArgs\" Fixed widget handle class order: specific classes first. l_hexcolor.R l_plot_decomposed_ts l_cget l_configure now generics methods objects class loon, character, l_compound. New functions l_getOption, l_getOptionNames, l_userOptions, l_userOptionDefault, l_setOption New function l_primitiveGlyphs names loon object handles print state names. l_state_names can used alternatively","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-110","dir":"Changelog","previous_headings":"","what":"loon 1.1.0","title":"loon 1.1.0","text":"CRAN release: 2017-07-26 first release CRAN itemlabel itemLabel showItemlabels showItemLabels unexported l_nestedTclList2Rlist l_data remove local copy website make l_help point official website.","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-101","dir":"Changelog","previous_headings":"","what":"loon 1.0.1","title":"loon 1.0.1","text":"Bug fix geodesic2d 4d transitions","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-091","dir":"Changelog","previous_headings":"","what":"loon 0.9.1","title":"loon 0.9.1","text":"Bug fix layering maps (sp classes) asSingleLayer=TRUE Bug fix scale_image","code":""},{"path":"https://great-northern-diver.github.io/loon/news/index.html","id":"loon-09","dir":"Changelog","previous_headings":"","what":"loon 0.9","title":"loon 0.9","text":"initial beta release general public","code":""}]
