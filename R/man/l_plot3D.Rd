% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/l_plot3D.R
\name{l_plot3D}
\alias{l_plot3D}
\title{Create an interactive loon 3d plot widget}
\usage{
l_plot3D(x, y, z, ...)
}
\arguments{
\item{x}{the coordinates of points in the plot. Alternatively, a
      single plotting structure, function or \emph{any \R object with a
        \code{plot} method} can be provided.}

\item{y}{the y coordinates of points in the plot, optional if x is an appropriate structure.}

\item{z}{the z coordinates of points in the plot, optional if x is an appropriate structure.}

\item{...}{named arguments to modify plot states.}

\item{axisScaleFactor}{the amount to scale the axes at the centre of the rotation. Default is 1.
All numerical values are acceptable (0 removes the axes, < 0 inverts the direction of
all axes.)}

\item{color}{colours of points; colours are repeated until matching the number points,}

\item{glyph}{shape of point; must be one of the primitive glyphs
             "circle", "ccircle", "ocircle", "square", "csquare", "osquare", "triangle", "ctriangle",
             "otriangle", "diamond", "cdiamond", or "odiamond".

             Prefixes "c" and "o" mean closed and open, respectively.
             Default is "ccircle" meaning a closed circle glyph.

             Non-primitive glyphs such as polygons, images, text, point ranges, and even interactive glyphs like
             serial axes glyphs may be added, but only after the plot has been created.}

\item{size}{size of the symbol (roughly in terms of area)}

\item{active}{a logical determining whether points appear or not
(default is TRUE for all points). If a logical vector is given of length
equal to the number of points, then it identifies which points appear (TRUE)
and which do not (FALSE).}

\item{selected}{a logical determining whether points appear selected at first
(default is FALSE for all points). If a logical vector is given of length
equal to the number of points, then it identifies which points are (TRUE)
and which are not (FALSE).}

\item{xlabel}{Label for the horizontal (x) axis. If missing,
one will be inferred from \code{x} if possible.}

\item{ylabel}{Label for the vertical (y) axis. If missing,
one will be inferred from \code{y} (or \code{x}) if possible.}

\item{title}{Title for the plot, default is an empty string.}

\item{showLabels}{logical to determine whether axes label (and title) should be presented.}

\item{showScales}{logical to determine whether numerical scales should
be presented on both axes.}

\item{showGuides}{logical to determine whether to present background guidelines
to help determine locations.}

\item{guidelines}{colour of the guidelines shown when \code{showGuides = TRUE} (default "white").}

\item{guidesBackground}{colour of the background to the guidelines shown when
\code{showGuides = TRUE} (default "grey92").}

\item{foreground}{foreground colour used by all other drawing (default "black").}

\item{background}{background colour used for the plot (default "white")}

\item{parent}{a valid Tk parent widget path. When the parent widget is
specified (i.e. not \code{NULL}) then the plot widget needs to be placed using
some geometry manager like \code{\link{tkpack}} or \code{\link{tkplace}} in
order to be displayed. See the examples below.}
}
\value{
widget handle
}
\description{
\code{l_plot3D} is a generic function for creating interactive
  visualization environments for \R objects.
}
\details{
\ifelse{html}{
\out{<div style="background: #dff0d8; padding: 15px;"> To get started with loon it is recommended to read loons website
  which can be accessed via the <code>l_help()</code> function call. </div>
}}{
To get started with loon it is recommended to read loons website
  which can be accessed via the \code{l_help()} function call.
}


  \if{html}{ The general direct manipulation and interaction gestures are
  outlined in the following figures.

  Rotating

  Press 'R' to toggle rotation mode.
  When rotation mode is active, either use the below mouse gestures or arrow keys to rotate the plot.

  \figure{gestures_rotate.png}{options: alt="Rotate gestures"}

  The centre of the rotation can be changed by panning the plot.
  To reset the rotation, use the tripod icon in the plot inspector.

  Zooming and Panning

  \figure{gestures_zoom_pan.png}{options: alt="Zoom pan gestures"}

  Selecting Points/Objects

  \figure{gestures_select.png}{options: alt="Select gestures"}

  Moving Points on the Scatterplot Display

  \figure{gestures_move.png}{options: alt="Move gestures"}

  }

  NOTE: Although it is possible to programmatically add layers to an l_plot3D, these will not
  appear as part of the 3D plot's display. There is no provision at present to incorporate
  rotation of 3D geometric objects other than point glyphs.
}
\examples{

with(quakes,
     l_plot3D(long, lat, depth, linkingGroup = "quakes")
)


with(l_scale3D(quakes),
     l_plot3D(long, lat, depth, linkingGroup = "quakes")
)

scaled_quakes <- l_scale3D(quakes)
with(scaled_quakes,
          l_plot3D(long, lat, depth, linkingGroup = "quakes")
)

with(scaled_quakes,
     l_plot3D(mag, stations, depth, linkingGroup = "quakes")
)

# Or together:
with(scaled_quakes,{
     l_plot3D(long, lat, depth, linkingGroup = "quakes")
     l_plot3D(mag, stations, depth, linkingGroup = "quakes")
     }
)


# Get an R (grid) graphics plot of a loon plot
p <- with(scaled_quakes,
          l_plot3D(long, lat, depth, linkingGroup = "quakes"))
plot(p)
# or with more control about grid parameters
grid.loon(p)
# or to save the grid data structure (grob) for later use
pg <- loonGrob(p)

# Use with other tk widgets
tt <- tktoplevel()
p1 <- l_plot3D(parent=tt, x=c(1,2,3), y=c(3,2,1), z=c(1,2,3))
p2 <- l_plot3D(parent=tt, x=c(4,3,1), y=c(6,8,4), z=c(3,2,1))

tkgrid(p1, row=0, column=0, sticky="nesw")
tkgrid(p2, row=0, column=1, sticky="nesw")
tkgrid.columnconfigure(tt, 0, weight=1)
tkgrid.columnconfigure(tt, 1, weight=1)
tkgrid.rowconfigure(tt, 0, weight=1)

tktitle(tt) <- "Loon plots with custom layout"
}
\seealso{
\code{\link{l_info_states}}
}
